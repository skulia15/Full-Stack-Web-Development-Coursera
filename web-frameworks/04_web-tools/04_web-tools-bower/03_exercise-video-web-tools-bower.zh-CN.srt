1
00:00:02,394 --> 00:00:07,450
在这个练习里面 我们会探索 Bower 的大量细节

2
00:00:07,450 --> 00:00:11,870
首先我们要在电脑里安装 Bower

3
00:00:11,870 --> 00:00:16,070
然后 我们我们会使用 Bower 来自动获取 Bootstrap 

4
00:00:16,070 --> 00:00:19,080
以及 Font Awesome

5
00:00:19,080 --> 00:00:23,835
最后 我们要把这些通过 Bower 获取的组件

6
00:00:23,835 --> 00:00:27,259
用在我们的网页上

7
00:00:27,259 --> 00:00:30,696
现在你可能会问 我们已经有Font Awesome的文件

8
00:00:30,696 --> 00:00:34,940
我们也已经有Bootstrap的文件了 
为什么又要重新再来一次呢 ?

9
00:00:35,960 --> 00:00:37,380
主要的原因是

10
00:00:37,380 --> 00:00:42,230
了解 Bower 如何将这个过程自动化的

11
00:00:43,260 --> 00:00:49,670
当然 在接下来的几课中

12
00:00:49,670 --> 00:00:53,690
你会越来越清楚地看到

13
00:00:53,690 --> 00:00:57,890
为什么这些工具对你工作流程的系统化是至关重要的

14
00:01:00,950 --> 00:01:05,810
安装 Bower 的时候 我们需要将它安装为

15
00:01:05,810 --> 00:01:10,010
全局 Node 组件 或者说全局 Node 模块

16
00:01:10,010 --> 00:01:15,350
要做到这点 我们要在命令行中输入

17
00:01:15,350 --> 00:01:21,060
npm install -g 
-g的意思是全局(global)

18
00:01:21,060 --> 00:01:22,260
然后 再输入 bower

19
00:01:23,880 --> 00:01:29,120
再一次提醒 如果你在用 Mac 或者 Linux 机器的话

20
00:01:29,120 --> 00:01:34,770
那你要在这个命令前面加上 sudo 命令

21
00:01:34,770 --> 00:01:38,649
因为我在用 Mac

22
00:01:38,649 --> 00:01:42,850
所以我把 sudo 命令加在这里

23
00:01:44,690 --> 00:01:50,031
然后按下回车键

24
00:01:50,031 --> 00:01:54,550
稍等一下

25
00:01:54,550 --> 00:02:01,030
直到 Node 把 Bower 下载完成并且安装为全局模块

26
00:02:04,650 --> 00:02:09,000
安装完成后 Bower 就可以使用了

27
00:02:11,210 --> 00:02:19,600
我们看到 NPM 利用了这个叫做 package.json 的清单文件

28
00:02:19,600 --> 00:02:25,050
与此相似 Bower 也利用一个叫做 bower.json 的文件

29
00:02:25,050 --> 00:02:33,120
来追踪你在当前项目中使用的所有组件

30
00:02:33,120 --> 00:02:36,910
我们会建立这个 bower.json 文件

31
00:02:36,910 --> 00:02:41,560
要做到这一点 你可以打开一个已有的 bower.json 文件

32
00:02:41,560 --> 00:02:42,570
然后复制里面的内容

33
00:02:43,570 --> 00:02:46,740
现在我要向你展示的建立 bower.json 文件的方法

34
00:02:46,740 --> 00:02:49,860
是使用 bower init 命令

35
00:02:49,860 --> 00:02:55,200
当你在命令提示符窗口里输入 bower init 的时候

36
00:02:55,200 --> 00:03:00,650
它会问你一系列的问题 并且为你初始化 bower.json 文件

37
00:03:00,650 --> 00:03:02,010
让我们过一下这个流程

38
00:03:14,674 --> 00:03:18,240
名字的话我会用 conFusion

39
00:03:18,240 --> 00:03:22,610
这是我们到目前为止一直在构建的网站项目

40
00:03:22,610 --> 00:03:26,382
至于版本号 我会用1

41
00:04:12,200 --> 00:04:13,120
到作者名

42
00:04:13,120 --> 00:04:17,270
你可以输入你自己的名字 这不重要 输入什么都可以

43
00:04:35,370 --> 00:04:40,950
当你输入完 Bower 所有提问的答案时

44
00:04:40,950 --> 00:04:44,771
就有一个 bower.json 文件为你建立好了

45
00:04:44,771 --> 00:04:51,249
现在这个 bower.json 文件在 conFusion 文件夹里

46
00:04:56,050 --> 00:04:59,665
让我们检查一下这个 bower.json 文件的内容

47
00:04:59,665 --> 00:05:01,305
就是刚刚建立的这个

48
00:05:01,305 --> 00:05:07,255
在这个我刚刚用 Brackets 打开的文件里

49
00:05:07,255 --> 00:05:11,615
可以看到它包含了我们输入的所有信息

50
00:05:11,615 --> 00:05:14,630
这个文件以 JSON 的格式存储

51
00:05:14,630 --> 00:05:19,650
所以它总是一个关键词和一个值的配对

52
00:05:21,710 --> 00:05:26,920
在这个文件里你会留意到 "name" 已经被赋值为 "conFusion"

53
00:05:26,920 --> 00:05:32,130
还有 "vesion" "description" 都是我们输入 bower init 之后

54
00:05:32,130 --> 00:05:33,940
回答的问题

55
00:05:33,940 --> 00:05:37,890
因此这里保存了所有的这些信息

56
00:05:37,890 --> 00:05:44,180
现在 我们准备要安装一些

57
00:05:44,180 --> 00:05:50,350
构建网站所需的组件

58
00:05:50,350 --> 00:05:55,859
让我们来看看怎么利用 Bower 来安装 Bootstrap

59
00:06:00,160 --> 00:06:04,833
要做到这个 我们要在命令行中输入

60
00:06:04,833 --> 00:06:09,371
bower install bootstrap -S

61
00:06:09,371 --> 00:06:17,130
这个 -S 的参数是把安装信息保留到我的 bower.json 文件的

62
00:06:17,130 --> 00:06:18,770
当我完成了安装

63
00:06:18,770 --> 00:06:23,640
我们可以检查一下 bower.json 文件 看看它是怎样被更新的

64
00:06:25,150 --> 00:06:33,030
让我们按下回车键 观察 Bower 为我们获取 Bootstrap 的文件

65
00:06:33,030 --> 00:06:38,250
当 Bower 从 git 仓库 (git depository) 中获取 Bootstrap 文件时

66
00:06:38,250 --> 00:06:41,900
它发现 Bower 依赖于 jQuery

67
00:06:41,900 --> 00:06:47,440
因此 Bower 会自动获取 jQuery 为我们解决这个依赖问题

68
00:06:47,440 --> 00:06:52,287
下一个我们需要的是 font-awesome

69
00:06:52,287 --> 00:06:57,188
要获取 font-awesome, 我们要在命令提示符窗口里输入

70
00:06:57,188 --> 00:07:01,972
bower install font-awesome -S

71
00:07:01,972 --> 00:07:05,639
坐下来慢慢等

72
00:07:05,639 --> 00:07:10,880
等 Bower 为我们获取 font-awesome 文件

73
00:07:10,880 --> 00:07:11,710
好了。

74
00:07:11,710 --> 00:07:16,310
我们准备好了所有东西 可以继续我们的项目了

75
00:07:19,160 --> 00:07:24,610
为了理解 Bower 做了什么 让我们进入 conFusion 文件夹

76
00:07:24,610 --> 00:07:28,130
你会留意到 conFusion 文件夹里

77
00:07:28,130 --> 00:07:31,900
有一个文件夹叫做 bower_components

78
00:07:31,900 --> 00:07:35,620
让我们进入 bower_components 文件夹 看看里面有什么

79
00:07:38,010 --> 00:07:40,070
进入 bower_components 文件夹之后

80
00:07:40,070 --> 00:07:42,700
你会看到这里有三个文件夹

81
00:07:42,700 --> 00:07:45,760
分别是 bootstrap, font-awesome 以及 jquery

82
00:07:45,760 --> 00:07:49,203
让我们进入到 bootstrap 文件夹 看看里面有什么

83
00:07:52,300 --> 00:07:59,300
在 bootstrap 文件夹里 你可以看到里面有一大堆文件

84
00:07:59,300 --> 00:08:04,000
你会留意到这里有一个 package.json 文件

85
00:08:04,000 --> 00:08:08,600
这是我们所熟悉的 然后还有一个 bower.json 文件

86
00:08:08,600 --> 00:08:13,440
尤其让我感兴趣的这个叫做 dist 的文件

87
00:08:13,440 --> 00:08:19,090
这是一个包含了 bootstrap 文件的发布 (distribution) 文件夹

88
00:08:19,090 --> 00:08:22,560
可以直接用在我们的网页上

89
00:08:22,560 --> 00:08:27,550
当我们进入这个 distribution 文件夹 你会看到里面有三个文件夹

90
00:08:27,550 --> 00:08:29,940
分别是 css, fonts 和 js

91
00:08:29,940 --> 00:08:34,000
记得我们最初下载 ZIP 文件形式的 Bootstrap 时

92
00:08:34,000 --> 00:08:38,400
这个 Bootstrap 的 ZIP 文件就包含了这些东西

93
00:08:38,400 --> 00:08:42,840
因此当我们进入 css 文件夹 你会看到所有的 Bootstrap 文件

94
00:08:42,840 --> 00:08:46,160
js文件夹和fonts文件夹也一样

95
00:08:51,120 --> 00:08:57,855
回到上级目录 进入 font-awesome 文件夹 你会再一次看到

96
00:08:57,855 --> 00:09:04,305
里面有早前我们下载的 font-awesome 的 ZIP 压缩包里面的所有内容

97
00:09:04,305 --> 00:09:06,135
它们已经在这里了

98
00:09:06,135 --> 00:09:10,495
Bower 在幕后为我们完成了所有工作 获取了所有文件

99
00:09:16,700 --> 00:09:20,030
相似地 就像我提到的那样

100
00:09:20,030 --> 00:09:23,710
Bower 发现 Bootstrap 依赖于 jQuery

101
00:09:23,710 --> 00:09:28,010
于是它就自动地为我们获取了 jQuery

102
00:09:28,010 --> 00:09:30,600
将它安装在 bower_components 文件夹里

103
00:09:30,600 --> 00:09:32,895
所以你可以看到 jquery 文件夹在这里

104
00:09:32,895 --> 00:09:40,034
而 jquery 文件夹里面 有一个 distribution 文件夹

105
00:09:40,034 --> 00:09:45,660
里面包含了 jQuery 的 JavaScript 文件

106
00:09:45,660 --> 00:09:49,170
现在 回到 conFusion 文件夹 我们准备要

107
00:09:49,170 --> 00:09:54,460
检查一下我们之前看到的 bower.json 文件的内容了

108
00:09:56,480 --> 00:10:01,140
回到这个 bower.json 文件 如果你向下滚动 你会发现

109
00:10:01,140 --> 00:10:06,960
Bower 写入了一些额外的信息到这个 bower.json 文件

110
00:10:06,960 --> 00:10:10,709
在这里 这些信息存储在 "dependencies" (依赖) 关键词下

111
00:10:10,709 --> 00:10:15,514
这个关键词下面记录了 bootstrap

112
00:10:15,514 --> 00:10:20,742
3.3.5 也就是3.3.5版

113
00:10:20,742 --> 00:10:25,700
而 font-awesome则是版本4.4.0

114
00:10:25,700 --> 00:10:30,352
现在 Bower已经在 bower.json 文件中

115
00:10:30,352 --> 00:10:35,040
记录下这个特定的项目依赖于 Bootstrap 和 Font-Awesome

116
00:10:35,040 --> 00:10:38,320
这就是记录在 "dependencies" (依赖) 那里的信息

117
00:10:40,440 --> 00:10:44,480
你会问 bower.json 文件有什么用?

118
00:10:44,480 --> 00:10:46,630
我很快就会把它的用处展示给你看

119
00:10:46,630 --> 00:10:53,600
让我们先回到 conFusion 文件夹 
然后进入 bower_components 文件夹

120
00:10:53,600 --> 00:10:57,396
我将选中所有这些文件夹然后把它们删除

121
00:10:57,396 --> 00:11:02,110
然后我们让 Bower 帮我们把所有这些东西下载回来

122
00:11:02,110 --> 00:11:09,830
现在 我们已经清空了 bower_components 文件夹

123
00:11:09,830 --> 00:11:16,180
如果想要 Bower 来安装所有这些东西 我们可以去命令行

124
00:11:16,180 --> 00:11:21,226
只需要输入 bower install, Bower就会自动

125
00:11:21,226 --> 00:11:27,270
为你获取所有的程序包 
并且把它们安装在 bower_components 文件夹里面

126
00:11:27,270 --> 00:11:33,080
现在我输入 bower install

127
00:11:33,080 --> 00:11:38,690
按下回车键, Bower 就会为我们照料好安装所有文件的过程

128
00:11:40,210 --> 00:11:44,940
Bower 是怎么知道去哪里找

129
00:11:46,050 --> 00:11:48,850
要安装的程序包的信息的呢?

130
00:11:50,160 --> 00:11:53,830
这就是 bower.json 的威力所在

131
00:11:55,280 --> 00:12:00,120
记得在 bower.json 文件里面 已经记录下了依赖关系

132
00:12:00,120 --> 00:12:06,760
所以当你输入 bower install 的时候
Bower 就会去查询这个 bower.json 文件

133
00:12:06,760 --> 00:12:13,780
它就会看到当前项目依赖于 Bootstrap 和 Font-Awesome

134
00:12:13,780 --> 00:12:16,600
然后它就会为我们获取些组件

135
00:12:17,890 --> 00:12:21,580
现在 我们回到 bower_components 文件夹

136
00:12:21,580 --> 00:12:24,258
你会发现所有文件都重新出现了

137
00:12:24,258 --> 00:12:29,800
现在 你应该会想知道 这些文件都有什么用呢?

138
00:12:31,570 --> 00:12:34,950
在开发大项目时

139
00:12:34,950 --> 00:12:38,730
经常是一组人一起开发

140
00:12:38,730 --> 00:12:42,020
这些文件必须有版本控制

141
00:12:42,020 --> 00:12:44,100
你可能会用 git 仓库 (git repository)

142
00:12:44,100 --> 00:12:49,480
或者某种形式的版本控制系统来登记这些文件

143
00:12:49,480 --> 00:12:54,680
当你登记这些文件 诸如 Bootstrap, Font-Awesome

144
00:12:54,680 --> 00:12:59,460
还有 jQuery 之类的文件就不必存储在你的版本控制系统里面

145
00:12:59,460 --> 00:13:02,770
因为它们没有依赖 你也没有改变它们

146
00:13:03,770 --> 00:13:07,530
唯一需要安装在你的版本控制系统里面的东西

147
00:13:07,530 --> 00:13:12,500
就是你创建的 HTML, JavaScript 和 CSS 文件

148
00:13:13,660 --> 00:13:17,880
除此之外 你还要设置好你的 bower.json 文件

149
00:13:17,880 --> 00:13:19,980
在你的版本控制系统里

150
00:13:19,980 --> 00:13:24,520
这样 如果别人想在他的电脑里重现

151
00:13:24,520 --> 00:13:28,250
这个工程文件夹的结构 他们只需要去VCS

152
00:13:28,250 --> 00:13:34,050
也就是版本控制系统 把所有文件下载到他们的机器里

153
00:13:34,050 --> 00:13:38,070
完成这一步之后 既然他们已经获得了 bower.json 文件

154
00:13:38,070 --> 00:13:42,200
他们就可以直接在命令提示符窗口里输入 bower install

155
00:13:42,200 --> 00:13:45,150
Bower 就会照料好获取依赖文件的过程

156
00:13:46,460 --> 00:13:51,950
同样的事情对 Node 的程序包也适用

157
00:13:51,950 --> 00:13:55,740
当你使用了存储在本地的 Node 程序包

158
00:13:55,740 --> 00:13:58,999
记得我们之前创建了一个叫做 package.json 的文件

159
00:14:00,370 --> 00:14:04,018
如果你输入 npm install, npm 会查询你的 package.json 文件

160
00:14:04,018 --> 00:14:08,433
然后为你获取所需的 Node 组件

161
00:14:08,433 --> 00:14:12,340
或者是 Node 模块 然后将它们全部安装好

162
00:14:14,730 --> 00:14:19,880
这就是 Bower 的威力 （power） 所在

163
00:14:19,880 --> 00:14:22,020
抱歉 这并不是一个故意的双关语

164
00:14:24,300 --> 00:14:27,422
现在 当我们回去查看我们的文件夹

165
00:14:27,422 --> 00:14:30,975
用 Brackets 或者任何其他文本编辑器

166
00:14:30,975 --> 00:14:35,145
你会发现 bower_components 文件夹已经出现了

167
00:14:35,145 --> 00:14:39,645
进入这个文件夹 然后在发布 (distribution) 文件夹里

168
00:14:39,645 --> 00:14:43,031
我们已经可以看到 css, fonts 和 js 文件夹了

169
00:14:43,031 --> 00:14:49,622
在我们的 index.html 文件中 我们曾经使用早前下载的

170
00:14:49,622 --> 00:14:55,232
CSS 和 JavaScript 文件

171
00:14:55,232 --> 00:15:01,123
现在我们可以简单地将这些文件替换为

172
00:15:01,123 --> 00:15:08,572
bower_components 中发布文件夹里的相应文件

173
00:15:08,572 --> 00:15:12,924
我将把这些文件的每一个替换为

174
00:15:12,924 --> 00:15:16,430
发布文件中的那些文件

175
00:15:16,430 --> 00:15:18,200
这样做有什么好处呢 ?

176
00:15:18,200 --> 00:15:20,370
再一次 就像我说过的那样 
如果你把这些文件登记在版本控制系统里

177
00:15:20,370 --> 00:15:24,350
别人就可以下载这些文件 然后做一个 bower install 就好了

178
00:15:24,350 --> 00:15:28,500
他们不需要手工地获取任何 Bootstrap 或者 

179
00:15:28,500 --> 00:15:30,014
Font-Awesome 文件

180
00:15:30,014 --> 00:15:35,380
相反 这个过程 Bower 已经帮你处理好了

181
00:15:35,380 --> 00:15:38,713
当然这不是我们使用 Bower 的确切方式

182
00:15:38,713 --> 00:15:41,242
但是 Bower 可以帮我们获取所有这些文件

183
00:15:41,242 --> 00:15:46,640
稍后我们还会介绍其他的工具

184
00:15:46,640 --> 00:15:52,090
他们会帮助你建立你的网页并且创建你自己的项目的发布包

185
00:15:52,090 --> 00:15:57,500
然后你可以将这个发布包安装在你的网站服务器上

186
00:15:59,580 --> 00:16:02,940
不过下节课我们再继续讨论这个话题

187
00:16:02,940 --> 00:16:09,420
现在 让我们利用 Bower 为我们获取的文件

188
00:16:11,600 --> 00:16:12,930
回到这些链接

189
00:16:12,930 --> 00:16:17,310
我会将它们替换为 Bower 为我获取的文件

190
00:16:18,310 --> 00:16:24,050
所以在这里我会输入 bower_components

191
00:16:24,050 --> 00:16:27,422
bower_components/bootstrap

192
00:16:27,422 --> 00:16:32,300
然后 dist 然后回车

193
00:16:34,000 --> 00:16:34,800
仅此而已
【教育无边界字幕组】翻译：拖延菌 | 校对：鸭肉松 | 审阅：|就这样

194
00:16:34,800 --> 00:16:42,210
这样 替代使用项目文件夹中 css 文件夹里面的 css 文件

195
00:16:44,960 --> 00:16:48,830
这里使用了 Bower 自动获取的
bower_components 里面的文件

196
00:16:48,830 --> 00:16:54,590
然后我会对 bootstrap-theme 文件

197
00:16:54,590 --> 00:16:57,080
font-awesome 的 CSS文件做同样的替换

198
00:16:58,230 --> 00:17:03,475
通过这些变动 我让 index.html 使用了

199
00:17:03,475 --> 00:17:08,149
Bower 为我们获取
并存储在 bower_components 中的

200
00:17:08,149 --> 00:17:12,180
中的CSS文件

201
00:17:12,180 --> 00:17:16,390
去到页面的底部 我还要替换所有的 JavaScript 文件

202
00:17:16,390 --> 00:17:21,330
改为使用 Bower 获取的那些文件

203
00:17:21,330 --> 00:17:26,170
让我们翻到那里 

204
00:17:26,170 --> 00:17:30,084
我要把 jquery 部分替换为 

205
00:17:31,940 --> 00:17:37,000
bower_components/jquery/dist

206
00:17:37,000 --> 00:17:40,360
你会留意到 jquery.min.js 已经存在了

207
00:17:40,360 --> 00:17:43,500
那个这个 jquery 文件就是我要用的

208
00:17:43,500 --> 00:17:47,804
相似的 对于 bootstrap.min.js 文件 我会替换为

209
00:17:50,335 --> 00:17:56,030
bower_components/boostrap/dist/js/bootstrap.min.js

210
00:17:56,030 --> 00:17:57,930
在这轮替换之后

211
00:17:57,930 --> 00:18:03,530
我们的 index.html 所使用的文件
就全部都是 Bower 为我们获取的

212
00:18:03,530 --> 00:18:05,960
而不是我们早前自行下载的文件

213
00:18:07,720 --> 00:18:11,850
我们还要对 AboutUs.html 和

214
00:18:11,850 --> 00:18:15,890
ContactUs.html 做同样的更新

215
00:18:18,400 --> 00:18:21,100
在完成这些变动之后 如果我们回去

216
00:18:21,100 --> 00:18:25,700
查看我们的网页 你不会发现任何的区别

217
00:18:25,700 --> 00:18:30,560
唯一的区别就是
现在你的网站项目使用了 Bower 获取的文件

218
00:18:30,560 --> 00:18:35,910
而不是我们早前下载的文件

219
00:18:35,910 --> 00:18:40,920
因此通过使用 Bower 你可以节省很多时间

220
00:18:40,920 --> 00:18:43,430
让 Bower 为你代劳

221
00:18:44,680 --> 00:18:49,530
再一次 我们看一下网页 它仍然跟之前一模一样

222
00:18:49,530 --> 00:18:58,080
除了我们现在使用的是 Bower 获取的文件之外
没有任何变化

223
00:18:58,080 --> 00:19:03,600
那么这个练习就完成了 我们学习到了

224
00:19:03,600 --> 00:19:10,450
如何使用 Bower 来自动获取

225
00:19:10,450 --> 00:19:15,600
我们的网站项目所需的程序包和资源文件

226
00:19:17,110 --> 00:19:21,870
在下一节课里 我们会探索其他的工具
翻译: LIYB  | 审阅: Saul Qunming Yuan
Coursera Global Translator Community