1
00:00:02,394 --> 00:00:07,450
In this exercise, we're going to
explore Bower in a lot of detail.

2
00:00:07,450 --> 00:00:11,870
Now, we're going to, first,
install Bower on our computer.

3
00:00:11,870 --> 00:00:16,070
Then, we will use Bower to go and
fetch bootstrap and

4
00:00:16,070 --> 00:00:19,080
find awesome for us automatically.

5
00:00:19,080 --> 00:00:23,835
Then, finally, we are going to
make use of the components that

6
00:00:23,835 --> 00:00:27,259
Bower has already fetched,
in our web page.

7
00:00:27,259 --> 00:00:30,696
Now, you're gonna ask,
we already have the Fantasm files,

8
00:00:30,696 --> 00:00:34,940
we already have the Bootstrap files,
why do you need to do it all over again?

9
00:00:35,960 --> 00:00:37,380
The primary reason for

10
00:00:37,380 --> 00:00:42,230
doing is exercise, is to learn
how Bower automates this process.

11
00:00:43,260 --> 00:00:49,670
Of course, as we go through the next
few courses it becomes increasingly

12
00:00:49,670 --> 00:00:53,690
clear to you why these tools are very,

13
00:00:53,690 --> 00:00:57,890
very essential to get
your workflow organized.

14
00:01:00,950 --> 00:01:05,810
When we install Bower,
we need to install Bower as a global

15
00:01:05,810 --> 00:01:10,010
node competent or global node module.

16
00:01:10,010 --> 00:01:15,350
So to do that we have to type
on the command line, we'll say

17
00:01:15,350 --> 00:01:21,060
npm install -g for global.

18
00:01:21,060 --> 00:01:22,260
And then, we'll say bower.

19
00:01:23,880 --> 00:01:29,120
Now, again, remember,
if you are doing this on a Mac or

20
00:01:29,120 --> 00:01:34,770
a Linux machine, then you should
precede this with the sudo command.

21
00:01:34,770 --> 00:01:38,649
So since I am working on a Mac,

22
00:01:38,649 --> 00:01:42,850
I'm gonna add the sudo to this.

23
00:01:44,690 --> 00:01:50,031
And then, when you hit the return [BLANK

24
00:01:50,031 --> 00:01:54,550
AUDIO] and sit back and

25
00:01:54,550 --> 00:02:01,030
wait until note goes in Fetches Bower and
installs it as a global module.

26
00:02:04,650 --> 00:02:09,000
Once the installation is completed
then Bower is ready for you to use.

27
00:02:11,210 --> 00:02:19,600
We saw that MPM was making use of this
manifest file called package.json.

28
00:02:19,600 --> 00:02:25,050
Similarly, Bower uses a file
called bower.json which

29
00:02:25,050 --> 00:02:33,120
keeps track of all the components that you
are making use in your current project.

30
00:02:33,120 --> 00:02:36,910
So we will build the bower.json file.

31
00:02:36,910 --> 00:02:41,560
So to do that, you could simply look
at an existing bower.json file and

32
00:02:41,560 --> 00:02:42,570
then copy it in.

33
00:02:43,570 --> 00:02:46,740
Now, the way I would show you
to build a bower.json file,

34
00:02:46,740 --> 00:02:49,860
is to use the Bower Init command.

35
00:02:49,860 --> 00:02:55,200
So when you type bower init on
the command prompt, it'll ask you

36
00:02:55,200 --> 00:03:00,650
a bunch of questions and then initialize
the bower.adjacent file for you.

37
00:03:00,650 --> 00:03:02,010
So let's go through that process next.

38
00:03:14,674 --> 00:03:18,240
For the name I'm just gonna
use the name confusion.

39
00:03:18,240 --> 00:03:22,610
That's the web project that
we have been building so far.

40
00:03:22,610 --> 00:03:26,382
And version number, I'll say 1.

41
00:04:12,200 --> 00:04:13,120
For the author name,

42
00:04:13,120 --> 00:04:17,270
you can type in your own name, it doesn't
matter, whatever you want to type.

43
00:04:35,370 --> 00:04:40,950
Once you have typed in all the answers
to the questions that Bower asks,

44
00:04:40,950 --> 00:04:44,771
we will have a bower.json file created for
you.

45
00:04:44,771 --> 00:04:51,249
Now this bower.json file
is in the confusion folder.

46
00:04:56,050 --> 00:04:59,665
Let's now examine the contents
of the bower.json file.

47
00:04:59,665 --> 00:05:01,305
That we just created.

48
00:05:01,305 --> 00:05:07,255
So inside this file I have
opened it in brackets here.

49
00:05:07,255 --> 00:05:11,615
So we can see that it contains all
the information that we typed in.

50
00:05:11,615 --> 00:05:14,630
This file is stored in the JSON format.

51
00:05:14,630 --> 00:05:19,650
So it's always a keyword and
the value there.

52
00:05:21,710 --> 00:05:26,920
Inside this file you can notice that the
name has been given as confusion, version,

53
00:05:26,920 --> 00:05:32,130
description, what we just typed
in when we typed power in it and

54
00:05:32,130 --> 00:05:33,940
answered the questions.

55
00:05:33,940 --> 00:05:37,890
So we have all this
information captured here.

56
00:05:37,890 --> 00:05:44,180
And now, we are going to install some

57
00:05:44,180 --> 00:05:50,350
components that we need in
order to build this webpage.

58
00:05:50,350 --> 00:05:55,859
Let's now see how we can make use
of Bower to install bootstrap.

59
00:06:00,160 --> 00:06:04,833
To do that, at the command line type,

60
00:06:04,833 --> 00:06:09,371
bower install bootstrap with a -S.

61
00:06:09,371 --> 00:06:17,130
Now, the -S is used to save this
information into my bower.json file.

62
00:06:17,130 --> 00:06:18,770
Now, after I finish these,

63
00:06:18,770 --> 00:06:23,640
we are gonna examine the bower.json file
to understand how it has been updated.

64
00:06:25,150 --> 00:06:33,030
So let's hit the return and watch Bower
go and fetch bootstrap files for us.

65
00:06:33,030 --> 00:06:38,250
Now, when Bower fetches the bootstrap
files from the git depository,

66
00:06:38,250 --> 00:06:41,900
it realizes that Bower depends on jquery.

67
00:06:41,900 --> 00:06:47,440
So Bower will automatically go and
fetch jquery and then solve it for us.

68
00:06:47,440 --> 00:06:52,287
The next thing that we
need is font-awesome.

69
00:06:52,287 --> 00:06:57,188
So to fetch font-awesome, we'll type bower

70
00:06:57,188 --> 00:07:01,972
install font-awesome -S, at the prompt.

71
00:07:01,972 --> 00:07:05,639
[BLANK AUDIO] Sit back and wait for

72
00:07:05,639 --> 00:07:10,880
Bower to go and
fetch the font-awesome files.

73
00:07:10,880 --> 00:07:11,710
There you go.

74
00:07:11,710 --> 00:07:16,310
We have everything that we need
to go ahead with our project now.

75
00:07:19,160 --> 00:07:24,610
In order to understand what Bower did,
let's go to our confusion folder and

76
00:07:24,610 --> 00:07:28,130
then you will notice that
in the conFusion folder

77
00:07:28,130 --> 00:07:31,900
there is a folder there
named bower_components, so

78
00:07:31,900 --> 00:07:35,620
let's go into the bower_components
folder and see what it contains.

79
00:07:38,010 --> 00:07:40,070
Going into the bower_components folder,

80
00:07:40,070 --> 00:07:42,700
you'll notice that is
has three folders there.

81
00:07:42,700 --> 00:07:45,760
Bootstrap, font-awesome and jquery.

82
00:07:45,760 --> 00:07:49,203
Let's navigate into bootstrap to see
what is there inside the folder.

83
00:07:52,300 --> 00:07:59,300
Inside the bootstrap folder, you can see
that it contains a whole lot of files.

84
00:07:59,300 --> 00:08:04,000
You can also notice that there
is a package.json file there.

85
00:08:04,000 --> 00:08:08,600
Something that we are familiar with
there is power of adjacent file there.

86
00:08:08,600 --> 00:08:13,440
In particular what is of interest
to me is this folder called dist.

87
00:08:13,440 --> 00:08:19,090
That is the distribution folder
that contains bootstrap files,

88
00:08:19,090 --> 00:08:22,560
that can be directly used in our webpage.

89
00:08:22,560 --> 00:08:27,550
So navigating to the distribution folder,
you see the three folders there,

90
00:08:27,550 --> 00:08:29,940
css, fonts, and js.

91
00:08:29,940 --> 00:08:34,000
Remember when we first fetched
bootstrap as a ZIP file,

92
00:08:34,000 --> 00:08:38,400
this is what was contained
in that Bootstrap ZIP file.

93
00:08:38,400 --> 00:08:42,840
So going into the css folder,
you can see all the bootstrap files there.

94
00:08:42,840 --> 00:08:46,160
Similarly, the JavaScript and
the fonts folders.

95
00:08:51,120 --> 00:08:57,855
Going back up we can now see, inside
the font-awesome folder, you again see

96
00:08:57,855 --> 00:09:04,305
all the font-awesome files that we fetched
earlier from downloading the ZIP file.

97
00:09:04,305 --> 00:09:06,135
They're already here for us.

98
00:09:06,135 --> 00:09:10,495
Bower did all the work behind the scenes
for us and fetched all the files.

99
00:09:16,700 --> 00:09:20,030
Similarly, as I mentioned to you,

100
00:09:20,030 --> 00:09:23,710
bower realizes that bootstrap
is dependent on jQuery.

101
00:09:23,710 --> 00:09:28,010
So bower will automatically go and
fetch jQuery for us, and

102
00:09:28,010 --> 00:09:30,600
install it into the bower
competence folder.

103
00:09:30,600 --> 00:09:32,895
So now you see the jquery folder there.

104
00:09:32,895 --> 00:09:40,034
And inside the jquery folder,
you have the distribution folder,

105
00:09:40,034 --> 00:09:45,660
which contains the jquery
JavaScript files there.

106
00:09:45,660 --> 00:09:49,170
Now, getting back to the conFusion folder,
we are now going to go and

107
00:09:49,170 --> 00:09:54,460
examine the contents of the bower.json
file that we had seen earlier.

108
00:09:56,480 --> 00:10:01,140
Getting back to the bower.json file,
if you scroll down, you'll notice that

109
00:10:01,140 --> 00:10:06,960
bower has installed some additional
information into the bower.json file.

110
00:10:06,960 --> 00:10:10,709
Here, this information is stored
under the keyboard dependencies.

111
00:10:10,709 --> 00:10:15,514
Inside there it has noted that bootstrap

112
00:10:15,514 --> 00:10:20,742
3.3.5, that is version 3.3.5,

113
00:10:20,742 --> 00:10:25,700
and font-awesome version 4.4.0.

114
00:10:25,700 --> 00:10:30,352
Now, bower has already noted in
the bower adjacent file that this

115
00:10:30,352 --> 00:10:35,040
particular project depends upon
Bootstrap and Font-Awesome.

116
00:10:35,040 --> 00:10:38,320
And so that's what is noted
in the dependencies there.

117
00:10:40,440 --> 00:10:44,480
You're gonna ask me,
what is the use of this bower.json file?

118
00:10:44,480 --> 00:10:46,630
Let me show that to you in a minute.

119
00:10:46,630 --> 00:10:53,600
Let's now go back to our conFusion folder
and then go inside the bower_components.

120
00:10:53,600 --> 00:10:57,396
I'm going to select all these folders and
then delete them.

121
00:10:57,396 --> 00:11:02,110
And then, we will make bower go and
fetch all these for us.

122
00:11:02,110 --> 00:11:09,830
[BLANK AUDIO] Now, we have cleaned
out the bower_components folder.

123
00:11:09,830 --> 00:11:16,180
Now, if we want bower to install all this,
we can go at the command line.

124
00:11:16,180 --> 00:11:21,226
We just type bower install, and
the bower will automatically go and

125
00:11:21,226 --> 00:11:27,270
fetch all the packages for you, and
install them in the bower_complex folder.

126
00:11:27,270 --> 00:11:33,080
So now if I type bower
install [BLANK AUDIO] and

127
00:11:33,080 --> 00:11:38,690
hit the Return, bower will take care
of installing all the files for us.

128
00:11:40,210 --> 00:11:44,940
How does bower know where
to find the information

129
00:11:46,050 --> 00:11:48,850
about the packages that
it needs to install?

130
00:11:50,160 --> 00:11:53,830
That is where the bower.json
file comes to our rescue.

131
00:11:55,280 --> 00:12:00,120
Recall that in the bower.json file, we
have the dependencies already noted there.

132
00:12:00,120 --> 00:12:06,760
So when you say bower install, bower is
going to consult the bower.json file, and

133
00:12:06,760 --> 00:12:13,780
then sees that this particular project is
dependent on Bootstrap and Font-Awesome.

134
00:12:13,780 --> 00:12:16,600
So it's gonna go and
fetch all those components for us.

135
00:12:17,890 --> 00:12:21,580
Now, when we go back to our
bower_components folder,

136
00:12:21,580 --> 00:12:24,258
you again see all those files reappear.

137
00:12:24,258 --> 00:12:29,800
Now, you must be wondering,
what's the use of all this?

138
00:12:31,570 --> 00:12:34,950
If you are working on large projects,

139
00:12:34,950 --> 00:12:38,730
very often you will have a team of
people working on this project.

140
00:12:38,730 --> 00:12:42,020
And these files have to
be version controlled, so

141
00:12:42,020 --> 00:12:44,100
you might use a git repository,

142
00:12:44,100 --> 00:12:49,480
or a some form of version control system
where you'll be checking in these files.

143
00:12:49,480 --> 00:12:54,680
Now, when you check in the files,
all these bootstrap, font-awesome,

144
00:12:54,680 --> 00:12:59,460
and jquery files do not need to be
stored in your version control system,

145
00:12:59,460 --> 00:13:02,770
because they are not dependent,
you are not changing them in any way.

146
00:13:03,770 --> 00:13:07,530
So the only things that you install
in your version control system

147
00:13:07,530 --> 00:13:12,500
are the HTML and JavaScript and
CSS files that you created.

148
00:13:13,660 --> 00:13:17,880
In addition, you're gonna install
your bower.json file also.

149
00:13:17,880 --> 00:13:19,980
In your version control system.

150
00:13:19,980 --> 00:13:24,520
So somebody else,
who wants to recreate that

151
00:13:24,520 --> 00:13:28,250
project folder structure on their own
computer, can simply go to the VCS,

152
00:13:28,250 --> 00:13:34,050
the version control system, and
then fetch all the files to their machine.

153
00:13:34,050 --> 00:13:38,070
And then, once they get that, since
they already have the bower.json file,

154
00:13:38,070 --> 00:13:42,200
they can simply type bower install
at the command prompt, and

155
00:13:42,200 --> 00:13:45,150
then bower will take care of
fetching all the files for you.

156
00:13:46,460 --> 00:13:51,950
The same thing applies even for
node packages that you use.

157
00:13:51,950 --> 00:13:55,740
If you are using node packages
that are stored locally,

158
00:13:55,740 --> 00:13:58,999
remember that we had created a packaged or
adjacent file earlier.

159
00:14:00,370 --> 00:14:04,018
If you type nvm install,
nvm will consult your package or

160
00:14:04,018 --> 00:14:08,433
adjacent file and go and fetch all
the node components that you need.

161
00:14:08,433 --> 00:14:12,340
And then, or node modules that you need,
and then install them.

162
00:14:14,730 --> 00:14:19,880
That's where the power
comes to our rescue.

163
00:14:19,880 --> 00:14:22,020
Sorry, that was not a pun intended.

164
00:14:24,300 --> 00:14:27,422
Now, when we go back
to examine our folder,

165
00:14:27,422 --> 00:14:30,975
using either brackets of any text editor,

166
00:14:30,975 --> 00:14:35,145
you would notice that the bower_components
folder has appeared there.

167
00:14:35,145 --> 00:14:39,645
So we can simply go in there and
then in the distribution folder,

168
00:14:39,645 --> 00:14:43,031
we already see the css,
fonts and js fonts there.

169
00:14:43,031 --> 00:14:49,622
So in our index.html page where
we were using the CSS and

170
00:14:49,622 --> 00:14:55,232
the JavaScript files
that we fetched earlier,

171
00:14:55,232 --> 00:15:01,123
we can simply replace those
referring to the files

172
00:15:01,123 --> 00:15:08,572
in the distribution folder of
the bower_components folder.

173
00:15:08,572 --> 00:15:12,924
So I'm going to replace each
one of them by the files in

174
00:15:12,924 --> 00:15:16,430
the distribution folders there.

175
00:15:16,430 --> 00:15:18,200
Now, what's the advantage of this?

176
00:15:18,200 --> 00:15:20,370
Again, as I've said, if you check and

177
00:15:20,370 --> 00:15:24,350
somebody else downloads them,
they can simply do bower install.

178
00:15:24,350 --> 00:15:28,500
They don't need to go and
manually fetch any of those bootstrap or

179
00:15:28,500 --> 00:15:30,014
font-awesome files.

180
00:15:30,014 --> 00:15:35,380
Instead, all this will be taken
care of by bower for you.

181
00:15:35,380 --> 00:15:38,713
Now, of course,
this is not exactly the way we use bower,

182
00:15:38,713 --> 00:15:41,242
but bower helps us to
fetch all these files.

183
00:15:41,242 --> 00:15:46,640
Later on you will see
the other tools coming in.

184
00:15:46,640 --> 00:15:52,090
They will help to build your webpage and
then create a distribution of your own

185
00:15:52,090 --> 00:15:57,500
project, at which you can then
install on your web server.

186
00:15:59,580 --> 00:16:02,940
Hold off on that until we
come to the next course.

187
00:16:02,940 --> 00:16:09,420
But now, let's go in and make use of
the files that bower has fetched for us.

188
00:16:11,600 --> 00:16:12,930
Returning to these links,

189
00:16:12,930 --> 00:16:17,310
I'm gonna replace them with the files
that Bower has fetched for me.

190
00:16:18,310 --> 00:16:24,050
So going in there I will
type in bower_components and

191
00:16:24,050 --> 00:16:27,422
I will say bower- components bootstrap and

192
00:16:27,422 --> 00:16:32,300
then dist, and then enter Return.

193
00:16:34,000 --> 00:16:34,800
That's it.

194
00:16:34,800 --> 00:16:42,210
So instead of using the css files in
the project css folder I am instead using

195
00:16:44,960 --> 00:16:48,830
Competence files that
have been fetched for me.

196
00:16:48,830 --> 00:16:54,590
Same thing I'm gonna do with
the bootstrap theme and

197
00:16:54,590 --> 00:16:57,080
the font-awesome, css files, too.

198
00:16:58,230 --> 00:17:03,475
So with these changes,
I have now made our index.html

199
00:17:03,475 --> 00:17:08,149
page use the ccss files
that Bower has fetched for

200
00:17:08,149 --> 00:17:12,180
me and stored in the bower_components.

201
00:17:12,180 --> 00:17:16,390
Going to the bottom of the page I'm
going to replace all the JavaScript

202
00:17:16,390 --> 00:17:21,330
files also to make use of the files
that bower has fetched for me.

203
00:17:21,330 --> 00:17:26,170
So going in here,
I'm going to replace this

204
00:17:26,170 --> 00:17:30,084
jquery part by saying bower_components.

205
00:17:31,940 --> 00:17:37,000
And jquery and then dist, and

206
00:17:37,000 --> 00:17:40,360
you notice that jquery
min.js already exists there.

207
00:17:40,360 --> 00:17:43,500
So that's the jquery file that
I'm going to make use of.

208
00:17:43,500 --> 00:17:47,804
Similarly, for the bootstrap.min
I will say bower_components.

209
00:17:50,335 --> 00:17:56,030
Bootstrap, distribution,
js, and bootstrap.

210
00:17:56,030 --> 00:17:57,930
But these updates, now,

211
00:17:57,930 --> 00:18:03,530
our index.html page is using the files
that bower has fetched for us.

212
00:18:03,530 --> 00:18:05,960
Interim of the files that
we downloaded earlier.

213
00:18:07,720 --> 00:18:11,850
We should do the same updates
to the AboutUs.html page and

214
00:18:11,850 --> 00:18:15,890
also to the ContactUs.html page.

215
00:18:18,400 --> 00:18:21,100
After making these changes,
if we go back and

216
00:18:21,100 --> 00:18:25,700
look at our webpage,
you won't find any difference.

217
00:18:25,700 --> 00:18:30,560
The only difference now is that your web
project is using the files that Bower

218
00:18:30,560 --> 00:18:35,910
fetched, of the files that
we downloaded earlier.

219
00:18:35,910 --> 00:18:40,920
So by making use of Bower,
you can save yourself a lot of time,

220
00:18:40,920 --> 00:18:43,430
and let Bower do the work for you.

221
00:18:44,680 --> 00:18:49,530
So again, having a look at the webpage,
it's still exactly the same as before.

222
00:18:49,530 --> 00:18:58,080
Nothing changed, except that we
are using files that power fetch.

223
00:18:58,080 --> 00:19:03,600
So this completes this exercise
where we learned how to

224
00:19:03,600 --> 00:19:10,450
make use of power to
fetch the packages and

225
00:19:10,450 --> 00:19:15,600
the assets that we need for
our web project automatically.

226
00:19:17,110 --> 00:19:21,870
We're gonna explore the remaining
tools in the next course.