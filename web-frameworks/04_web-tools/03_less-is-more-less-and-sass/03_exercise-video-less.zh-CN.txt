接下来让我们进行 Less 的练习吧 我相信你会看着 "Exercise Less"
并在心底希冀自己的导师也能这么说 残念的是 少年 在现实生活中
你必须要进行很多练习 咳 玩笑到此为止
让我们正式开始练习使用 Less 这个 CSS 的预处理器 现在先用 Brackets 或你喜欢的文本编辑器
打开我们至今为止做的网站项目 然后进入到 CSS 文件夹并创建
一个叫 mystyles.less 的文件 我们将会在该文件中加进一些 Less 代码 首先 让我定义几个变量 你可以看到我在这定义了几个变量 我定义了好几种颜色变量
和一个高度变量 我将会在之后的 Less 类中应用到它们 接下来 我加进了一个 Less 类
以展示混入的使用 我将该 Less 类命名为了 zero-margin 我相信你已经在之前某节课中
看到过这个类 那么这个类将接受两个参数
pad-up-dn 和 pad-left-right 从字面意思即可知 我将应用它们
来定义该类对应的填充样式 我将会把这个类作为混入的素材 来定义一些 row 相关的类 那么于此 你能看到我定义了
好几个 row 相关的类 我将会在我们的项目中使用它们 你可以看到 这几个类的代码的第一行 都是对 zero-margin 类的引用 然后在最后这里的设置了 zero-margin 参数为
50px 和 0px 的 row-content 和设置了参数为 20px 和 0px 的 row-footer 之后
我还定义了一个 jumbotron 类 总之对不同的角色 我定义了
不同的填充数值 不过我把它们的边缘数值都设置为了 0 总之有了混入之后 我就能重复利用代码了 接下来我定义了一个 carousel 类
来定制我的轮播 在该类中 我用到了我之前定义的某些变量 比如将背景色设为 dark-indigo 这个变量 将其下的 item 的高度设为
carousel-height 这个变量 然后对再其下的 img 的最小高度
也设置为了 carousel-height 这个变量 需要注意的是 这里我用了嵌套
来同时定义了三个类 也就是在 carousel 中嵌了 item 在 item 中嵌了 img 也就是说这段 Less 代码编译成
可用的 CSS 代码后 会变成三段代码 每一段代码
定义了这三个类中的一个 分别是 .carousel, .carousel .item
和 .carousel .item .img 类 这个则是另一个使用嵌套的栗子 我用其来定制我的 navbar-inverse 你可能已经注意到 这些 Less 代码
定制出来的 CSS 类 正是之前我们定义过的 CSS 类 我这么做的原因 是想让你知道 Less 和 CSS 之间的关系 从而今后如果你想用 Less
来定制你的网页时 只要你知道 CSS 该怎么写 你就能更轻易地将其转换成 相应的 Less 代码 总之在这 我定义了一个
navbar-inverse 类 然后在其下 我定义了一系列的类 诸如 .navbar-nav>.active>a 和
其它的一些类 然后最后 我定义了一些类
这些类看上去和之前的 CSS 版本的类差不多 事实上 由于这些类相对独立 既无法让它们利用已有代码
也无法重复利用它们的代码 所以像混入 嵌套这样的 Less 的特色 在它们这里起不了作用 当然了 我还是利用到了一些变量 比如这个 tab-content 类中的颜色属性 我就用到了 lt-gray 这个变量 当你保存好这份 Less 文件 并将其编译成可用的 CSS 文件时 你会发现编译出来的这份 CSS 文件 和我们之前使用的 CSS 文件 一致无二 那么怎么才能编译 Less 文件呢 ? 我们需要用到一个叫 Less 的 全局 node 模块 为了安装这个模块 你需要在命令行中 运行 npm install -g less 其中 -g 是全局模块的标识 意味着正在安装的这个模块 将能被任何项目引用 而毋庸置疑的是, Less 编译器
很有可能在很多项目中有用 所以我们要用 -g 这个标识 如果你是在 Mac 或者 Linux 上
进行这个步骤的话 你需要在这行命令的开头
加上 sudo 这四个字母 如果你用的是 Windows 就不用加 由于我现在用的是 Mac
所以我要加上 sudo 然后如果你用的是 Mac 或是 Linux 你还需要输一下密码 否则你的优先级不足以让你完成
安装全局模块这个操作 而在 Windows 上则不需要输密码 不像 Mac 和 Linux 这么麻烦 然后一切妥当后 npm 会帮你部署好这个模块 那么为什么要安装这个模块呢 ?
因为它提供了一个叫 lessc 的编译器给我们 这个编译器是在命令行使用的 如果你想编译一个 Less 文件 你只需在命令行中键入 lessc xxx 即可
其中 xxx 是你的 Less 文件名 然后 lessc 将会自动帮你完成编译 并生成一个相应的 CSS 文件 让我们实际操作一下吧 你可以看到我键入了 lessc mystyles.less 然后当我敲回车 它就会
生成相应的 CSS 代码 你还可以看到在命令行这里
生成的 CSS 代码被直接打印了出来 接下来 如果我想将这些代码 利用 mystyle.less 的话 我需要先将已有的 mystyle.css 文件 移到另一个文件夹 从而避免它被 mystyle.less 生成出来的
mystyle.css 文件覆盖 如果你对命令行很熟悉
你可以在命令行中完成移动这个操作 在 Mac 和 Linux 上都是可以这样做的 如果在 Windows 上 你可以如图所示般
重命名你想移动的 mystyle.css 这个文件 接下来 我将输入
lessc mystyle.less > mystyle.css 这将会把生成的相应的 CSS 代码 塞进 mystyle.css 这个文件中 然后 系统会自动把 mystyle.css
从 lessc 编译器中移到你的硬盘上 然后最后 你可以打开这个 CSS 文件 并看看里面的代码长啥样 当你打开这个 CSS 文件 你可以看到这和我们之前用的 CSS 文件 长得非常像 所以到此为止
我们学习了如何利用 Less 的优点 来定义一系列的 CSS 类 然后我们学习了如何编译 Less 代码 以上 我们完成了这次练习
我们不仅学习了 Less 代码怎么写 还学习了如何去编译它
【翻译 - Carefree0910】