1
00:00:02,193 --> 00:00:05,132
Let me now talk to you
about how Bootstrap and

2
00:00:05,132 --> 00:00:10,230
JQuery work together to support
the Bootstrap's JavaScript competence.

3
00:00:12,650 --> 00:00:18,400
We saw that Bootstrap's JavaScript
support is through the JS Plugins.

4
00:00:18,400 --> 00:00:21,420
These plugins are written in JQuery.

5
00:00:21,420 --> 00:00:26,622
And we have already seen that the plugins
can be individually included in our

6
00:00:26,622 --> 00:00:31,570
Web page, or collectively,
the entire plugins can be included.

7
00:00:33,450 --> 00:00:37,100
We have also seen the relationship
between JavaScript, JQuery and

8
00:00:37,100 --> 00:00:40,940
Bootstrap's JS components
using this graphic earlier.

9
00:00:42,000 --> 00:00:47,650
We have also seen that the Bootstrap's JS
components can be used without

10
00:00:47,650 --> 00:00:52,850
writing a single line of JavaScript
code by using the data attributes.

11
00:00:52,850 --> 00:00:59,420
But of course,
if we need the full JavaScript API

12
00:00:59,420 --> 00:01:03,860
to be used, then we can do that
too by directly writing code.

13
00:01:03,860 --> 00:01:09,440
Now in this section, we are gonna
examine how we can write JQuery or

14
00:01:09,440 --> 00:01:13,690
JavaScript based code in order to
control the Bootstrap components.

15
00:01:15,080 --> 00:01:18,810
Let me give you a brief
overview of JQuery.

16
00:01:19,840 --> 00:01:23,140
JQuery is a lightweight
JavaScript library.

17
00:01:24,860 --> 00:01:29,500
It is a feature-rich library and
provides a lot of interesting

18
00:01:29,500 --> 00:01:34,270
methods that enable you to do HTML or
DOM manipulation, so

19
00:01:34,270 --> 00:01:39,240
you can modify the HTML elements directly.

20
00:01:39,240 --> 00:01:45,700
It allows you to add and remove CSS
classes and do a lot of CSS manipulation.

21
00:01:45,700 --> 00:01:49,400
It allows you to respond
to HTML events and

22
00:01:49,400 --> 00:01:53,710
upon occurrence of events,
certain code can be executed.

23
00:01:53,710 --> 00:01:56,950
It allows you to do effects and
animations, and

24
00:01:56,950 --> 00:02:01,182
also communicating with
the server using AJAX.

25
00:02:01,182 --> 00:02:04,560
Bootstrap's JavaScript components,

26
00:02:04,560 --> 00:02:07,720
as we have already mentioned,
is built upon JQuery.

27
00:02:09,310 --> 00:02:14,360
Let's briefly understand the JQuery
syntax so that it'll become more

28
00:02:14,360 --> 00:02:20,010
easier to understand how we can control
the Bootstrap's JavaScript components.

29
00:02:20,010 --> 00:02:23,420
Now, the JQuery syntax
starts with a dollar sign.

30
00:02:23,420 --> 00:02:28,370
The dollar sign is defining or
access to JQuery.

31
00:02:29,390 --> 00:02:33,080
Following that, within parentheses,
you will have a selector.

32
00:02:34,250 --> 00:02:40,420
The selector is what allows you to
select a specific HTML element.

33
00:02:40,420 --> 00:02:43,960
There are many different ways
of specifying the selectors,

34
00:02:43,960 --> 00:02:46,360
as we will see in the next slide.

35
00:02:48,150 --> 00:02:52,874
After that, you will specify an action
to be performed on the elements

36
00:02:52,874 --> 00:02:55,367
that match the selection criteria.

37
00:02:55,367 --> 00:03:00,448
So, as example you see that
I have specified within

38
00:03:00,448 --> 00:03:06,488
the selector the value p there,
and then the action as hide.

39
00:03:06,488 --> 00:03:11,180
Meaning that when this code is executed,

40
00:03:11,180 --> 00:03:16,285
all the HTML elements of
tag p will be hidden.

41
00:03:17,310 --> 00:03:20,956
Similarly, the other example allows me to

42
00:03:20,956 --> 00:03:24,814
select the carousel
with the ID mycarousel.

43
00:03:24,814 --> 00:03:28,911
And then make the carousel
pause by specifying

44
00:03:28,911 --> 00:03:33,860
the action as carousel with
the parameter pause there.

45
00:03:35,220 --> 00:03:40,250
Let's take a look at
Bootstrap's JQuery example here.

46
00:03:40,250 --> 00:03:45,780
Now, as you can see, the code is
enclosed inside the script tags.

47
00:03:47,040 --> 00:03:51,780
In this code, you can see that we
have specified that for the document,

48
00:03:51,780 --> 00:03:57,750
when the document is ready,
then the function will be executed.

49
00:03:57,750 --> 00:04:01,110
The function itself is specified
within the parentheses.

50
00:04:01,110 --> 00:04:05,138
The function says that for
those elements for

51
00:04:05,138 --> 00:04:09,908
which the data-toggle
attribute is set to tooltip,

52
00:04:09,908 --> 00:04:14,042
all those elements that
match that criteria,

53
00:04:14,042 --> 00:04:19,760
then that tooltip action will
be executed on those elements.

54
00:04:19,760 --> 00:04:25,370
So, this is the way we saw that
we can enable tooltips for

55
00:04:25,370 --> 00:04:31,040
those elements in which we
include the tooltip attributes.

56
00:04:32,390 --> 00:04:35,640
Briefly, talking about
the JQuery selectors.

57
00:04:35,640 --> 00:04:39,470
You can specify any HTML
element as a selector.

58
00:04:39,470 --> 00:04:45,600
So, any HTML tag, like p, button, etc.,
could be specified as a selector.

59
00:04:45,600 --> 00:04:50,930
Which means that all the elements
whose tags correspond to that

60
00:04:50,930 --> 00:04:54,770
will be selected by this selector.

61
00:04:55,810 --> 00:04:58,730
You can also uniquely identify

62
00:04:58,730 --> 00:05:02,870
a particular element by specifying
the ID of that element.

63
00:05:04,200 --> 00:05:09,010
You can select a whole
set of elements that bear

64
00:05:09,010 --> 00:05:13,340
a certain class or
the CSS class associated with them.

65
00:05:13,340 --> 00:05:22,004
So, you can specify all elements of the
button class type or with button default.

66
00:05:22,004 --> 00:05:26,568
So, you can specify multiple classes and
apply together for

67
00:05:26,568 --> 00:05:30,880
an HTML element only
those will be selected.

68
00:05:30,880 --> 00:05:33,560
You can also specify
based on an attribute.

69
00:05:33,560 --> 00:05:37,509
So, for example, you would say
that an HTML element that contains

70
00:05:37,509 --> 00:05:41,118
the HREF attribute,
only those elements will be selected.

71
00:05:41,118 --> 00:05:45,300
Or, we saw the use of the data-toggle
attribute already for

72
00:05:45,300 --> 00:05:49,810
selecting those elements to which
the tooltip has been applied.

73
00:05:50,840 --> 00:05:55,670
The current element can
be specified as this, so

74
00:05:55,670 --> 00:06:00,370
which means that the current element
will be selected by the selector.

75
00:06:00,370 --> 00:06:04,320
There are a lot more of
these selector approaches.

76
00:06:04,320 --> 00:06:11,070
Users' interactions with
the Web page causes

77
00:06:11,070 --> 00:06:16,830
DOM events, to which JQuery
provides methods to respond.

78
00:06:16,830 --> 00:06:22,033
So, DOM events including mouse clicks,
mouse in and

79
00:06:22,033 --> 00:06:26,197
out of a region, keyboard interactions,

80
00:06:26,197 --> 00:06:32,676
form-related interactions like
clicking on the Submit button or

81
00:06:32,676 --> 00:06:36,493
entering an information into a field,

82
00:06:36,493 --> 00:06:40,810
selecting and de-selecting a field.

83
00:06:40,810 --> 00:06:45,527
Or even, the entire document window

84
00:06:45,527 --> 00:06:50,800
getting loaded, resized, unloaded.

85
00:06:50,800 --> 00:06:58,150
All these would cause DOM events, to which
JQuery provides methods for responding to.

86
00:06:59,920 --> 00:07:05,400
Let's take the example of the Bootstrap
carousel to understand how they can

87
00:07:05,400 --> 00:07:13,630
use Bootstrap's JavaScript methods
together with the jQuery methods.

88
00:07:15,150 --> 00:07:16,780
As we have already learned,

89
00:07:16,780 --> 00:07:22,040
Bootstrap JavaScript components can be
used purely by the data attributes.

90
00:07:22,040 --> 00:07:26,830
So for the carousel itself, there are four
data attributes that can be used,

91
00:07:26,830 --> 00:07:29,670
as shown in this slide here.

92
00:07:30,840 --> 00:07:36,270
For controlling a carousel using
a JavaScript based control,

93
00:07:36,270 --> 00:07:41,527
we can specify,
as you can see in the example here.

94
00:07:41,527 --> 00:07:46,187
You can identify the carousel
by specifying a selector as

95
00:07:46,187 --> 00:07:51,144
the carousel class, and
then use the carousel action on it.

96
00:07:51,144 --> 00:07:55,068
And as an example for the carousel action,

97
00:07:55,068 --> 00:07:58,774
you can specify setting the interval for

98
00:07:58,774 --> 00:08:02,811
slide transitions to be a specified value.

99
00:08:02,811 --> 00:08:09,603
As in this example, the interval being
set to 2,000 milliseconds or 2 seconds.

100
00:08:10,926 --> 00:08:15,459
The other JavaScript controls
that carousel provides for

101
00:08:15,459 --> 00:08:19,530
us is including carousel
with the cycle parameter,

102
00:08:19,530 --> 00:08:24,810
which enables the cycling of
the slides from left to right.

103
00:08:24,810 --> 00:08:31,710
You can use the pause, but I make sure
to stop the carousel from sliding.

104
00:08:31,710 --> 00:08:36,550
You can specify the number
inside the parentheses as zero,

105
00:08:36,550 --> 00:08:42,070
one or two, to specify that you want
to go to that particular slide.

106
00:08:42,070 --> 00:08:45,310
You can say prev and
next to go to the previous and

107
00:08:45,310 --> 00:08:47,340
the next slide from the current slide.

108
00:08:49,250 --> 00:08:54,780
Now, the carousel itself causes
two events to be generated

109
00:08:54,780 --> 00:08:59,420
upon occurrence of certain
events within the carousel.

110
00:08:59,420 --> 00:09:03,150
One of them is the slid.bs.carousel event.

111
00:09:03,150 --> 00:09:07,569
This will be fired when
the slide transition begins.

112
00:09:07,569 --> 00:09:12,204
The slid.bs.carousel event will
be fired when the carousel has

113
00:09:12,204 --> 00:09:15,910
completed that transition
to the next slide.

114
00:09:15,910 --> 00:09:22,292
Now how do we make use of it
within the jQuery methods?

115
00:09:22,292 --> 00:09:28,134
As you see in this example,
you can identify the carousel by its ID,

116
00:09:28,134 --> 00:09:32,044
and then you can specify
the on as the action.

117
00:09:32,044 --> 00:09:35,625
And the on takes as the first parameter,

118
00:09:35,625 --> 00:09:40,902
the event to which this
corresponding function responds.

119
00:09:40,902 --> 00:09:45,360
So in this case, we can say
slid.bs.carousel and the function.

120
00:09:45,360 --> 00:09:47,340
And inside the function,

121
00:09:47,340 --> 00:09:51,840
you can specify what should be
done when that event occurs.

122
00:09:52,880 --> 00:09:57,750
In our next exercise, we are going to look
at Bootstrap and JQuery working together

123
00:09:57,750 --> 00:10:02,950
and we will see how we can add two
buttons to the carousel that enable

124
00:10:02,950 --> 00:10:08,490
us to stop and
resume the slide transitions.

125
00:10:08,490 --> 00:10:14,340
And we'll see how we can activate those
buttons from writing JavaScript code.