1
00:00:02,310 --> 00:00:05,873
In this lesson,
we are gonna deal with responsive design.

2
00:00:05,873 --> 00:00:09,721
I have been using this word quite
a bit in the previous lesson,

3
00:00:09,721 --> 00:00:13,010
but without explaining
it in a lot of detail.

4
00:00:13,010 --> 00:00:18,920
Now, let's consider responsive design in
detail and understand exactly what we

5
00:00:18,920 --> 00:00:23,930
mean by responsive design and how would
you design a website to be responsive.

6
00:00:27,903 --> 00:00:30,662
An immediate question that
arises in our mind is,

7
00:00:30,662 --> 00:00:33,550
why should we consider responsive design?

8
00:00:33,550 --> 00:00:36,045
Why should we make our website responsive?

9
00:00:36,045 --> 00:00:41,390
When we look at how websites
are being accessed these days,

10
00:00:41,390 --> 00:00:46,960
you'll notice that people access
websites from a variety of devices.

11
00:00:46,960 --> 00:00:54,920
All the way from desktops, laptops,
tablets, down to mobile phones.

12
00:00:54,920 --> 00:01:00,840
So, your website may be viewed by users
using screens of different sizes.

13
00:01:00,840 --> 00:01:05,190
If you design your website with
a single screen size in mind,

14
00:01:05,190 --> 00:01:08,400
then it may render improperly or

15
00:01:08,400 --> 00:01:13,630
completely unreadable on
small screen devices.

16
00:01:13,630 --> 00:01:19,076
So if we can't proactively design
our website to dramatically

17
00:01:19,076 --> 00:01:24,521
adapt to the size of the screen
from which the viewer is visiting

18
00:01:24,521 --> 00:01:29,245
your website,
then that will make it a lot more easy for

19
00:01:29,245 --> 00:01:33,789
the visitors to be able to
see your website clearly.

20
00:01:33,789 --> 00:01:37,923
Now, if they can build this
feature into our website itself so

21
00:01:37,923 --> 00:01:43,092
that it will automatically adapt to it's
layout to the size of the screen from

22
00:01:43,092 --> 00:01:48,440
which the user is viewing your website,
that that will be a great improvement.

23
00:01:49,570 --> 00:01:54,290
Responsive design aims to
achieve this in practice.

24
00:01:54,290 --> 00:02:02,820
To do this, we're going to use
the viewport property of our device,

25
00:02:02,820 --> 00:02:09,520
in order to adjust our website
to the screen of the device.

26
00:02:12,260 --> 00:02:13,060
The best way for

27
00:02:13,060 --> 00:02:16,530
us to understand responsive design
is to take a look at an example.

28
00:02:18,160 --> 00:02:22,280
Let's have a look at
the course website itself.

29
00:02:22,280 --> 00:02:27,310
So here you see the course website
opened in a browser window.

30
00:02:27,310 --> 00:02:30,620
Now this window is I can
bring the entire width of

31
00:02:30,620 --> 00:02:33,860
my screen which is currently 1280 pixels.

32
00:02:33,860 --> 00:02:37,160
Suppose I view the same
website from a device,

33
00:02:37,160 --> 00:02:41,720
which has a much smaller
screen say about 700 pixels,

34
00:02:41,720 --> 00:02:45,180
how would these website be
rendered in those circumstances?

35
00:02:46,850 --> 00:02:50,060
To help us to understand this better,

36
00:02:50,060 --> 00:02:55,060
what I'm going to do is to just
shrink the size of my browser so

37
00:02:55,060 --> 00:03:01,100
that my website will automatically adapt
itself to the size of the browser.

38
00:03:01,100 --> 00:03:05,330
So, in some way,
I am simulating accessing the website

39
00:03:05,330 --> 00:03:08,700
from the basis of different screen sizes.

40
00:03:08,700 --> 00:03:12,080
So at this moment,
this would be a 1,200 pixel screen size.

41
00:03:12,080 --> 00:03:16,240
Which would be equivalent to
a typical laptop these days.

42
00:03:16,240 --> 00:03:21,210
Now, let's look at what the website
looks like if you were accessing it from

43
00:03:21,210 --> 00:03:27,527
a tablet in the landscape position.

44
00:03:27,527 --> 00:03:34,250
So, perhaps, that looks more like
the size of the screen from a tablet.

45
00:03:34,250 --> 00:03:40,870
This is typical tablet landscape sizes are
around 700 to sometimes even much higher

46
00:03:42,410 --> 00:03:47,340
pixel sizes these days, but
maybe a seven inch older

47
00:03:47,340 --> 00:03:52,640
laptop perhaps has a width
of about 800 pixels.

48
00:03:52,640 --> 00:03:56,460
So, this is what your website
will look like on a tablet.

49
00:03:56,460 --> 00:04:00,990
Let's continue shrinking
the browser window, and

50
00:04:00,990 --> 00:04:05,460
see how the website will look
like at even more smaller sizes.

51
00:04:05,460 --> 00:04:10,870
So as you keep shrinking the window size,
notice how the contents of the website

52
00:04:10,870 --> 00:04:16,640
is automatically adapting itself
to the size of the screen.

53
00:04:16,640 --> 00:04:20,740
Now, you notice that when I shrank it
below a certain point, there was a sudden

54
00:04:20,740 --> 00:04:28,840
change in the way the website was being
shown on the screen in the browser window.

55
00:04:28,840 --> 00:04:33,774
So let's see, we have here, and
then a little step further down you

56
00:04:33,774 --> 00:04:39,057
suddenly notice that the website has
rendered some more differently you

57
00:04:39,057 --> 00:04:44,081
see that the navigation bar at
the top of the window has disappeared,

58
00:04:44,081 --> 00:04:47,823
instead to be replaced by
a button on the left side.

59
00:04:47,823 --> 00:04:50,543
Now the navigation bar
is still accessible.

60
00:04:50,543 --> 00:04:53,250
When you click on the button,

61
00:04:53,250 --> 00:04:58,449
you now see a sidebar pop up
with the information that used

62
00:04:58,449 --> 00:05:04,140
to be in the sidebar of your website for
larger screen size.

63
00:05:04,140 --> 00:05:08,430
Now this side bar has been
hidden at this screen size.

64
00:05:08,430 --> 00:05:13,330
So, now I can hide this by simply
clicking at any other location.

65
00:05:13,330 --> 00:05:16,970
Also note how the contents
of the website have

66
00:05:16,970 --> 00:05:20,290
adapted themselves to the screen size.

67
00:05:20,290 --> 00:05:27,420
So, this would be like a tablet,
perhaps, in its portrait position.

68
00:05:27,420 --> 00:05:33,004
Let's continue to shrink
the website window down.

69
00:05:33,004 --> 00:05:38,185
And use you see how the contents of the
website are automatically adapting itself.

70
00:05:39,815 --> 00:05:44,415
And as we scroll through the website,

71
00:05:44,415 --> 00:05:49,350
you see that the contents have
adapted themselves to the size of

72
00:05:49,350 --> 00:05:54,440
the browser window here, or
equivalently to the size of the screen.

73
00:05:55,670 --> 00:05:57,140
How is this possible?

74
00:05:58,560 --> 00:06:02,390
This is where responsive
design comes to our rescue.

75
00:06:05,020 --> 00:06:08,260
Another term you will often
hear people talking about

76
00:06:08,260 --> 00:06:12,970
in the context of responsive
design is Mobile First.

77
00:06:12,970 --> 00:06:16,100
What exactly is Mobile First design?

78
00:06:16,100 --> 00:06:20,103
Traditionally, when people were
designing their websites for

79
00:06:20,103 --> 00:06:24,685
both larger screen

80
00:06:24,685 --> 00:06:29,565
windowed devices like laptops and
desktops and smaller screens,

81
00:06:29,565 --> 00:06:33,975
they would often do the layout for
the larger screens first, and then try to

82
00:06:33,975 --> 00:06:39,155
adapt their content to be appropriately
displayed on the smaller screen.

83
00:06:39,155 --> 00:06:44,400
So in this diagram here that you see the
traditional approach would have been first

84
00:06:44,400 --> 00:06:50,160
to design for a laptop and
then adapt the content

85
00:06:50,160 --> 00:06:53,690
to fit into the smaller window size.

86
00:06:55,060 --> 00:06:58,600
Increasingly, people are adopting
the mobile first approach.

87
00:06:58,600 --> 00:07:03,410
What this means is that you first
design your website with the mobile

88
00:07:03,410 --> 00:07:04,700
screen size in mind.

89
00:07:04,700 --> 00:07:08,410
First, do all your layout for
the mobile screen size, and

90
00:07:08,410 --> 00:07:13,450
then start adapting your website
design for larger screen sizes.

91
00:07:13,450 --> 00:07:18,600
So as your screen size expands
the content will automatically flow and

92
00:07:18,600 --> 00:07:22,320
then adjust itself to occupy the larger

93
00:07:22,320 --> 00:07:26,460
width of the screen that becomes
available on larger screen devices.

94
00:07:28,040 --> 00:07:30,350
In order to achieve mobile first design,

95
00:07:30,350 --> 00:07:33,940
there are three things that
need to come together.

96
00:07:33,940 --> 00:07:41,510
First, your front end UI framework should
be able to support a grid based system.

97
00:07:41,510 --> 00:07:46,150
This has been increasingly been opted
by most front end UI frameworks.

98
00:07:46,150 --> 00:07:50,830
So look at anyone of the front end
frameworks that is in use, and

99
00:07:50,830 --> 00:07:54,706
you will see that they will have some
kind of support for a grid-based system.

100
00:07:54,706 --> 00:07:59,170
We'll look at grid-based systems,
in particular the Bootstrap Grid,

101
00:07:59,170 --> 00:08:00,950
in more detail in the next lecture.

102
00:08:02,200 --> 00:08:06,500
The second aspect is to have fluid images,

103
00:08:06,500 --> 00:08:12,450
or what we call responsive images,
so you can make your

104
00:08:12,450 --> 00:08:16,660
website images automatically
adapt to the size of the screen.

105
00:08:16,660 --> 00:08:18,830
So this again has to be built-in.

106
00:08:18,830 --> 00:08:22,590
Bootstrap has good support for
fluid images or

107
00:08:22,590 --> 00:08:27,910
responsive images already available
within the Bootstrap CSS classes.

108
00:08:27,910 --> 00:08:31,090
We'll examine that in more
detail in the next module.

109
00:08:32,580 --> 00:08:38,820
The third kind of support that is
required is what we call media queries.

110
00:08:38,820 --> 00:08:44,015
If you remember, in the previous slide
I had mentioned about the viewport.

111
00:08:45,120 --> 00:08:50,631
Using the viewport,
you can get a sense of the size of

112
00:08:50,631 --> 00:08:57,025
the screen that is being being
used to view your website.

113
00:08:57,025 --> 00:09:00,955
So for mobile devices,
using the view port properly,

114
00:09:00,955 --> 00:09:05,375
you would be able to realize that
the screen size is fairly small,

115
00:09:05,375 --> 00:09:09,870
say around 700 pixels or
even lesser than that.

116
00:09:09,870 --> 00:09:14,330
And for larger screen sizes,
obviously, you can adapt.

117
00:09:14,330 --> 00:09:21,290
Now, this can be used to our advantage
by putting in media queries and

118
00:09:21,290 --> 00:09:28,180
using media queries in
our CSS class design.

119
00:09:28,180 --> 00:09:29,630
How is this achieved in practice?

120
00:09:31,790 --> 00:09:36,410
Media queries uses an approach where,

121
00:09:36,410 --> 00:09:42,000
within your CSS file, you will define
slightly different variations for

122
00:09:42,000 --> 00:09:48,360
each of the CSS classes depending on
the size of the window being used.

123
00:09:48,360 --> 00:09:50,350
To conduct a media query,

124
00:09:50,350 --> 00:09:56,160
you would include a statement
like this in your CSS file.

125
00:09:56,160 --> 00:10:00,936
You would say, @media and screen, and
you can specify the minimum width.

126
00:10:00,936 --> 00:10:05,380
And inside these braces for

127
00:10:05,380 --> 00:10:10,830
this media query, you can specify
the CSS styles that are applicable

128
00:10:10,830 --> 00:10:16,040
only if the minimum width of
the screen is about six, 600 pixels.

129
00:10:16,040 --> 00:10:22,720
So like this you can design the CSS
tiles for different screen sizes.

130
00:10:22,720 --> 00:10:26,430
So, for example,
in Bootstrap as we will see later,

131
00:10:26,430 --> 00:10:32,570
you will have media queries which
will redesign the CSS classes,

132
00:10:32,570 --> 00:10:37,140
or rather adapt the CSS classes for
different screen widths.

133
00:10:38,860 --> 00:10:45,600
To help us understand better, I have
brought up the bootstrap.css file for

134
00:10:45,600 --> 00:10:51,411
our project that we had designed
I opened the bootstrap.css

135
00:10:51,411 --> 00:10:56,600
file in brackets, and you can see
that I have scrolled inside this file

136
00:10:56,600 --> 00:11:00,850
to a location where
a media query is present.

137
00:11:00,850 --> 00:11:03,191
So, looking at the code here,

138
00:11:03,191 --> 00:11:08,145
you'll see that it says media
min-width is 1,200 pixels,

139
00:11:08,145 --> 00:11:12,739
and if the minimum width of
the screen is 1,200 pixels,

140
00:11:12,739 --> 00:11:17,531
then I am going to define my
container to be 1,170 pixels.

141
00:11:17,531 --> 00:11:22,267
So this is one way you can adapt your CSS

142
00:11:22,267 --> 00:11:26,645
classes to the size of the screen.

143
00:11:26,645 --> 00:11:32,405
So, a media query like this
included your CSS file will enable

144
00:11:32,405 --> 00:11:38,165
your CSS classes to be redefined for
different screen sizes.

145
00:11:38,165 --> 00:11:44,880
This is one way to implement
responsive design within your project.

146
00:11:47,900 --> 00:11:51,400
Now, you're going to ask yourselves,
oh that seems so difficult to do.

147
00:11:51,400 --> 00:11:53,280
There are so many things to track,

148
00:11:53,280 --> 00:11:56,268
and how do I make sure that
everything works correctly?

149
00:11:56,268 --> 00:11:59,996
Don't worry.

150
00:11:59,996 --> 00:12:04,950
As a novice you might want
to start with a pre-designed

151
00:12:04,950 --> 00:12:09,210
front end UI framework like Bootstrap.

152
00:12:09,210 --> 00:12:12,480
They have already done
the heavy lifting for you.

153
00:12:12,480 --> 00:12:17,950
They have already designed
the classes to be responsive,

154
00:12:17,950 --> 00:12:22,570
so you can start with that and
once you get more comfortable with

155
00:12:22,570 --> 00:12:27,620
these CSS queries and various features,
then you can go in and

156
00:12:27,620 --> 00:12:33,100
tweak the files to suit
your specific needs.