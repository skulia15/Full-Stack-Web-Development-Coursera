1
00:00:01,460 --> 00:00:07,090
We are now moving to the next hands-on
exercise where we are going to

2
00:00:07,090 --> 00:00:14,280
begin with the web page that we
completed in the previous exercise.

3
00:00:14,280 --> 00:00:18,460
And we are now going to introduce
the bootstrap grid classes into it.

4
00:00:18,460 --> 00:00:23,350
In order to appropriately lay
out the content of the pitch.

5
00:00:23,350 --> 00:00:28,710
In addition, we're gonna introduce some
custom CSS classes into the webpage.

6
00:00:28,710 --> 00:00:37,050
So let's go ahead and then look at the
HTML code for the web page one more time.

7
00:00:38,840 --> 00:00:42,790
Going into our HTML code in brackets

8
00:00:42,790 --> 00:00:48,300
we're going to see that at
the top of the page in the head,

9
00:00:48,300 --> 00:00:54,290
to be have introduced the viewpoint
metatag already in previously,

10
00:00:54,290 --> 00:01:00,760
so this is what provides us with
the responsive behavior for our webpage.

11
00:01:02,280 --> 00:01:07,290
Now we are gonna go in and
apply the column classes to

12
00:01:07,290 --> 00:01:13,370
all the different divs inside
the body of our webpage.

13
00:01:14,710 --> 00:01:20,330
Moving to the header of our page
inside the body, I'm going to apply

14
00:01:21,440 --> 00:01:28,930
the grid column classes to the two
inner divs Inside the Jumbotron.

15
00:01:28,930 --> 00:01:33,715
So to do that for the first div I'm
going to apply a column class as

16
00:01:33,715 --> 00:01:39,328
col-xs-12.

17
00:01:39,328 --> 00:01:44,459
12 col-sm-8.

18
00:01:44,459 --> 00:01:47,110
So this content is gonna be displayed

19
00:01:48,300 --> 00:01:52,360
in extra small devices it will occupy
the entire width of the screen.

20
00:01:52,360 --> 00:02:00,180
But for small to large screen sizes,
it is going to occupy eight columns.

21
00:02:00,180 --> 00:02:06,200
You also notice that I have
another div in the jumbotron.

22
00:02:06,200 --> 00:02:09,200
Currently, that div contains no content.

23
00:02:09,200 --> 00:02:15,400
Later on I am planning to introduce
a logo for our restaurant into that div.

24
00:02:15,400 --> 00:02:20,100
So I'm gonna leave the div empty at
the moment, but I'm gonna apply the column

25
00:02:20,100 --> 00:02:24,910
classes to the div so that it occupies
the remaining number of columns.

26
00:02:24,910 --> 00:02:30,610
To this div I'm going to apply
column classes XS 12 and

27
00:02:30,610 --> 00:02:36,586
SM 4 because we are left with four columns
from the small to large screen sizes,

28
00:02:36,586 --> 00:02:40,420
empty on the right-hand side of this row.

29
00:02:40,420 --> 00:02:45,560
Once we have completed this,
let's now move into the divs

30
00:02:45,560 --> 00:02:48,790
in the actual content of our webpage.

31
00:02:48,790 --> 00:02:53,380
For each one of those divs,
I have a headline and

32
00:02:53,380 --> 00:02:55,000
then I have the actual content.

33
00:02:55,000 --> 00:03:00,600
So the headline part of it I will enclose
in a smallish number of columns, but

34
00:03:00,600 --> 00:03:06,300
the detailed content, I will have it
occupying a larger number of columns.

35
00:03:06,300 --> 00:03:11,980
So I'm going to do that by applying
two different div classes for

36
00:03:11,980 --> 00:03:13,790
each of those columns.

37
00:03:13,790 --> 00:03:18,320
For extra small screen sizes, I'm going
to lay them out one on top of the other

38
00:03:18,320 --> 00:03:23,460
stacked, but for small to large,
I'm gonna lay them out side by side.

39
00:03:24,870 --> 00:03:31,750
So let's go and apply the column classes
to those inner divs in those rows there.

40
00:03:31,750 --> 00:03:36,840
For the div containing the headline,
I'm going to apply column xs 12 and

41
00:03:36,840 --> 00:03:41,980
column sm 3 in that case and
for the other div I'm going

42
00:03:41,980 --> 00:03:46,950
to apply the remaining columns from that.

43
00:03:46,950 --> 00:03:50,290
Think about how I'm going to do that,
all done,

44
00:03:51,340 --> 00:03:55,480
let me repeat that for
the remaining rows of.

45
00:03:55,480 --> 00:03:57,980
The actual content of the webpage.

46
00:03:59,660 --> 00:04:03,390
For the divs in the footer, I am going to

47
00:04:03,390 --> 00:04:07,940
have the first div
occupy three columns for

48
00:04:07,940 --> 00:04:13,590
the small to large string sizes,
the second div to occupy five columns.

49
00:04:13,590 --> 00:04:16,650
For the small to medium and large.

50
00:04:16,650 --> 00:04:20,740
And the last div to occupy
the remaining for columns.

51
00:04:20,740 --> 00:04:23,860
But for
extra small I'm gonna have the first and

52
00:04:23,860 --> 00:04:26,390
second divs occupy six columns each.

53
00:04:26,390 --> 00:04:29,420
And the third one will occupy
the entire twelve columns.

54
00:04:30,510 --> 00:04:38,410
And the copyright statement I'm going to
let that expand the entire twelve columns.

55
00:04:38,410 --> 00:04:43,190
So let me apply those column classes to
be as tips and then we'll come back and

56
00:04:43,190 --> 00:04:44,890
look at the completed webpage.

57
00:04:44,890 --> 00:04:49,270
I have now completed the changes.

58
00:04:49,270 --> 00:04:52,050
Let's go and have a look at the page.

59
00:04:52,050 --> 00:04:54,790
You can now see how
the web page is rendered.

60
00:04:54,790 --> 00:04:59,920
You can see that the jumbotron,
the restaurant name and

61
00:04:59,920 --> 00:05:02,850
the description is occupying
left eight columns.

62
00:05:02,850 --> 00:05:08,190
And then we have empty space here on
the right side where the logo will go in

63
00:05:08,190 --> 00:05:11,470
which will be part of
the exercise in the next module.

64
00:05:11,470 --> 00:05:17,560
Then, we see that the three
pieces of content are now

65
00:05:17,560 --> 00:05:23,900
laid out such that the headline occupies
three columns on the left side.

66
00:05:23,900 --> 00:05:30,150
And the actual long description occupies
the remaining nine columns here.

67
00:05:30,150 --> 00:05:35,760
Going down to that footer, now you can
see that the links occupy three columns,

68
00:05:35,760 --> 00:05:38,040
the address occupies five columns.

69
00:05:38,040 --> 00:05:44,900
And then the links our social media sites
occupies the remaining four columns here.

70
00:05:44,900 --> 00:05:53,265
The copyright down below here is spanning
the entire twelve columns of that row.

71
00:05:55,195 --> 00:06:00,245
Let us now examine the responsive
behavior of this web page.

72
00:06:00,245 --> 00:06:05,730
Now, taking this web page, let me
slowly shrink the web page and see how

73
00:06:05,730 --> 00:06:12,010
the webpage responds as
the screen size is reduced.

74
00:06:12,010 --> 00:06:14,980
So this for 1,280 pixels.

75
00:06:14,980 --> 00:06:19,150
This is the length of the screen
size that I'm using currently.

76
00:06:19,150 --> 00:06:24,250
I'm gonna keep shrinking the size and
you can see the changes in

77
00:06:24,250 --> 00:06:32,010
the layout of the webpage as
I reduce the screen size.

78
00:06:32,010 --> 00:06:34,830
So this is still for small screen size.

79
00:06:34,830 --> 00:06:39,630
So you can see the layout
is still like that, but

80
00:06:39,630 --> 00:06:42,890
let's go for the extra small and
see what happens.

81
00:06:46,000 --> 00:06:50,190
Now you can see that when I
switch from small to extra small,

82
00:06:50,190 --> 00:06:55,460
immediately our content
layout changes its behavior.

83
00:06:55,460 --> 00:07:01,630
So, now I have my description
of the restaurant and

84
00:07:01,630 --> 00:07:06,800
the name of the restaurant display
occupying the entire screen size.

85
00:07:06,800 --> 00:07:11,570
These two items now instead of
being side by side now are stacked

86
00:07:11,570 --> 00:07:13,620
one on top of the other.

87
00:07:13,620 --> 00:07:16,610
And then look at the footer.

88
00:07:16,610 --> 00:07:20,850
You see that the links and
address are displayed side by side.

89
00:07:21,910 --> 00:07:26,730
And the links to our social media
sites are displayed in a separate

90
00:07:28,310 --> 00:07:34,810
columns, separate row spanning
the entire screen size.

91
00:07:34,810 --> 00:07:37,130
The copyright remains as such.

92
00:07:37,130 --> 00:07:42,860
So now you can see how we have introduced
responsiveness to our web page.

93
00:07:45,110 --> 00:07:48,930
We can see that within the web page,
the headline and

94
00:07:48,930 --> 00:07:54,920
the description are all laid out in
a similar fashion in all the rows.

95
00:07:54,920 --> 00:07:58,120
Now I wanna make a slight
change whereby for

96
00:07:58,120 --> 00:08:01,500
some of the rows I want
to swap the headline and

97
00:08:01,500 --> 00:08:06,980
the description around specifically for
the question in the third row.

98
00:08:06,980 --> 00:08:11,900
So that the webpage acquires
some more interesting character.

99
00:08:11,900 --> 00:08:13,380
How do we go about doing that?

100
00:08:13,380 --> 00:08:15,700
This is where the push, pull and

101
00:08:15,700 --> 00:08:20,510
offset classes that we discussed
are going to come to our aid.

102
00:08:20,510 --> 00:08:24,020
Let's apply those changes to those
classes and then come back and

103
00:08:24,020 --> 00:08:29,370
see the layout of the web
page of the point.

104
00:08:29,370 --> 00:08:34,170
For small to large I'm
going to push the headline

105
00:08:34,170 --> 00:08:38,810
to the right by nine units,

106
00:08:38,810 --> 00:08:43,780
and pull their description
to the left by three units.

107
00:08:44,990 --> 00:08:50,040
So returning to our HTML page,
now for the first and third row,

108
00:08:50,040 --> 00:08:55,040
I'm gonna push the headline to the right,
and pull the Description to the left.

109
00:08:55,040 --> 00:08:59,825
So going into the divs, for
the headline div I'm going to apply

110
00:08:59,825 --> 00:09:06,050
col-sm-push-9and for

111
00:09:06,050 --> 00:09:11,920
the description I'm going
to apply col-sm pull-3.

112
00:09:11,920 --> 00:09:14,520
Same thing for the third row too.

113
00:09:16,640 --> 00:09:23,725
Going to the footer for the div that
shows the links to our webpages,

114
00:09:23,725 --> 00:09:28,455
I'm going to apply an offset
of one unit to the right and

115
00:09:28,455 --> 00:09:33,455
I'm going to led the two units.

116
00:09:33,455 --> 00:09:37,776
So i am going to go in here and
I would say,

117
00:09:37,776 --> 00:09:43,132
col-xs-6, but I will change to col-xs-5.

118
00:09:43,132 --> 00:09:49,978
And then I will say col-xs-offset-1.

119
00:09:49,978 --> 00:09:55,642
And col-sm, I'll reduce it to 2.

120
00:09:55,642 --> 00:10:01,620
With this I have updated
the class definitions for

121
00:10:01,620 --> 00:10:07,990
the links row, links column in my footer.

122
00:10:07,990 --> 00:10:12,440
And I'll save the changes and
let's go and look at the webpage.

123
00:10:13,950 --> 00:10:18,920
Returning to our webpage,
now you see how I have used the push and

124
00:10:18,920 --> 00:10:23,330
pull classes to swap things
around in the three drawers.

125
00:10:23,330 --> 00:10:26,905
In the first drawer you can see that
the headline has been pushed to right and

126
00:10:26,905 --> 00:10:29,525
the content has been pulled to the left.

127
00:10:29,525 --> 00:10:32,015
And similarly for the third row.

128
00:10:32,015 --> 00:10:36,735
Now you can see that the links
down below here have been

129
00:10:36,735 --> 00:10:41,430
pushed right by one
column using the offset.

130
00:10:42,870 --> 00:10:45,640
The remaining ones stay as such.

131
00:10:45,640 --> 00:10:50,600
Now if I shrink the webpage to the extra

132
00:10:50,600 --> 00:10:55,870
small size, notice that the behavior.

133
00:10:55,870 --> 00:10:59,510
The layout remains the same as before.

134
00:11:01,440 --> 00:11:06,510
Coming down to the footer I notice
that my links are being displayed

135
00:11:06,510 --> 00:11:08,250
as a bulleted list.

136
00:11:08,250 --> 00:11:12,960
I don't want the bulleted list instead
I want to be completely left so

137
00:11:12,960 --> 00:11:17,830
to do that I will apply a unstyled list

138
00:11:17,830 --> 00:11:23,390
class to that list and
then you will notice the change there.

139
00:11:23,390 --> 00:11:28,725
Going into the code for
this UL tag I am going to apply a class

140
00:11:28,725 --> 00:11:34,320
list-unstyled.

141
00:11:34,320 --> 00:11:37,690
Returning to your webpage you
can see now in the footer

142
00:11:37,690 --> 00:11:41,620
how the links are being
displayed without the bullets.

143
00:11:42,660 --> 00:11:47,420
Next I'm going to show you how we
can introduce a custom CSS file

144
00:11:47,420 --> 00:11:49,590
into our web project.

145
00:11:49,590 --> 00:11:57,200
To do that, go to the CSS folder and
then introduce a new file there.

146
00:11:57,200 --> 00:12:03,168
And then we will name it as mystyles.css.

147
00:12:03,168 --> 00:12:08,792
And then when the mystyles.css
file is opened,

148
00:12:08,792 --> 00:12:13,318
I'm going to paste in some CSS code to be

149
00:12:13,318 --> 00:12:19,390
applied to some of
the elements in my web page.

150
00:12:19,390 --> 00:12:23,310
So I'll paste in the CSS code
which I have provided for you.

151
00:12:23,310 --> 00:12:30,220
This CSS code, I am making use to
style my various rows in the web page.

152
00:12:31,560 --> 00:12:34,700
In here, you can see that for
my header and

153
00:12:34,700 --> 00:12:40,030
my footer I am giving some margin and
padding values,

154
00:12:40,030 --> 00:12:45,670
and then similarly for the content rows I
am giving some margin and adding values.

155
00:12:45,670 --> 00:12:47,710
In addition, from my content rows,

156
00:12:47,710 --> 00:12:52,620
I am making every content row to
be a minimum height of 400 pixels.

157
00:12:52,620 --> 00:12:57,790
So, this way, our webpage is laid
out in a lot more cleaner fashion.

158
00:12:59,030 --> 00:13:05,280
For the footer, I will apply a background
color of a light gray color there so

159
00:13:05,280 --> 00:13:12,510
that it looks a bit more different from
the remaining rows of my web page.

160
00:13:12,510 --> 00:13:17,470
After making the changes to the
mystyles.css file, I'm gonna save that,

161
00:13:17,470 --> 00:13:23,720
and then now I need to include
the CSS file into my HTML page.

162
00:13:24,750 --> 00:13:29,690
Moving back to the html code,
in the head right

163
00:13:29,690 --> 00:13:35,050
after the import of
the bootstrap css files,

164
00:13:35,050 --> 00:13:43,830
I am going to add in one more to import
the CSS file that I've just created.

165
00:13:43,830 --> 00:13:47,974
So I will say css/mystyles.css.

166
00:13:47,974 --> 00:13:51,570
That's the page that I want to input,

167
00:13:51,570 --> 00:13:55,840
and this is a style sheet.

168
00:13:58,410 --> 00:14:03,740
So, with that I have included my
custom CSS classes into my project.

169
00:14:03,740 --> 00:14:07,230
Now I can apply those CSS
classes to the different rows.

170
00:14:07,230 --> 00:14:11,265
So, let me go ahead and apply those
to the header, the content rows.

171
00:14:11,265 --> 00:14:15,665
And the footer and then we'll
see how the webpage has changed.

172
00:14:15,665 --> 00:14:21,085
So I have applied the header
formatting to the row in the header.

173
00:14:21,085 --> 00:14:24,950
Then I have applied that
content row content class

174
00:14:24,950 --> 00:14:28,820
to the rows in the content
part of our webpage.

175
00:14:28,820 --> 00:14:34,430
And finally I'm ready to apply the footer
content to the row inside my footer.

176
00:14:34,430 --> 00:14:37,850
Or rather I will apply that
directly to the footer itself.

177
00:14:39,880 --> 00:14:44,160
So now that I have completed applying
these classes, let me go back and

178
00:14:44,160 --> 00:14:47,130
check that web page and
see how it has changed.

179
00:14:48,178 --> 00:14:54,920
Returning to your webpage now you can see
the webpage layout has changed slightly.

180
00:14:54,920 --> 00:14:59,370
The jumbotron remains
as such in the header.

181
00:14:59,370 --> 00:15:06,050
Then, but the remaining rules are now
occupying a lot more space on the screen.

182
00:15:06,050 --> 00:15:10,030
So since I have declared that the minimum
width each row should occupy would

183
00:15:10,030 --> 00:15:10,570
be 400 pixels.

184
00:15:10,570 --> 00:15:15,820
So the height of each of these
rows is now set to 400 pixels.

185
00:15:17,820 --> 00:15:23,470
The footer has now acquired
the gray background color and

186
00:15:23,470 --> 00:15:25,110
is displayed at the bottom.

187
00:15:26,400 --> 00:15:30,580
Finally, I'll go into
my styles.css file and

188
00:15:30,580 --> 00:15:35,370
add in a couple of more custom classes for
the jumbotron and

189
00:15:35,370 --> 00:15:39,340
the address that I'm using in the footer.

190
00:15:39,340 --> 00:15:45,390
So adding in the code, you see that for

191
00:15:45,390 --> 00:15:51,200
the jumbotron, I am setting the padding
for the jumbotron appropriately.

192
00:15:51,200 --> 00:15:55,270
And also I am going to set
the background of the jumbotron to be

193
00:15:55,270 --> 00:15:58,810
a light indigo color.

194
00:15:58,810 --> 00:16:07,430
And the text to be displayed would be
in a off-white color in the jumbotron.

195
00:16:07,430 --> 00:16:12,890
The address which appears
in the footer of my page.

196
00:16:12,890 --> 00:16:16,760
Now, I'm going to reduce
the font size of my address

197
00:16:16,760 --> 00:16:19,330
to be slightly smaller
than the standard size.

198
00:16:19,330 --> 00:16:21,285
It'll be about 80%, so

199
00:16:21,285 --> 00:16:25,963
that is the modification that I
am applying here to that address.

200
00:16:28,010 --> 00:16:33,061
Switching back to the view of
our web page, we now notice

201
00:16:33,061 --> 00:16:38,329
that our jumbotron has acquired
a light indigo color, and

202
00:16:38,329 --> 00:16:44,800
in addition the lettering is now in
off-white color in the jumbotron.

203
00:16:47,020 --> 00:16:50,250
Going down to the footer,
you will see that our

204
00:16:50,250 --> 00:16:55,480
address is now displayed in a slightly
smaller font size than before.

205
00:16:55,480 --> 00:17:01,990
This completes the modifications that we
are going to affect in this exercise.

206
00:17:01,990 --> 00:17:07,550
At the end of this exercise, we have
learned how to apply the column classes

207
00:17:07,550 --> 00:17:13,700
to the various divs inside
of rows in our webpage.

208
00:17:13,700 --> 00:17:18,850
In addition, we have also seen how we
can introduce custom CSS classes and

209
00:17:18,850 --> 00:17:21,980
then apply them to various
elements in our webpage.

210
00:17:23,380 --> 00:17:26,170
This concludes this exercise.