1
00:00:02,310 --> 00:00:05,873
这节课我们会讨论响应式设计

2
00:00:05,873 --> 00:00:09,721
在前面的课程中 这个词我已经用了好几次

3
00:00:09,721 --> 00:00:13,010
但没有解释得很详细

4
00:00:13,010 --> 00:00:18,920
现在 让我们详细地探讨响应式设计
理解响应式设计的确切含义

5
00:00:18,920 --> 00:00:23,930
以及你该如何把网站设计为响应式

6
00:00:27,903 --> 00:00:30,662
那么马上问题就来了

7
00:00:30,662 --> 00:00:33,550
为什么我们要考虑响应式设计呢 ?

8
00:00:33,550 --> 00:00:36,045
为什么我们要网站设计成响应式的呢 ?

9
00:00:36,045 --> 00:00:41,390
当我们观察时下的网站是如何被访问的时候

10
00:00:41,390 --> 00:00:46,960
你会发现人们从各种不同的设备访问网站

11
00:00:46,960 --> 00:00:54,920
从台式机 笔记本电脑 平板电脑到手机都有

12
00:00:54,920 --> 00:01:00,840
所以 你的网站有可能被用户
以各种不同尺寸的屏幕浏览

13
00:01:00,840 --> 00:01:05,190
如果你设计网站时只考虑一种尺寸

14
00:01:05,190 --> 00:01:08,400
那么它就有可能被不正确地渲染

15
00:01:08,400 --> 00:01:13,630
又或者在屏幕小的设备上完全不可读

16
00:01:13,630 --> 00:01:19,076
因此如果我们可以主动地设计网站

17
00:01:19,076 --> 00:01:24,521
使其能灵活地适应浏览者的屏幕大小

18
00:01:24,521 --> 00:01:29,245
浏览者就能更轻松地

19
00:01:29,245 --> 00:01:33,789
清楚地浏览你的网站

20
00:01:33,789 --> 00:01:37,923
现在 如果我们可以将这个特性构建在网站本身

21
00:01:37,923 --> 00:01:43,092
让它能够自动调整布局去适应用户的屏幕尺寸

22
00:01:43,092 --> 00:01:48,440
那将会是一大改进

23
00:01:49,570 --> 00:01:54,290
响应式设计的目标就是在实践中实现这一目标

24
00:01:54,290 --> 00:02:02,820
要做到这一点 我们要用到设备的视域 (viewport) 属性

25
00:02:02,820 --> 00:02:09,520
来调整我们的网站到设备的屏幕上

26
00:02:12,260 --> 00:02:13,060
理解响应式设计的最好方法

27
00:02:13,060 --> 00:02:16,530
是看一看例子

28
00:02:18,160 --> 00:02:22,280
我们看看这个课程网站本身

29
00:02:22,280 --> 00:02:27,310
你可以看到浏览器窗口开着课程网站

30
00:02:27,310 --> 00:02:30,620
我可以将它展开到整个屏幕的宽度

31
00:02:30,620 --> 00:02:33,860
这个宽度现在是1280像素

32
00:02:33,860 --> 00:02:37,160
设想我要用一个设备来浏览同一个网站

33
00:02:37,160 --> 00:02:41,720
这个设备的屏幕只有大概700像素

34
00:02:41,720 --> 00:02:45,180
这种情况下网站应该如何被渲染呢

35
00:02:46,850 --> 00:02:50,060
为了帮助更好地我们理解

36
00:02:50,060 --> 00:02:55,060
我要做的是缩小浏览器的尺寸

37
00:02:55,060 --> 00:03:01,100
让网站自动调整到浏览器的尺寸

38
00:03:01,100 --> 00:03:05,330
这样 从某些方面来说 我就是在模仿

39
00:03:05,330 --> 00:03:08,700
从不同尺寸的屏幕访问网站的效果

40
00:03:08,700 --> 00:03:12,080
现在 屏幕的宽度是1200像素

41
00:03:12,080 --> 00:03:16,240
这相当于时下的一台笔记本电脑的典型尺寸

42
00:03:16,240 --> 00:03:21,210
让我们看看用平板电脑的横屏状态

43
00:03:21,210 --> 00:03:27,527
来访问这个网站时的效果

44
00:03:27,527 --> 00:03:34,250
也许这样看起来比较像平板电脑的屏幕尺寸

45
00:03:34,250 --> 00:03:40,870
典型平板电脑的横屏尺寸大约在700像素左右

46
00:03:42,410 --> 00:03:47,340
有些设备的尺寸会更大 而较旧的七吋笔记本电脑

47
00:03:47,340 --> 00:03:52,640
可能会有800像素左右的屏幕宽度

48
00:03:52,640 --> 00:03:56,460
所以 这就是你的网站在平板电脑上看起来的样子

49
00:03:56,460 --> 00:04:00,990
让我们继续缩小浏览器窗口

50
00:04:00,990 --> 00:04:05,460
看看网站在更小的尺寸上看起来是怎样的

51
00:04:05,460 --> 00:04:10,870
当你继续缩小窗口尺寸的时候 留意网站的内容

52
00:04:10,870 --> 00:04:16,640
会自动适应屏幕的尺寸

53
00:04:16,640 --> 00:04:20,740
现在 留意当我将窗口缩小到某一个特定大小的时候

54
00:04:20,740 --> 00:04:28,840
网站在浏览器窗口中显示的方式会发生一个突然的变化

55
00:04:28,840 --> 00:04:33,774
我们来看一下 我们在这个尺寸 然后只要再缩小一点点

56
00:04:33,774 --> 00:04:39,057
你会突然发现网站渲染得不一样了

57
00:04:39,057 --> 00:04:44,081
你可以看到窗口顶部的导航栏已经消失

58
00:04:44,081 --> 00:04:47,823
被左侧的一个按钮代替了

59
00:04:47,823 --> 00:04:50,543
现在导航栏依然是可访问的

60
00:04:50,543 --> 00:04:53,250
当你点击那个按钮的时候

61
00:04:53,250 --> 00:04:58,449
会弹出一个侧边栏 上面的信息

62
00:04:58,449 --> 00:05:04,140
就是刚才较大的屏幕上 网站侧边栏上的信息

63
00:05:04,140 --> 00:05:08,430
现在侧边栏在这个屏幕尺寸上被隐藏了

64
00:05:08,430 --> 00:05:13,330
我可以点击任意其他位置来隐藏这个侧边栏

65
00:05:13,330 --> 00:05:16,970
另外 留意网站的内容

66
00:05:16,970 --> 00:05:20,290
也自动调整到屏幕的尺寸

67
00:05:20,290 --> 00:05:27,420
这就如同平板电脑 在横向摆放时的效果

68
00:05:27,420 --> 00:05:33,004
让我们继续缩小网站窗口的尺寸

69
00:05:33,004 --> 00:05:38,185
你可以看到网站内容是如何自动调整的

70
00:05:39,815 --> 00:05:44,415
当我们滚动网站的时候

71
00:05:44,415 --> 00:05:49,350
你可以看到它的内容已经调整到

72
00:05:49,350 --> 00:05:54,440
浏览器窗口的尺寸 或者说 相当于屏幕的尺寸

73
00:05:55,670 --> 00:05:57,140
这是怎么发生的呢

74
00:05:58,560 --> 00:06:02,390
这就是响应式设计的威力了

75
00:06:05,020 --> 00:06:08,260
另外一个你常常会听人提起的

76
00:06:08,260 --> 00:06:12,970
响应式设计范畴内的术语是移动优先

77
00:06:12,970 --> 00:06:16,100
确切来说 什么是移动优先式设计?

78
00:06:16,100 --> 00:06:20,103
传统上 当人们设计网站 需要这个网站同时兼顾

79
00:06:20,103 --> 00:06:24,685
大屏幕设备

80
00:06:24,685 --> 00:06:29,565
如笔记本电脑 台式电脑
和小屏幕设备时

81
00:06:29,565 --> 00:06:33,975
他们常常会先设计大屏幕下的布局 

82
00:06:33,975 --> 00:06:39,155
然后再尝试调整网站的内容 使其在小屏幕上也能恰当地显示

83
00:06:39,155 --> 00:06:44,400
因此在这幅图中 传统的方法会是

84
00:06:44,400 --> 00:06:50,160
先给笔记本电脑设计 再调整内容

85
00:06:50,160 --> 00:06:53,690
去适应更小的窗口尺寸

86
00:06:55,060 --> 00:06:58,600
现在 人们越来越多地采用移动优先的方法

87
00:06:58,600 --> 00:07:03,410
意思是你设计网站时 首先考虑的是

88
00:07:03,410 --> 00:07:04,700
移动设备的屏幕尺寸

89
00:07:04,700 --> 00:07:08,410
首先为移动设备的屏幕设计网站布局

90
00:07:08,410 --> 00:07:13,450
之后再为更大的屏幕尺寸调整网站设计

91
00:07:13,450 --> 00:07:18,600
这样 当你的屏幕尺寸扩大时 内容会自动流动

92
00:07:18,600 --> 00:07:22,320
并调整到占据更大屏幕的设备

93
00:07:22,320 --> 00:07:26,460
所带来的更宽的屏幕宽度

94
00:07:28,040 --> 00:07:30,350
为了达到移动优先式设计

95
00:07:30,350 --> 00:07:33,940
需要有三样东西的支持

96
00:07:33,940 --> 00:07:41,510
第一 你的前端界面框架应该支持网格系统

97
00:07:41,510 --> 00:07:46,150
它已经越来越多地被大部分前端界面框架所支持

98
00:07:46,150 --> 00:07:50,830
因此当我们观察任意一个通行的前端框架

99
00:07:50,830 --> 00:07:54,706
都会发现它以某种形式支持网格系统

100
00:07:54,706 --> 00:07:59,170
我们会在下一堂课里更详细地

101
00:07:59,170 --> 00:08:00,950
探讨网格系统 尤其是Bootstrap网格 (Bootstrap Grid)

102
00:08:02,200 --> 00:08:06,500
第二方面是要有流动图像

103
00:08:06,500 --> 00:08:12,450
又称为响应式图像的支持 这样你就可以

104
00:08:12,450 --> 00:08:16,660
使网站上的图片自动根据屏幕尺寸调整大小

105
00:08:16,660 --> 00:08:18,830
这又是一个必须内嵌的特性

106
00:08:18,830 --> 00:08:22,590
Bootstrap 已经在它的 CSS 类中为流动图像

107
00:08:22,590 --> 00:08:27,910
或称响应式图像提供了很好的支持

108
00:08:27,910 --> 00:08:31,090
我们会在下一章中更详细地探讨这个话题

109
00:08:32,580 --> 00:08:38,820
第三种我们所需要的支持叫做媒体查询 (media queries)

110
00:08:38,820 --> 00:08:44,015
如果你还记得 在前一张幻灯片里 我提到了视域

111
00:08:45,120 --> 00:08:50,631
通过视域 你可以大致感受到

112
00:08:50,631 --> 00:08:57,025
用来浏览你网站的屏幕的尺寸

113
00:08:57,025 --> 00:09:00,955
对于移动设备来说 如果恰当地使用视域

114
00:09:00,955 --> 00:09:05,375
你应该能够发觉屏幕屏幕尺寸相当小

115
00:09:05,375 --> 00:09:09,870
只有约700像素 甚至比这更小

116
00:09:09,870 --> 00:09:14,330
而对于更大的屏幕尺寸来说 很明显 你可以调适

117
00:09:14,330 --> 00:09:21,290
通过在CSS类的设计中加入媒体查询并且加以利用

118
00:09:21,290 --> 00:09:28,180
视域会很有帮助

119
00:09:28,180 --> 00:09:29,630
在实践中这要如何达成呢

120
00:09:31,790 --> 00:09:36,410
媒体查询通过这样的方法实现

121
00:09:36,410 --> 00:09:42,000
在你的CSS文件中 根据不同的窗口尺寸

122
00:09:42,000 --> 00:09:48,360
你可以将每个CSS类定义得稍有不同

123
00:09:48,360 --> 00:09:50,350
要进行一次媒体查询

124
00:09:50,350 --> 00:09:56,160
你要在你的CSS文件中加入像这样的一条语句

125
00:09:56,160 --> 00:10:00,936
你会写 @media 和 screen 然后指明最小的宽度

126
00:10:00,936 --> 00:10:05,380
然后在这条媒体查询的花括号内

127
00:10:05,380 --> 00:10:10,830
你可以列举一些CSS样式 这些样式

128
00:10:10,830 --> 00:10:16,040
只会在屏幕宽度在600像素以上时才适用

129
00:10:16,040 --> 00:10:22,720
像这样你就可以设计不同的CSS代码给不同的屏幕尺寸

130
00:10:22,720 --> 00:10:26,430
例如 在Bootstrap里 就像我们稍后会看到的那样

131
00:10:26,430 --> 00:10:32,570
有的媒体查询会重新设计CSS类

132
00:10:32,570 --> 00:10:37,140
有的则会将CSS类因应不同的屏幕宽度作调整

133
00:10:38,860 --> 00:10:45,600
为了帮助我们更好地理解 我打开了bootstrap.css文件

134
00:10:45,600 --> 00:10:51,411
这个文件曾经用在我们之前设计的项目中

135
00:10:51,411 --> 00:10:56,600
我用Brackets打开bootstrap.css文件 
你可以看到我已经滚动到文件中

136
00:10:56,600 --> 00:11:00,850
一个有媒体查询的位置

137
00:11:00,850 --> 00:11:03,191
看看这里的代码

138
00:11:03,191 --> 00:11:08,145
你会看到这里写着 @media (min-width: 1200px)

139
00:11:08,145 --> 00:11:12,739
如果屏幕的最小宽度是1200像素

140
00:11:12,739 --> 00:11:17,531
我就将我的container的宽度定义为1170像素

141
00:11:17,531 --> 00:11:22,267
这是你将你的CSS类

142
00:11:22,267 --> 00:11:26,645
调整到屏幕尺寸的一种方式

143
00:11:26,645 --> 00:11:32,405
因此 将这样的媒体查询包含到你的CSS文件里

144
00:11:32,405 --> 00:11:38,165
可以让你的CSS类根据不同的屏幕尺寸重新定义

145
00:11:38,165 --> 00:11:44,880
这是在你的项目中实现响应式设计的一种方式

146
00:11:47,900 --> 00:11:51,400
现在 你可能会问自己 哎呀 这看起来好难

147
00:11:51,400 --> 00:11:53,280
有那么多东西要追踪

148
00:11:53,280 --> 00:11:56,268
我又怎么能保证所有东西都正确地运作呢

149
00:11:56,268 --> 00:11:59,996
别担心别担心

150
00:11:59,996 --> 00:12:04,950
作为新手 你也许想要从那些已经预先设计好的

151
00:12:04,950 --> 00:12:09,210
前端界面框架 如Bootstrap 开始入手

152
00:12:09,210 --> 00:12:12,480
他们已经为你减轻了大部分的负担

153
00:12:12,480 --> 00:12:17,950
预先设计好了响应式的类

154
00:12:17,950 --> 00:12:22,570
你可以先从这些定义好的类开始入手 而一旦你已经熟悉了

155
00:12:22,570 --> 00:12:27,620
这些CSS查询和各种不同的特性之后 你就可以

156
00:12:27,620 --> 00:12:33,100
着手去改变这些文件来满足你的特定需求
翻译: LIYB  | 审阅: Saul Qunming Yuan
Coursera Global Translator Community