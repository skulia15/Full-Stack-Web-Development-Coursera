下面我们要进行一个实作练习 我们从上一个练习所完成的网页开始 现在我们要把 Bootstrap 的网格类引入到网页中 恰当地把内容布置好 此外 我们还要引入一些定制的CSS类 让我们再一次检查一下网页的HTML代码 在Brackets中打开我们的HTML代码 我们会看到在网页的顶端 <head>的部分 已经有了之前介绍的视域元标记 (viewport metatag) 这是网页的响应式行为的基础 我们现在要把纵列 (column) 类应用在 网页主体的各个不同的 div 上 移动到网页主体的页首处 我要把网格系统的纵列 (column) 类应用在
Jumbotron 里面的两个内部 div 标签上 要这样做 我首先给第一个 div 添加一个 column 类 col-xs-12 col-sm-8 这样 这项内容在超小屏幕上显示时 就会占据屏幕的整个宽度 但在小屏幕到大屏幕的尺寸上 它将会占据 8 个纵列 还有另一个 div 在这个 Jumbotron 里面 目前这个 div 没有内容 稍后 我计划在这个 div 里面加上一个餐厅的商标 暂时我会把这个 div 留空 但我会先把纵列类加在这个 div 上 让它占据剩余的纵列数 对于这个 div 我会写 col-xs-12 和 col-sm-4 因为从小屏幕到大屏幕的尺寸上 我们还剩下4个纵列数 空在这一行的右边 一旦完成了这一项 让我们翻到 网页实际内容中的 div 这些 div 每一个都有标题以及 以及实际的内容 因此对于标题部分我会分配较少的纵列数 而对于详细的内容 我则会让它占据更多的纵列数 要这样做 我会在两个 div 上 应用不同的纵列类 对于超小尺寸的屏幕 我希望把它们上下堆叠起来 但对于小尺寸到大尺寸的屏幕 
我希望他们并列显示 让我们在这些内部 div 上面应用这些纵列类吧 对于包含了标题的 div, 我会加入 col-xs-12 和 col-sm-3 而对于其他的 div, 我会 使用剩余的纵列 想想我会怎么去做 好了 都完成了 让我对网页实际内容中剩下的行 都重复这项工作 而对于页脚的 div, 我会 在小到大尺寸屏幕下让第一个 div 占据 3 个纵列 让第二个 div 占据 5 个纵列 从小屏幕到中等屏幕直到大屏幕 而最后一个 div 占据剩余的纵列 但在超小尺寸屏幕下我会让第一和 第二个 div 各占据 6 个纵列 而让第三个占据全部 12 个纵列 而版权声明 我会让它扩张到全部 12 个纵列 让我把这些纵列类应用到这些 div 上 我们再回过头来 看看整个完成版的网页 我现在已经完成了所有的变动 让我们来看一看页面 你现在可以看到网页是如何被渲染的 你可以看到这个Jumbotron 饭店名和描述占据着左边的 8 个纵列 然后右边有空白的位置 稍后我们在这里加上商标 这会是我们下一个模块的练习的一部分 然后我们看到三大块的内容 被布置成标题占据 3 个纵列在左边 实际的长描述占据剩余的 9 个纵列放在这里 下来到页脚处 你可以看到链接占据了 3 个纵列 地址占据了 5 个纵列 然后 指向我们的社交网站的链接占据了剩下的 4 个纵列 下面的版权声明横跨了整行的 12 个纵列 让我们现在来检查一下网页的响应式行为 现在 开着这个网页 让我慢慢缩小网页的宽度 看看网页是如何响应屏幕尺寸的减小的 现在这是 1280 像素 这是我正在用的屏幕的宽度 我会渐渐缩小这个宽度 你就可以看到 屏幕宽度减小时 网页排版的变化 现在这个网页仍然在小尺寸屏幕上 你可以看到网页的排版像这样 让我们看看超小屏幕尺寸上会发生什么 现在你可以看到 当我从小尺寸换到超小尺寸时 马上我们的内容排版就发生了改变 现在 饭店的描述还有 饭店名称都占据了整个屏幕的宽度 原来并排的这两个项目现在变成了 上下堆叠 再看一下页脚 你看到链接和地址现在并排显示 而指向我们的社交网站的链接现在显示在 一个单独的行里 占据了整个屏幕的宽度 版权声明则保持不变 现在你可以看到我们是如何在我们的网页中引入响应性的 我们可以看到在网页中 所有行中的标题和描述都使用了类似的排版方式 现在我想要做一个细小的改动 让某些行对调标题和描述 特别是第 1 和第 3 行 那么这个网页就需要多一些有趣的特性 我们要怎么做到这一点呢 这就是我们之前讨论过的 push, pull 和 offset 等类能够帮上忙的地方了 让我们把这些变化应用到这些类 再回过头来 看看到时网页排版的变化 从小屏到大屏 我会把标题 向右边推 (push) 9 个单位 然后把描述向左边拉 (pull) 3 个单位 那么回到我们的 HTML 页面 现在对于第 1 和第 3 行 我会把标题推向右边 然后把描述拉向左边 那么进入到 div 中, 对于标题的 div 我会应用 col-sm-push-9 而对描述的 div 我会应用 col-sm-pull-3 对第三行做同样的处理 去页脚 找到装着连到我们的网页的链接的 div 我要应用1个单位的向右偏移 然后让它只占2个单位 我会找到这里 然后 把 col-xs-6 改为 col-xs-5 然后再加上 col-xs-offset-1 对于 col-sm 我会把它减少到 2 做了这些 我就更新了 我的页脚里面的链接列了。 现在让我保存一下这些改动 看看更新的网页 回到我们的网页 现在你看到我用了推和拉的类 来调整这三行里面的内容的顺序 在第一行你可以看到标题被推到了右边 而内容则被拉到了左边 第三行也是类似的情况 现在你可以看到下面的这些链接已经 通过使用偏移(offset)被推向右边一个纵列 其他东西则没有变动 现在 如果我将网页缩小到超小尺寸 留意一下网页的响应 网页的排版跟之前仍然一样 翻下来到页脚 我可以看到我的链接 显示为一个点列表 我不想要这个点列表 而想要它完全靠左 因此我会应用一个 list-unstyled 类 到这个列表上 然后你就会留意到这里的变动 来到这个 ul 标签的源代码 我要应用一个 list-unstyled 类 回到网页 你可以看到在页脚上 链接列表不再带有点 然后我要向你展示我们如何在网站项目中 引入一个自定义的CSS文件 要做到这一点 我们来到 CSS 文件夹 
在那里创建一个新的文件 然后我们可以叫它mystyles.css 打来这个mystyles.css文件 我会粘贴一些CSS代码 这些代码会应用到我们网页的某些元素上 粘贴CSS代码 这些代码我会提供给你们 我使用这些CSS代码来设计网页中各行的样式 在这里 你可以看到我在页首和页尾 都加了一些 margin 和 padding 的数值 对于内容的行 我也添加了类似的 margin 和 padding 此外 对于内容行 我还设置了所有内容行的最小高度为 400 像素 像这样 我们的网页就可以排列得更清晰 对于页脚 我添加了一个浅灰的背景色 这样它看起来就跟网页的其他部分不一样 在mystyles.css文件上做了这些改动之后
我会保存它 然后把这个CSS文件包含在我的HTML页面里 回到HTML代码 在头部(head) 紧跟在引入bootstrap文件的后面 我要多加上一行来引入我们刚刚创建的CSS文件 我会写 css/mystyle.css 也就是我想引入的文件 而这是一个样式表文件 那么我就把我的自定义CSS类加入到我的项目里来了 现在我可以把这些CSS类加到不同的行里了 让我加上这些页首 内容行和页尾的类 然后再看看网页有什么变化 我在页首的行里加入了页首的格式 然后在网页的内容部分的行里 加入了 row-content 类 最后 我要把页尾的格式加入到页尾的行里 更准确的说把它应用到页尾自身 这样我就加完了这些类了 让我们回到网页 检查一下它是如何变化的吧 回到网页你会发现网页排版稍微有些变化 在页首 Jumbotron维持不变 但是其他的行则占据了比之前多得多的屏幕空间 这是因为我给这些行定义了最小高度 为400像素 所以现在这些行 每个的高度都是400像素 而页脚现在则有了灰色的背景色 并且在底部显示 最后我回到 mystyles.css文件 为Jumbotron和页脚的地址 再加上一些自定义的类 在代码里 你可以看到 我给 Jumbotron 设置了适当的 padding 此外我还要把 Jumbotron 的背景色设置为 浅靛蓝色 而 Jumbotron 里显示的文字则设置为米白色 地址会出现在我们页面的页脚 现在我要减小地址的字号 让它比标准字号略小 例如大概标准字号的 80% 左右 这就是我对地址做出的改动 让我们切回网页画面 我们可以看到 我们的Jumbotron已经变成了浅靛蓝色 此外 Jumbotron 中的文字则变成了米白色 然后下来到页脚 你会看到 地址现在显示的字号比之前稍微小一些 那么我们在这个练习里面希望做到的改动就全部完成了 在这个练习的结尾 我们学到了如何将纵列类 应用到我们网页中的各种 div 里面 此外 我们还学到了如何引入自定义的CSS类 并且将它们应用到网页中的不同元素上 这次练习到此结束