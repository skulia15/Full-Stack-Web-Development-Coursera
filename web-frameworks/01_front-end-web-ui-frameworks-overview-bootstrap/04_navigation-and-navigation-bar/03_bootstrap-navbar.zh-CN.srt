1
00:00:02,530 --> 00:00:08,120
接下来让我们学习
Bootstrap 自身对导航的一些支持

2
00:00:08,120 --> 00:00:13,380
特别地 我们要学习 Bootstrap 的导航栏

3
00:00:14,780 --> 00:00:17,240
使用导航栏是一种很易懂地

4
00:00:17,240 --> 00:00:21,780
为一个网站提供导航的方式

5
00:00:21,780 --> 00:00:23,661
接下来让我们看看其实现的细节

6
00:00:26,240 --> 00:00:28,314
我刚刚说了

7
00:00:28,314 --> 00:00:34,060
导航栏是一种易懂的提供导航的方式

8
00:00:34,060 --> 00:00:38,330
它常常出现在一个页面
的抬头处或是底部

9
00:00:38,330 --> 00:00:43,280
这取决于你对网站的设计样式

10
00:00:43,280 --> 00:00:47,070
导航栏还支持响应式设计

11
00:00:47,070 --> 00:00:52,140
这意味着当你的网站在一个
很小的屏幕上被访问时

12
00:00:52,140 --> 00:00:55,010
你可以把你的导航栏折叠起来

13
00:00:55,010 --> 00:00:59,330
并在相应的位置留下合适的信息

14
00:01:00,760 --> 00:01:02,260
对于比较大的屏幕

15
00:01:02,260 --> 00:01:07,788
自然就能把完整的导航栏呈现出来

16
00:01:07,788 --> 00:01:13,230
对于这两种情况 我们接下来会学到
Bootstrap 对它们的相关支持

17
00:01:15,350 --> 00:01:20,650
首先先让我们实现一个简单的导航栏

18
00:01:20,650 --> 00:01:24,780
 并由此看看 Bootstrap 的导航栏
大概长什么样吧

19
00:01:24,780 --> 00:01:30,210
那么这里就是一个导航栏的栗子

20
00:01:30,210 --> 00:01:37,360
效果在上面 代码在下面

21
00:01:37,360 --> 00:01:44,470
我用到了 HTML 中的 nav 标签
来实现导航栏

22
00:01:44,470 --> 00:01:47,670
对这个 nav 标签 我设置了一系列属性

23
00:01:47,670 --> 00:01:53,390
其中设置的类是 Bootstrap 相关的类

24
00:01:53,390 --> 00:02:01,260
其中 class="navbar" 会将该 nav 标签
变成一个导航栏

25
00:02:01,260 --> 00:02:05,976
而 navbar-default 则是对其样式的定制
顾名思义 也就是 Bootstrap

26
00:02:05,976 --> 00:02:08,106
默认的导航栏样式
比如说应用默认的颜色之类的

27
00:02:08,106 --> 00:02:12,439
除了设置类以外 我还设置了
role="navigation"

28
00:02:12,439 --> 00:02:17,810
意味着该 nav 标签将会
为该网站提供导航

29
00:02:17,810 --> 00:02:21,500
框架搭好之后 让我们来看看

30
00:02:21,500 --> 00:02:27,040
怎么设置这个导航栏中的内容吧

31
00:02:29,390 --> 00:02:34,380
特别的 你可以看到
导航栏中的每一项内容

32
00:02:34,380 --> 00:02:39,130
都是作为 ul 标签下的一个
li 元素存在的

33
00:02:40,390 --> 00:02:44,850
其中要对 ul 标签设置
class="nav navbar-nav"

34
00:02:44,850 --> 00:02:50,400
至于其下的 li 标签
只需将导航栏中的每一项作为其内容即可

35
00:02:50,400 --> 00:02:56,650
当然 由于每一项都是个链接
所以要用 a 标签包起来 同时还要设置 href

36
00:02:57,800 --> 00:03:02,776
然后对其中之一还要设置 class="active"
意味着这是最初被选择的一项

37
00:03:02,776 --> 00:03:09,490
在这个栗子里 我对 Home 对应的 li
设置了 class="active"

38
00:03:09,490 --> 00:03:15,820
所以在一开始 你可以看到

39
00:03:15,820 --> 00:03:21,660
Home 这一项被高亮了

40
00:03:21,660 --> 00:03:29,220
接下来我要拓展这个导航栏
以加进更多的功能

41
00:03:29,220 --> 00:03:35,180
其一是我加进了一个商标

42
00:03:35,180 --> 00:03:38,230
你可以看到在导航栏左侧

43
00:03:38,230 --> 00:03:42,830
有一个我们网站的商标

44
00:03:42,830 --> 00:03:46,830
实现的方式是用一个设置了
class="navbar-header" 的 div

45
00:03:46,830 --> 00:03:51,280
然后在其中我用了一个设置了
class="navbar-brand" 的 a 标签

46
00:03:51,280 --> 00:03:56,370
意味着这一块将会是一个商标

47
00:03:56,370 --> 00:03:59,980
我还设置了其 href 属性
也就是其将指向的地址

48
00:03:59,980 --> 00:04:05,220
你可以将这些文字替换成一张图像

49
00:04:05,220 --> 00:04:09,970
比如说 logo 什么的

50
00:04:09,970 --> 00:04:15,855
那么这其实蕴含了一个
实现导航栏时常用的手段

51
00:04:15,855 --> 00:04:19,090
也就是在导航栏里塞一个 logo
作为返回主页的导航

52
00:04:19,090 --> 00:04:24,300
因为如果你在导航栏里放一个 logo 的话

53
00:04:24,300 --> 00:04:29,640
"点击 logo 将会返回主页" 这个事实
已经几乎是约定俗成的了

54
00:04:29,640 --> 00:04:33,280
所以当你设置这个 logo 的 href 属性时

55
00:04:33,280 --> 00:04:38,360
你要注意把它设置成主页的地址

56
00:04:40,290 --> 00:04:45,180
类似的 我们还可以将东西

57
00:04:45,180 --> 00:04:48,020
放在导航栏的右侧

58
00:04:48,020 --> 00:04:53,260
为此 除了对 ul 标签的 class 属性

59
00:04:53,260 --> 00:04:56,060
 设置 nav 和 navbar-nav 之外

60
00:04:56,060 --> 00:05:00,950
还要多设置一个

61
00:05:00,950 --> 00:05:02,719
navbar-right

62
00:05:02,719 --> 00:05:08,130
这样一来 在这个 ul 下面的元素
就会放置在导航栏的右边

63
00:05:08,130 --> 00:05:12,224
同理对左边就是 navbar-left

64
00:05:14,460 --> 00:05:17,830
我们还能把导航栏做成响应式的

65
00:05:17,830 --> 00:05:23,490
意味着当你在比较小的屏幕上
浏览你的网站

66
00:05:23,490 --> 00:05:26,230
或是任何其它大小的屏幕上浏览时

67
00:05:26,230 --> 00:05:31,920
你都可以让你的导航栏折叠起来

68
00:05:31,920 --> 00:05:37,740
并在相应的地方放一个开关按钮

69
00:05:37,740 --> 00:05:42,800
你可以做到只有当用户
点击这个开关按钮时

70
00:05:42,800 --> 00:05:47,800
才把你的导航栏展开

71
00:05:47,800 --> 00:05:50,370
然后当用户再次点击时

72
00:05:50,370 --> 00:05:53,178
又把导航栏折叠起来

73
00:05:53,178 --> 00:05:58,493
如果应用 Bootstrap 的话

74
00:05:58,493 --> 00:06:03,916
你可以轻松地将这么一个开关按钮

75
00:06:03,916 --> 00:06:07,750
放在你的导航栏中

76
00:06:07,750 --> 00:06:11,240
对于其具体代码实现
我们会在下节课中学习

77
00:06:11,240 --> 00:06:15,900
接下来让我们会大概看一下其实现

78
00:06:17,030 --> 00:06:21,400
首先一个开关按钮

79
00:06:21,400 --> 00:06:27,740
一般是放在 navbar-header 里面的

80
00:06:27,740 --> 00:06:31,110
然后它本身则是一个 button 标签
同时对其要设置

81
00:06:31,110 --> 00:06:39,550
class="navbar-toggle collapsed"
其中设置的 collapsed 属性代表的是

82
00:06:39,550 --> 00:06:46,310
接下来的设置是该按钮在
导航栏被折叠时所表现出来的

83
00:06:46,310 --> 00:06:52,440
比如说在一个很小的屏幕上
浏览该网页时 该按钮的表现

84
00:06:54,480 --> 00:07:01,070
而当用户点击这个按钮时
该导航栏就会展开

85
00:07:01,070 --> 00:07:07,110
你可以看到我在 button 里面放了三个设置了
class="icon-bar" 的 span, 所以在这个按钮中

86
00:07:07,110 --> 00:07:12,890
你可以看到三条横杠
注意 对导航栏展开后的内容

87
00:07:12,890 --> 00:07:18,150
要以 ul 标签的形式封装在一个 div 中
同时对这个 div 要设置一个 id

88
00:07:18,150 --> 00:07:23,670
在这个栗子里 我把 id 设置为了 navbar

89
00:07:23,670 --> 00:07:28,840
所以对那个开关按钮 就要设置
data-target="#navbar"

90
00:07:28,840 --> 00:07:31,805
看到这里你可能会想问 这里这个
data-target 的具体实现原理是什么

91
00:07:31,805 --> 00:07:34,175
这个问题的答案要涉及到

92
00:07:35,495 --> 00:07:39,235
对 Bootstrap 中 JavaScript 模块的理解

93
00:07:39,235 --> 00:07:44,592
所以在我们讨论 Bootstrap 中的
JavaScript 的时候

94
00:07:44,592 --> 00:07:48,628
我会回过头来再看这一部分

95
00:07:48,628 --> 00:07:54,242
不过现在的话 只需要知道

96
00:07:54,242 --> 00:07:59,682
这个 data-target 和这个 id 之间要一致
就已经够了

97
00:07:59,682 --> 00:08:02,562
这意味着我将下面这个 div 中的内容

98
00:08:02,562 --> 00:08:07,410
"绑定"在了这个开关按钮上

99
00:08:07,410 --> 00:08:09,520
同时对下面这个 div
我要对其设置

100
00:08:09,520 --> 00:08:14,408
class="navbar-collapse collapse"

101
00:08:14,408 --> 00:08:18,600
意味着如果你一开始在
很小的屏幕上浏览该页面的话

102
00:08:18,600 --> 00:08:22,640
那么这个 div 中的内容就会被折叠

103
00:08:22,640 --> 00:08:29,410
只有在用户点击了这个开关按钮后
这个 div 中的内容才会被呈现

104
00:08:30,780 --> 00:08:34,270
对于导航栏 你还可以定制更多东西

105
00:08:34,270 --> 00:08:39,230
比如说你可以令其
固定在当前页面的上方

106
00:08:40,500 --> 00:08:46,300
意味着该导航栏将总是
在你视野上方出现

107
00:08:46,300 --> 00:08:50,230
随着你滚动页面 页面的主体内容可能会跟着滚动
但导航栏却总是在上方的一个固定位置出现

108
00:08:50,230 --> 00:08:53,990
当然你也能把导航栏钉在底部

109
00:08:53,990 --> 00:08:56,168
只要设置相应的类即可
上 下方的类分别是

110
00:08:56,168 --> 00:09:00,200
navbar-fixed-top
和 navbar-fixed-bottom

111
00:09:00,200 --> 00:09:04,941
你同样能让导航栏
固定在页面的某一个地方

112
00:09:04,941 --> 00:09:07,380
设置时 将 fixed 改成 static 就行

113
00:09:07,380 --> 00:09:10,550
这意味着导航栏会出现在
页面的上方或下方

114
00:09:10,550 --> 00:09:12,488
而且会随着页面的滚动而滚动

115
00:09:12,488 --> 00:09:16,940
也就是当你往下滚动页面到一定程度
你就看不到你的导航栏了

116
00:09:19,510 --> 00:09:24,220
之前我们实现导航栏时
用的是 navbar-default

117
00:09:24,220 --> 00:09:29,300
也就是 Bootstrap 默认的导航栏样式
给人的总体印象浅色的

118
00:09:29,300 --> 00:09:34,500
你也可以设置为深色的

119
00:09:34,500 --> 00:09:39,830
只要用 navbar-inverse 替换就行

120
00:09:39,830 --> 00:09:44,840
此时 导航栏的背景将会是深色的

121
00:09:44,840 --> 00:09:47,880
而文字则会是浅色的

122
00:09:49,210 --> 00:09:54,500
最后要介绍的一个导航栏的功能

123
00:09:54,500 --> 00:09:56,580
就是下拉菜单了

124
00:09:57,600 --> 00:09:59,000
事实上 导航栏中的任一项

125
00:10:00,250 --> 00:10:04,050
都能变成一个下拉菜单

126
00:10:04,050 --> 00:10:08,315
当用户点击一个下拉菜单时

127
00:10:08,315 --> 00:10:13,270
它会显示一系列东西

128
00:10:13,270 --> 00:10:19,100
然后用户可以接着点击
其感兴趣的链接

129
00:10:19,100 --> 00:10:23,070
如果你再次点击那下拉菜单的话

130
00:10:23,070 --> 00:10:25,950
这些东西就会被收起来

131
00:10:25,950 --> 00:10:31,000
总之 下拉菜单中的内容显示与否

132
00:10:31,000 --> 00:10:35,460
正是由导航栏中
对应的下拉菜单控制的

133
00:10:35,460 --> 00:10:40,542
在这个栗子里 如果你点击
导航栏中 Menu 这一项

134
00:10:40,542 --> 00:10:44,040
它就会将一系列东西呈现出来

135
00:10:44,040 --> 00:10:49,521
如果你再次点击这个 Menu 按钮
这些东西就会被收起来

136
00:10:49,521 --> 00:10:54,140
这就是下拉菜单的效果

137
00:10:54,140 --> 00:10:55,170
这是怎么实现的呢？

138
00:10:56,790 --> 00:10:58,110
如何实现一个下拉菜单

139
00:10:59,720 --> 00:11:07,330
为此 我们需要用一个设置了
class="dropdown" 的 li 标签

140
00:11:07,330 --> 00:11:12,800
注意这个 li 标签正是之前设置了
class="nav navbar-nav" 的

141
00:11:12,800 --> 00:11:18,785
ul 标签下的众多 li 标签中的一个

142
00:11:18,785 --> 00:11:24,665
只不过其设置了 class="dropdown"
以表示其是一个下拉菜单 dropdown 而已

143
00:11:24,665 --> 00:11:27,995
左边这坨代码是

144
00:11:27,995 --> 00:11:31,720
对 Menu 这个下拉菜单按钮的定制

145
00:11:31,720 --> 00:11:36,700
你可以看到我对其 a 标签

146
00:11:36,700 --> 00:11:41,100
设置了 class="dropdown-toggle"

147
00:11:41,100 --> 00:11:46,740
以及 data-toggle="dropdown"

148
00:11:46,740 --> 00:11:50,150
我还设置了其它一些东西

149
00:11:50,150 --> 00:11:55,240
比如在其中放了一个设置了
class="caret" 的 span

150
00:11:55,240 --> 00:11:59,860
这个 span 正是在 Menu 四个字母右边

151
00:11:59,860 --> 00:12:05,325
那个小小的向下指的三角形

152
00:12:05,325 --> 00:12:08,280
这个小三角形起到了提示用户

153
00:12:08,280 --> 00:12:11,575
"这是一个下拉菜单" 的作用

154
00:12:11,575 --> 00:12:15,325
那么怎么定制下拉菜单中的内容呢 ?

155
00:12:15,325 --> 00:12:21,672
我们需要用到另一个 ul 标签

156
00:12:21,672 --> 00:12:28,742
我把其代码贴在了右边这里

157
00:12:28,742 --> 00:12:32,940
可以看到 下拉菜单中的每一项

158
00:12:34,990 --> 00:12:37,450
都被放在了一个单独的 li 标签中

159
00:12:37,450 --> 00:12:41,040
比如 Appetizers

160
00:12:41,040 --> 00:12:42,860
Main Courses 之类的

161
00:12:42,860 --> 00:12:47,980
你也可以加进一条长长的横杠
只需要对相应的一项设置

162
00:12:47,980 --> 00:12:51,610
role="separator"
和 class="divider" 即可

163
00:12:51,610 --> 00:12:54,200
你还可以在这条横杠下
加一个副标题一样的东西

164
00:12:54,200 --> 00:12:58,920
只需对相应一项设置
class="dropdown-header" 即可

165
00:12:58,920 --> 00:13:04,510
如此 则该项不会被当做一个链接

166
00:13:04,510 --> 00:13:08,440
而是会被当成一个副标题

167
00:13:08,440 --> 00:13:14,370
总之 下拉菜单是导航栏支持的
相当有用的一个功能

168
00:13:15,720 --> 00:13:19,980
以上 我们完成了对
Bootstrap 导航栏的学习

169
00:13:19,980 --> 00:13:25,440
在接下来的练习中 我们会在我们的网页中
亲自设计并实现一个导航栏

170
00:13:27,210 --> 00:13:33,835
然后在完成练习后 我们的网页上方
就会有一个固定的导航栏

171
00:13:33,835 --> 00:13:40,330
该导航栏将会显示我们网页的一些细节

172
00:13:40,330 --> 00:13:48,210
同时我们会把导航栏的颜色
定制得符合我们网站的总体色调

173
00:13:48,210 --> 00:13:54,078
这个定制是通过 CSS 类来实现的
同时 我们还会在导航栏中

174
00:13:54,078 --> 00:13:59,549
实现这么一个下拉菜单
【翻译 - Carefree0910】