Let's now talk about navigation. What is navigation? Why is it important in
the context of websites? And how do we provide navigation
within our website hierarchy for visitors to our website? When we look at many websites out there, we immediately realize that most
websites are not single pages. Of course, you do see occasional
single-page websites, too. But in general, most websites
typically consist of multiple pages. And so when a visitor comes to your
main web page, typically indexed .html, they might also need to navigate to
other pages within your website. And when they do so, you should have a way
of indicating to them which other pages are there on your website, and
also if they move to another page, where they are within your web page
hierarchy on your website, and also an easy way of returning to
the main page of your website. All these features can be provided
through various navigational aids that you can build
into your websites. Now there are several commonly
used navigation patterns that are used extensively
on most websites. In particular,
navigation bar is an easy way of providing the user with access to
the hierarchy of a website. When you think about website navigation,
one of the important features that you should consider is the information
architecture that you use in your website. What exactly is information architecture? This has to deal with the organization,
the labeling, and the appropriate navigation
methods that you provide through the information that is
available on your website. Now, information architecture
design is a whole field in itself. And that is beyond
the scope of this course. But I have provided you with some
additional links in the resources, where you can go and explore more
details about information architecture. In particular,
we need to consider information architecture when we
are designing websites, and that also suggests what kind of navigation
we should provide within our website. Typically, websites are organized in
some kind of a hierarchical fashion. You have a top level page from
which you might have subpages. And from those, you can go into
further down in the hierarchy. You might even have,
within a single layer, cross navigation between different
entities within that layer. So, any navigation scheme that you
design should be able to accommodate all these different patterns of
access to these different objects of information
within your web page. In general,
most websites will have a navigation bar designed and available within
the web pages of the website. The navigation bar is typically
shown either at the top or at the bottom of the website. Sometimes it will be fixed in location,
either the top or the bottom of the window,
which is displaying the web page. Whatever be the case, a navigation bar
has become a de facto standard for providing a way of informing a visitor about various pages that
are available within your website and how you can navigate from one to another. In addition, within the navigation bar,
you might also indicate where the user currently
is within this hierarchy. Taking a look at your own course website, you will see the provision of a navigation
bar within the course website. In this case,
it is provided more like a sidebar. So you can see that on the left-hand side, you have information like where
you are currently at the moment. And so for example, right now,
we are on the Course Info page of our course website. There are a few suggestions on how
to design a good navigation bar. Here, I have a small list of them. Of course, non-exhaustive list, so
you might have more things to consider when you are actually applying
a navigation bar to your own website. But when you design navigation,
you should typically provide user-friendly terms, but
list it within your navigation bar. And also,
you have to standardize the navigation. So no matter which page
they user is at the moment, they will still be able to navigate to
any other location within your website. And also, some way of identifying where within
the hierarchy the user currently is. So you might highlight the current page
that the user is viewing in the navigation bar, so that it's easy for them to see
where they are within the hierarchy. There are some standard web
conventions that people use when they design navigation bars. One such convention that
has been widely adopted is that if you put a logo of your
website in your navigation bar, clicking on that logo will typically take
you back to the home page of that website. Now, some things that you
should definitely avoid is to have too many items
in your navigation bar. How many is too many? If you find it difficult to
use your navigation bar, well, that is always already too many. It is better to have a smaller subset, targeted subset,
of links within your navigation bar. Meaningful links,
within your navigation bar. Again, this is a choice of taste for
different people that have different criteria for considering what should and
should not be in the navigation bar. And also depending on the specific
website that has been designed. One other thing that you should think
about is to avoid generic labels. Things like if you put a product there. What does a product mean? Or a service there. What kind of service
are you talking about? It is better to customize
those labels to specific items that you are providing
within your website. Another commonly used pattern for providing navigational information within
a website is what we call as a breadcrumb. If you have noticed on many websites,
at the top, you might see a set of links being indicated with
pointers to sublinks. And the current page that you are on might
be highlighted in that set of links. Clicking on any one of those earlier links
will take you back within the hierarchy. So, in some sense,
the breadcrumbs sort of also reflects some kind of
a structure of your web page. Now, there are many different
ways of designing breadcrumbs. If you have a website where people
are going through a step-by-step process, say, for example, purchasing an airline
ticket, the breadcrumbs might indicate the current sequence within the entire set
of steps that the user is at the moment. Or if you have a e-commerce website,
you might have a current sequence of steps in order to order an item or
a set of items from that company. So you might indicate, for example,
whether the user is currently in the selection process of the items, or the
user is in the payment process, and so on. So, that is what we have addressed, path based navigation support
within the breadcrumbs. The second approach would be to
provide a location based information within the breadcrumb hierarchy. A third alternative that you
might have seen in some websites, where the breadcrumbs are not actually
indicated as a linear sequence but more like a set of choices, maybe where
you have several set of attributes related to the items that you might be
selecting on an e-commerce website. Say, for example, a price range,
the color, or the size, or the type, or maybe the manufacturer's
information, and so on. So those kind of things that
can also form information that could be characterized under breadcrumbs. Let's take an example of
your own course website to see how breadcrumbs
are being used there. For example,
when you visit your own course page, as you are going through the various items in the course content,
you would notice on the top a breadcrumb based navigation
that is already provided for you. In there, we have the upper level links being shown in the breadcrumbs as
links and the current location being shown just by information,
and it is not a link, but just identifying where you
are currently in the hierarchy. There are several other navigation
aids that are used in practice. These include tabs, pills, pagination. Especially when you have a lot of
information to be shown to a user, you might actually subdivide
it into pages, and then let the user access
the information page by page. So you would provide some kind of
pagination support at either the top or the bottom of the page of
information that you are displaying. We have dropdowns, accordions, tags, Scrollspy, and Affix, and many others. We will look at some of these
in more details in subsequent modules of this course.