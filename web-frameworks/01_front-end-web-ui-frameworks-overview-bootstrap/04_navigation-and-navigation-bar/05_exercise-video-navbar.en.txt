In the final exercise for
this module, we're gonna start with the webpage that we completed at
the end of the previous exercise. And add a few more features first. We will build in a navigation
structure for our website. We will do that by including a navigation
bar into our webpage and then add in the links to other webpages that
are going to form part of our website. Now the remaining pages will be
added as we go through other modules of this course. We will put the navigation structure
into place at this moment. The second item that we are going to
look at in this exercise is the use of Icon font in designing our web pages. In particular,
we'll look at Font Awesome and the built in glyphicons that
come with Bootstrap and also we'll look at adding Bootstrap
social buttons, in order to create buttons to various social
websites on our webpage. As I mentioned in the body of a ratio
replace just before the header I'm going to paste the code
to create the navbar. So as you can see I have already pasted
the code for the navbar I am using the nav element from HTML5 And
I have styled it with the navbar, navbar-inverse and
navbar-static-top classes. What this means is that this navbar
will appear at the top of the page. Taking a look at the web page,
you can see that the navbar is displayed at the top of the page and
will scroll as I scroll the page. In addition,
you notice that that Home link on the navbar is highlighted
with a darker background. Now, I am using the active class
in order to highlight the. Going back to our navbar code, you notice
that inside my navbar I have a container. And within the container I
am using a unsorted list. And I am styling it with
the class nav navbar-nav. So this is where the links that
appear on our navbar are included. The home link, in particular,
I have styled using the active class. And hence,
it has been highlighted on the screen. Going back to our web page,
let's see how the navbar behaves as we resize that browser window. So you can see that the navbar continues
to be displayed at the top, but when we hit the extra small screen size, do you notice that the navbar is
now being displayed vertically? Now this is obviously going to
look look ugly on small screens. How do we turn this navbar
into a responsive navbar? Meaning that when you are displaying
it on extra small screens, I want this content of
the navbar to be hidden and only shown when I explicitly ask for
it to be shown. Returning to our navbar, I have pasted in additional code
in order to make it responsive. We have seen this code already
in the lecture earlier. So this code is exactly similar
to what I have shown you earlier when we discussed
about bootstraps navbar. So this makes the navbar responsive. So after this change, let's go and
have a look at our web page and see how it responds when
the browser window is shut. Returning to the web page, we can now
see that the navbar has the additional brand shown within the navbar. In addition, as I shrink the webpage,
you notice that when the page reaches the extra
small size, the links in the navbar are now hidden, and instead,
to be replaced by this button here. When I click on the button,
the items in the navbar are displayed, so I can click and
hide by toggling, using this button. As a next step, I'm going to introduce
a drop down into the navbar. I'm going to take the Menu
link in the navbar, and then when I click on the Menu link,
it'll display a list of items or
categories of items in the menu, so that their visitor can be directly
taken to any one of those categories, like appetizers, main courses,
desserts, and so on. So, let's go ahead and
make the change the code, and then review it, to introduce
the drop-down Into our navbar. I have replaced the menu link
that we had in the unsorted list by this list item,
whose class is dropdown. So inside this list item, we have the
contents of the dropdown enclosed here. Again inside another
unsorted list which is. Styled with the class dropdown-menu. So, this list will be displayed
when I click on the menu item. Let's go visit the web page one more time. Taking a look at the web page now,
you'll see that the Menu item has now been replaced
with a Menu drop-down. You'll see the small inverted
triangle there, indicating the caret. Now, when I click on the item, you can see the items on
the drop-down being displayed here. The next modification that
I'm going to introduce is to turn the navbar from a navbar
static top to a navbar fixed top. So I'm gonna go in and
change the class from navbar-static-top to navbar-fixed-top in
the navigation code. Now in addition I'm going to paste in some additional CSS classes
into mystyle.css file. So let me paste that and
then we'll review it quickly. The additional code that I
pasted into the mystyle.css file allows me to style
the navbar in a bit more detail. In particular, I am giving the body
a padding of 50 pixels, because now, since the navbar is fixed at the top
of the page, the navbar is going to cover the top 50 pixels
of the browser window. If our body of our page scrolls,
then the top 50 pixels are gonna be hidden
underneath the navbar. So, to avoid that,
I'm giving a upper margin of 50 pixels, so that the body is
displayed below the navbar. And will still be able to scroll without
getting hidden by the navbar on top. I have also customized
the navbar color itself. I have redefined navbar-inverse
to have a background color. This reaches a darker shade of indigo. In, addition I have customized
a few more of the navbar classes. So I have made sure that, The navbar,
if I am using the active class, that background color is going to
be even darker shade of indigo. And also, the color for
the text is going to be white. So, with this change,
whenever I declare any one of the list items in the navbar to be a active link, then that will be colored even
darker than the navbar's color. In addition, also for
the drop down menu, you saw that drop down was being displayed with
Pale background with darker lettering. I have changed that to follow
the same color as the navbar itself. So after these changes, let's go and
take a quick look at the. Now, going to the web page, you can now notice that my navbar
has acquired a dark indigo color. This is to contrast this with
the lighter indigo colors after. In addition you see that the active
link is even more darker than the dark indigo that I am using for
the navbar. So that the highlighted link
is more clearly visible. The Menu items,
when I click on that you see that the background color of the drop
down has been changed, and the items themselves are now
displayed in light color. And as I scroll through the items,
the selected item is clearly identified. Now, when you scroll this, Web page, you notice that the scrolling, none of the part of the web page
is hidden under the navbar. Our last modification to the webpage is going to introduce Icon
fonts into our webpage. I'm going to make use of the built-in
glyphicons that come with Bootstrap. In addition, I'll download
the Font Awesome Icon font by and then include that into our web project. Also, I will use Bootstrap Social to style the social media buttons that
I have included in my webpage. So, I had links in the footer
of the web page earlier so I'm gonna turn those
links into buttons styled with Font Awesome and Bootstrap Associate. So let's go ahead and do that next. First, we'll go to
the Font Awesome website. And then download the Font Awesome code. After you're done with the Font Awesome
zip file, move that to our project directory, unzip it, and you will be
left with a font-awesome-4.4.3 folder. Go into that folder and
then you will see a folder called CSS. From the CSS folder,
take the two Font Awesome CSS finds and then move them to the CSS
folder of our project. Also in the Font Awesome folder,
you will find a folder named fonts. Going to that fonts folder and then move all the files from there
to our web projects fonts folder. Once we are done with that,
we can now delete the font-awesome folder. We no longer need the remaining
items from that folder. Next, download bootstrapsocial.css
that we have provided for you. This is a modified version of
bootstrapsocial.css file that is available on the Internet. We have modified it slightly to
introduce additional buttons for Google+ and YouTube. Okay, now we have assembled everything but
the need to use fonts in our webpage. We are now gonna go to
the webpage HTML code, and then add in the icons
into our webpage first. We need to include the two CSS files,
the font-awesome.min.css, and bootstrap-social.css files
into our HTML page. So, let's go ahead and do that first,
in the head of the page. The first icon that I'm going to introduce
is into the home link on our navbar. So I'm going to introduce a home right
next to the home link of our navbar. To do that, I'm going to make use of
the glyphicons for the home button. So let me replace the home link list item in the navbar and
then we'll have a quick look at the cut. Taking a quick look at the modification, I see that I am still defining
that link as an active link. In addition to the home link that I have,
I have included this span with a class called
glyphicon glyphicon-home. That is how we make use of
glyphicons in our web page. Next we go to the footer of our page. And where we have the address, I'm going
to replace the telephone, the fax, and the email links there
using fontasm icons. Returning to the base code you see that
I have now replaced the telephone, the fax, and
email letters from that address by their corresponding photos and icons. So, to use photos and icons,
we introduce Aa tag called i, with a class fa fa-phone,
to reuse the phone icon. And fax and envelope for the image icons. So, with these changes I have introduced four types of icons into
the address in the footer. Our last change is to the social
media links that are in the footer. I'm gonna replace those
text links with buttons, using Bootstrap Socials
tiled Font Awesome icons for the different social media sites. So let me substitute
the code in place there and then we'll have a look at the source code. Returning to the source code, you can
now see that I have replaced those links with Bootstrap Social paste buttons. How do we do that? Let's go and have a look at the code. Now the div that I have there, I have
turned the div into a navbar-nav class. So, we can use navbar stylings in other locations in our webpage,
if we wish to. So I'm using that to define this bar containing the icons of
all my social media links. So, for each one of those links, let's have a look at the link
corresponding to Google+ here. So I am defining a tag a,
with the class button. So I am turning that into
your button class, and then I am saying button social icon,
and button Google+. So this description comes from Bootstrap
Social's way of specifying buttons. And then inside there I am
using the Font Awesome icon for Google+ enclosed in there. Now the button is styled to be
like the Google+'s standard buttons that you would see
on many different web pages. Similarly for the remaining social
links within that part of the footer. So after these changes let's go and
have a look at our web page. Returning to our web page. Now in the navbar,
you see that next to the Home link we have an icon which is the glyphicon
that we have included there. Now, moving to the footer, we can see that the telephone, fax, and
email are now replaced by icons. Also, have a look at
the links to the social media sites that we
have on the right side. They have all now been
turned into buttons. This completes this exercise. In this exercise we looked
at using navbars and using a responsive navbar in our webpage. In addition,
we looked at using icon fonts and introduced additional CSS
classes to style our webpage.