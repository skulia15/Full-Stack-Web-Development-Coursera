1
00:00:02,310 --> 00:00:07,180
在本单元最后的这个练习里
我们会从上一个练习中

2
00:00:07,180 --> 00:00:11,700
我们完成的那个网页着手

3
00:00:11,700 --> 00:00:15,480
并为其加进一些功能

4
00:00:15,480 --> 00:00:18,901
我们将会为我们的网站
搭建一个导航架构

5
00:00:18,901 --> 00:00:25,365
为此 我们会在我们的各个网页中
加进一个导航栏

6
00:00:25,365 --> 00:00:32,970
然后 我们要在这个导航栏中
放进一些能导航到其它网页的链接

7
00:00:32,970 --> 00:00:37,570
对于后续单元中实现的网页

8
00:00:37,570 --> 00:00:40,120
预测性分析

9
00:00:40,120 --> 00:00:43,890
不过架构的搭建将在这个练习中完成

10
00:00:43,890 --> 00:00:49,848
我们要做的第二件事情

11
00:00:49,848 --> 00:00:56,320
是尝试使用图标字体
来设计我们的网页

12
00:00:57,560 --> 00:01:01,250
特别地 我们将会学习如何使用
Font Awesome 的一些图标

13
00:01:01,250 --> 00:01:06,500
以及 Bootstrap 自带的 glyphicons

14
00:01:06,500 --> 00:01:12,230
我们还会用到 Bootstrap social buttons
【Bootstrap 社交按钮】

15
00:01:13,720 --> 00:01:19,310
它们是长得像一些
社交网站的 logo 的按钮

16
00:01:21,950 --> 00:01:26,990
正如我之前所说的 我们要在
这坨 HTML 代码中的 body 标签下

17
00:01:26,990 --> 00:01:30,711
实现我们的导航栏

18
00:01:32,500 --> 00:01:37,990
你可以看到我已经在这里
贴好了相应的代码

19
00:01:37,990 --> 00:01:43,156
你可以看到我用了 HTML5 中的 nav 标签
来实现这个导航栏 同时我对其设置了

20
00:01:43,156 --> 00:01:47,130
class="navbar navbar-inverse navbar-static-top"
其中 navbar 声明了其导航栏的身份

21
00:01:47,130 --> 00:01:50,950
navbar-inverse 用于定制其样式
navbar-static-top 则意味着

22
00:01:52,490 --> 00:01:56,440
该导航栏将在页面顶部显示
且当我上下滚动页面时

23
00:01:56,440 --> 00:02:02,190
该导航栏会随页面滚动

24
00:02:02,190 --> 00:02:07,639
特别的 你可以看到导航栏中

25
00:02:07,639 --> 00:02:15,350
Home 链接被高亮显示了

26
00:02:15,350 --> 00:02:20,350
这是因为我对其设置了
active 这个类

27
00:02:20,350 --> 00:02:27,820
回到代码部分 你会发现我在
nav 标签下面放了一个设置了

28
00:02:27,820 --> 00:02:32,550
class="container" 的 div
然后在这个 div 里面 我放了一个 ul 标签

29
00:02:32,550 --> 00:02:37,730
我对其设置了
class="nav navbar-nav"

30
00:02:37,730 --> 00:02:46,100
然后这个 ul 里面装着的
就是我们导航栏中的内容了

31
00:02:46,100 --> 00:02:51,890
特别的 你可以看到我对 Home 那一项
设置了 class="active"

32
00:02:51,890 --> 00:02:56,130
这也是它被高亮的原因

33
00:02:56,130 --> 00:03:00,970
回到我们的网页 让我们看看
我们现在的导航栏的表现如何

34
00:03:02,520 --> 00:03:04,810
当我们改变我们的窗口大小时

35
00:03:07,970 --> 00:03:11,620
你可以看到导航栏一直都
留在页面的顶部

36
00:03:11,620 --> 00:03:13,780
不过当我们的窗口太小的时候

37
00:03:13,780 --> 00:03:20,030
你会发现我们的导航栏竖起来了

38
00:03:20,030 --> 00:03:25,090
这看上去很丑

39
00:03:25,090 --> 00:03:29,110
所以我们要把我们的导航栏
设计成响应式的

40
00:03:29,110 --> 00:03:33,240
这意味着当显示窗口太小的时候

41
00:03:33,240 --> 00:03:38,580
该导航栏能够自动隐藏起来

42
00:03:38,580 --> 00:03:43,120
并允许用户通过某些途径
来控制其显示与否

43
00:03:43,120 --> 00:03:44,380
回到代码部分

44
00:03:44,380 --> 00:03:49,300
我已经贴好了相应的代码

45
00:03:49,300 --> 00:03:53,440
事实上在之前的课中
我们已经见过这段代码了

46
00:03:53,440 --> 00:03:56,510
事实上这段代码和之前我们

47
00:03:56,510 --> 00:04:00,220
讨论 Bootstrap 导航栏时
展现的代码长得很像

48
00:04:00,220 --> 00:04:03,760
这些代码将会把我们的导航栏
变成响应式的导航栏

49
00:04:03,760 --> 00:04:07,760
做完这些后 让我们回去看看
我们的网页变咋样了吧

50
00:04:07,760 --> 00:04:12,790
我们要重点看看我们导航栏的表现

51
00:04:14,050 --> 00:04:20,230
首先你可以看到我们的导航栏中

52
00:04:20,230 --> 00:04:24,960
多出了这么一个商标

53
00:04:26,020 --> 00:04:31,320
然后当我缩小窗口大小时

54
00:04:33,005 --> 00:04:38,175
特别的 当其达到了
extra small 这个大小时

55
00:04:38,175 --> 00:04:44,735
你可以看到我们导航栏的
主体部分都被隐藏起来了

56
00:04:44,735 --> 00:04:49,990
然后在右边这里多出了一个按钮
事实上这个按钮就是控制导航栏的显示与否的

57
00:04:49,990 --> 00:04:55,430
所以我可以通过点击这个按钮
来显示或隐藏导航栏

58
00:04:57,040 --> 00:05:01,940
下一步我们要做的 是在我们的
导航栏中实现一个下拉菜单

59
00:05:03,020 --> 00:05:08,320
我们将在导航栏中的 Menu 链接处
实现一个下拉菜单

60
00:05:08,320 --> 00:05:12,100
从而当我们点击这个 Menu 链接时

61
00:05:13,980 --> 00:05:17,500
它会显示出一些类别

62
00:05:17,500 --> 00:05:22,850
从而访问者能通过它们直接访问
这些类别所对应的菜式信息的网页

63
00:05:22,850 --> 00:05:26,770
比如说 开胃菜 主菜 甜品 之类的

64
00:05:27,980 --> 00:05:30,830
那么接下来让我们去看看

65
00:05:30,830 --> 00:05:35,090
实现这些功能的代码吧

66
00:05:35,090 --> 00:05:40,400
你可以看到我对 Menu 这一项
做了一些更改

67
00:05:40,400 --> 00:05:45,670
我对其本身设置了 class="dropdown"
并在其中加进了一个 ul 标签

68
00:05:45,670 --> 00:05:52,740
对这个 ul 标签 我设置了
class="dropsown-toggle"

69
00:05:52,740 --> 00:05:55,860
然后这个 ul 标签中装的
就是我们下拉菜单中的内容了

70
00:05:55,860 --> 00:05:58,780
你可以看到每一项链接都是一个 li 标签
且 li 标签中还有一个 a 标签

71
00:05:58,780 --> 00:06:03,690
而这个 a 标签的 href 属性的值
就是该链接将会导航到的地方

72
00:06:03,690 --> 00:06:06,690
让我们回到我们的网页

73
00:06:06,690 --> 00:06:10,420
你可以看到这个 Menu 链接

74
00:06:10,420 --> 00:06:14,750
已经变成了一个下拉菜单

75
00:06:14,750 --> 00:06:19,990
你可以看到它旁边有一个小倒三角

76
00:06:19,990 --> 00:06:21,980
当我点击这个链接时

77
00:06:21,980 --> 00:06:27,440
你可以看到一列东西弹了出来

78
00:06:27,440 --> 00:06:30,230
我们接下来要做的是

79
00:06:30,230 --> 00:06:35,520
把这个导航栏从 navbar-static-top
变成 navbar-fixed-top

80
00:06:35,520 --> 00:06:40,785
为此 直接更改导航栏的

81
00:06:40,785 --> 00:06:44,718
class 属性就行了

82
00:06:44,718 --> 00:06:48,718
特别的 我还将在 mystyle.css 文件中

83
00:06:48,718 --> 00:06:53,530
加进了一些新的 CSS 类

84
00:06:53,530 --> 00:06:57,629
我现在就去把代码贴好

85
00:06:57,629 --> 00:07:02,580
你可以看到 mystyle.css 这里
多了一些代码

86
00:07:02,580 --> 00:07:07,970
这些代码比较细致地定制了
我们刚刚做的那个导航栏

87
00:07:07,970 --> 00:07:12,670
特别的 我对 body 设置了一个
50 像素的 padding

88
00:07:12,670 --> 00:07:20,170
这是因为导航栏将总会

89
00:07:20,170 --> 00:07:25,686
占据页面顶部 50 像素的空间

90
00:07:25,686 --> 00:07:30,388
为了防止页面滚动时 页面顶部的
50 像素的内容被导航栏挡住

91
00:07:30,388 --> 00:07:35,340
我对 body 做了这样的设置

92
00:07:35,340 --> 00:07:40,730
也就是设置 padding: 50px 0 0 0

93
00:07:40,730 --> 00:07:46,050
从而页面主体内容将会总是在
导航栏的下方显示

94
00:07:46,050 --> 00:07:52,750
而不会被总是在顶部的导航栏遮住

95
00:07:52,750 --> 00:07:56,110
我还定制了导航栏的颜色

96
00:07:56,110 --> 00:08:02,060
比如 我把 navbar-inverse 的
背景颜色改成了

97
00:08:04,000 --> 00:08:07,170
#1A237E 这个比靛蓝色
深一点的颜色

98
00:08:09,310 --> 00:08:13,547
我还定制了导航栏其它的一些属性

99
00:08:13,547 --> 00:08:17,342
比如我把

100
00:08:19,664 --> 00:08:23,596
高亮链接的背景色

101
00:08:23,596 --> 00:08:30,250
调成了比靛蓝色更深一点的颜色

102
00:08:30,250 --> 00:08:36,970
同时我把字体颜色调成了白色

103
00:08:38,010 --> 00:08:42,420
由于我是直接对 CSS 进行更改

104
00:08:42,420 --> 00:08:47,430
所以这些设置将是全局性的

105
00:08:47,430 --> 00:08:53,400
无论我在哪里使用这些标签
这些设置都会生效

106
00:08:53,400 --> 00:08:57,620
我还对下拉菜单做了定制

107
00:08:57,620 --> 00:09:02,620
你可以看到我把它的背景色调成了浅色
并把其字体调成了深色

108
00:09:02,620 --> 00:09:10,180
当然了 具体颜色还是和
导航栏的色调是一致的

109
00:09:10,180 --> 00:09:14,128
做完这些后 让我们看看
我们的网页现在长啥样吧

110
00:09:14,128 --> 00:09:16,006
来到网页这里

111
00:09:16,006 --> 00:09:20,400
你可以看到导航栏的背景色
变成了深靛蓝色

112
00:09:21,450 --> 00:09:27,475
这是为了和超大屏幕的
浅靛蓝色区分开来

113
00:09:28,980 --> 00:09:32,690
特别的 你可以看到设置了 active 的链接
的背景色是更深一点的靛蓝色

114
00:09:32,690 --> 00:09:35,700
比导航栏用的深靛蓝色还深

115
00:09:35,700 --> 00:09:40,760
这样一来 高亮的链接就显得很突出

116
00:09:40,760 --> 00:09:44,366
对于 Menu 链接 当我点击它后

117
00:09:44,366 --> 00:09:48,874
你可以看到下拉菜单的背景色
变成了和导航栏一样的颜色

118
00:09:48,874 --> 00:09:53,130
然后其中的每一项则是用
浅色来显示的

119
00:09:53,130 --> 00:10:00,364
同时 你可以看到我鼠标悬停处的选项
会被高亮表现出来

120
00:10:00,364 --> 00:10:07,055
而如果你滚动页面主体部分的话

121
00:10:07,055 --> 00:10:10,200
你会发现导航栏不随页面滚动而滚动
而是一直留在页面顶部

122
00:10:10,200 --> 00:10:15,940
同时页面的主体内容
不会被顶部的导航栏遮挡

123
00:10:15,940 --> 00:10:18,640
我们最后要做的

124
00:10:18,640 --> 00:10:22,780
就是在我们的网页中使用图标字体

125
00:10:23,825 --> 00:10:28,045
我将会利用 Bootstrap
自带的 glyphicons

126
00:10:28,045 --> 00:10:33,355
我还会下载 Font Awesome

127
00:10:33,355 --> 00:10:36,890
并使用其中的一些图标字体

128
00:10:36,890 --> 00:10:41,800
同时 我还会用到 Bootstrap Social
来在我们的网页中加进一些

129
00:10:41,800 --> 00:10:47,750
长得和某些社交网站 logo 一样的按钮

130
00:10:47,750 --> 00:10:52,880
我之前已经在页脚处加进了一些
能够导航到一些社交网站的链接了

131
00:10:52,880 --> 00:10:58,030
我们将会用利用 Font Awesome
和 Bootstrap Social

132
00:10:58,030 --> 00:11:01,690
来用相应的好看的按钮
替换掉这些链接

133
00:11:01,690 --> 00:11:03,320
那么我们就开始干活吧

134
00:11:05,150 --> 00:11:07,890
首先 来到 Font Awesome 的网站

135
00:11:07,890 --> 00:11:10,420
然后将相应的东西下载下来

136
00:11:18,830 --> 00:11:23,779
当你下载好 zip 文件后

137
00:11:23,779 --> 00:11:29,612
将其移到我们项目的目录下并解压
你会得到一个 font-awesome-4.4.3 文件夹

138
00:11:29,612 --> 00:11:35,452
进到该文件夹中 你会看到一个
叫 CSS 的文件夹

139
00:11:35,452 --> 00:11:41,805
从中找到两个 Font Awesome 的
CSS 文件 并将它们

140
00:11:41,805 --> 00:11:46,900
移到我们项目的 CSS 文件夹中

141
00:11:48,620 --> 00:11:54,700
同时在之前的文件夹中
还有一个叫 fonts 的文件夹

142
00:11:54,700 --> 00:11:56,310
把里面的所有内容都移到

143
00:11:56,310 --> 00:12:01,660
我们项目的 fonts 文件夹中

144
00:12:03,410 --> 00:12:07,730
当我们做完这些后 我们就能把那个
font-awesome 文件夹删掉了

145
00:12:07,730 --> 00:12:10,969
因为剩下的东西都是不需要的

146
00:12:14,312 --> 00:12:20,070
接下来就是下载我们提供给你的
bootstrapsocial.css 文件

147
00:12:20,070 --> 00:12:25,140
bootstrapsocial.css 能从网上下载
不过我们提供的版本

148
00:12:26,320 --> 00:12:27,740
应用层协议

149
00:12:27,740 --> 00:12:31,638
我们对其进行了些微的更改
以使其能够实现

150
00:12:31,638 --> 00:12:33,721
Google+ 和 YouTube 相应的按钮

151
00:12:34,960 --> 00:12:42,170
当你做完这些后 准备工作就弄好了

152
00:12:42,170 --> 00:12:45,850
我们现在将会去把代码写好

153
00:12:45,850 --> 00:12:51,450
以在我们的网页中
加进各式各样好看的图标字体

154
00:12:51,450 --> 00:12:57,581
首先 我们要把相应的 CSS 文件
导入进我们的网页

155
00:12:57,581 --> 00:13:03,900
一为 font-awesome.min.css
一为 bootstrap-social.css

156
00:13:03,900 --> 00:13:07,360
导入的方式是用 link 标签

157
00:13:10,150 --> 00:13:17,930
我们第一个要实现的图标
是放在 Home 链接旁的图标

158
00:13:17,930 --> 00:13:22,990
我将会实现一个
长得像小房子一样的图标

159
00:13:22,990 --> 00:13:27,960
为此 我将会利用 glyphicons

160
00:13:27,960 --> 00:13:32,190
那么接下来就让我用相应的代码

161
00:13:32,190 --> 00:13:36,510
替换掉这里原有的
实现 Home 链接的代码吧

162
00:13:39,070 --> 00:13:42,460
你可以看到

163
00:13:42,460 --> 00:13:46,800
我仍将其设置为了 active 那一项

164
00:13:48,360 --> 00:13:53,390
不同的是 我在 Home 这四个字母前面
加了一个 span 标签并对其设置了

165
00:13:55,850 --> 00:13:58,960
class="glyphicon glyphicon-home"

166
00:13:58,960 --> 00:14:03,370
这正是在我们网页中应用
glyphicons 的方法

167
00:14:04,730 --> 00:14:08,730
接下来来到我们网页的页脚部分

168
00:14:08,730 --> 00:14:13,950
我会在我选中的这些内容处
加进几个 Font Awesome 的图标

169
00:14:13,950 --> 00:14:21,523
分别放在 Tel Fax 和 Email 的旁边

170
00:14:21,523 --> 00:14:29,028
你可以看到在它们前边

171
00:14:29,028 --> 00:14:33,870
分别多出了一个 i 标签
我对它们对应设置了

172
00:14:33,870 --> 00:14:38,360
class="fa fa-phone", "fa-fax"
和 "fa-envelope"

173
00:14:38,360 --> 00:14:43,380
这正是使用 Font Awesome 的方法

174
00:14:43,380 --> 00:14:49,360
在这里 我用了
phone, fax 和 envelope

175
00:14:49,360 --> 00:14:53,590
这三个图标来装饰我们这一块信息

176
00:14:53,590 --> 00:14:57,070
做完所有这些工作后

177
00:14:57,070 --> 00:15:02,550
我们就已经在我们的网页中
将所有的图标字体都实现好了

178
00:15:02,550 --> 00:15:10,500
我们最后要做的是
把这些页脚中的链接

179
00:15:10,500 --> 00:15:16,610
用相应的按钮代替

180
00:15:16,610 --> 00:15:22,820
我们将会利用 Bootstrap Social
以及 Font Awesome 的一些图标

181
00:15:22,820 --> 00:15:24,970
来定制这些按钮

182
00:15:24,970 --> 00:15:28,060
那么让我用相应的代码

183
00:15:28,060 --> 00:15:30,780
替换掉这一块代码吧

184
00:15:30,780 --> 00:15:36,770
现在你可以看到

185
00:15:36,770 --> 00:15:42,350
我用了一些 Bootstrap Social
定制出来的按钮

186
00:15:42,350 --> 00:15:43,470
我们怎么做呢？我们该怎么做呢？

187
00:15:43,470 --> 00:15:45,750
class="nav navbar-nav" 的 div

188
00:15:45,750 --> 00:15:51,540
以及其中的若干个

189
00:15:51,540 --> 00:15:55,580
a 标签来实现的

190
00:15:55,580 --> 00:16:01,110
如果想要定制它的表现的话
可以通过更改相应的 CSS 来实现

191
00:16:01,110 --> 00:16:05,135
对于这些 a 标签

192
00:16:05,135 --> 00:16:11,020
它们每一项对应着
导航至一个社交网站的链接

193
00:16:11,020 --> 00:16:12,470
然后为了使其看上去是一个按钮

194
00:16:12,470 --> 00:16:18,300
我对其进行了一些设置

195
00:16:18,300 --> 00:16:23,040
以 Google+ 这个按钮为例
你可以看到我对其设置了

196
00:16:23,040 --> 00:16:26,040
class="btn btn-social-icon btn-google-plus"

197
00:16:26,040 --> 00:16:31,060
其中 btn 意味着这个 a 标签
将会是一个 Bootstrap 按钮

198
00:16:31,060 --> 00:16:38,920
而 btn-social-icon 意味着
这个按钮将会应用 Bootstrap Social

199
00:16:38,920 --> 00:16:43,009
而 btn-google-plus 自然就意味着
它对应的是 Google+ 的图标了

200
00:16:43,009 --> 00:16:45,188
注意到我还在里面用了一个
Font Awesome 的图标

201
00:16:45,188 --> 00:16:50,553
从而该按钮现在就会长得
和我们在很多网页中看到过的

202
00:16:50,553 --> 00:16:56,360
Google+ 按钮一样了

203
00:16:56,360 --> 00:17:05,140
对其它的链接 我们也类似地
将它们一一转化成了相应的按钮

204
00:17:05,140 --> 00:17:10,170
做完这些后 让我们回去看看
我们现在的网页吧

205
00:17:10,170 --> 00:17:11,790
回到我们的网页

206
00:17:11,790 --> 00:17:16,960
你可以看到导航栏里 Home 链接旁
多了一个小房子一样的图标

207
00:17:16,960 --> 00:17:23,180
这正是我们之前实现的
glyphicons 图标

208
00:17:23,180 --> 00:17:28,980
然后来到页脚

209
00:17:28,980 --> 00:17:33,630
你可以看到在 Our Address 下面的
电话 传真 电子邮件 这三项

210
00:17:34,900 --> 00:17:39,610
都是用好看的图标来进行呈现的

211
00:17:39,610 --> 00:17:41,820
同时右边这些社交网站的链接
都用了相应的

212
00:17:41,820 --> 00:17:46,776
好看的按钮来实现

213
00:17:51,849 --> 00:17:55,080
以上 我们完成了这次练习

214
00:17:55,080 --> 00:18:00,360
在这个练习中 我们学习了如何
在我们的网页中使用导航栏

215
00:18:00,360 --> 00:18:05,310
也学习了怎么让它变成
响应式的导航栏

216
00:18:05,310 --> 00:18:09,689
我们还学习了如何实现各种图标字体
以及如何通过额外的 CSS 类

217
00:18:09,689 --> 00:18:15,205
来更好地定制我们的网页
【翻译 - Carefree0910】