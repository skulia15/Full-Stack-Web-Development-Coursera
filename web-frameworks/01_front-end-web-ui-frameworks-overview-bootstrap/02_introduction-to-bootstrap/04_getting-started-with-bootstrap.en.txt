Let us now learn how to get started
using Bootstrap in a web project. In a exercise that follows this
lecture you will get some hands on experience of using Bootstrap
in a real web project. To get started using Bootstrap we
have three possible approaches. First, you can go to the Bootstrap website
and then download the Bootstrap files. Second, you can get hold of
the Bootstrap sources In either Less or Sass preprocessor format. We will examine these in more
detail later on in this course. The third alternative for
you is to use the precompiled Bootstrap available through Bootstrap CDN. Here, you don't need to download
any files, but instead, simply link to the Bootstrap files that are available through
a content distribution network site. We will follow the first approach. In the exercise that follows this lecture. We will go to the Bootstrap site and
then download the Bootstrap files and then unzip the downloaded zip file
containing the Bootstrap files. When you unzip the zip file,
you will find that it creates a folder and
subfolders inside the folder. The structure of the Bootstrap folder
is shown on the right side, here. You have subfolders, CSS that
contains some Bootstrap CSS files. Then you have a subfolder named
JS that contains the JavaScript, part of the bootstrap sources. And then you have a subfolder contain,
called fonts, which contains fonts that
you use in bootstrap. We need to include these files
into our Bootstrap project. How do we get started using
Bootstrap within our project? In your HTML5, in the head of your HTML5, you are required to
include these three lines. Later on, we will examine what these
three lines do for your project. Then, you need to input the bootstrap
CSS files into your web page. To do that, we will include these two
lines into the head of an HTML page. Now, we are importing the Bootstrap file
itself and then, the Bootstrap theme CSS file into our project
using these two lines. You notice that I have specified
the files as bootstrap.min.css and bootstrap-theme.min.css. The minfied format is what we
use when we design our project. Now if you are editing a Bootstrap or
a CSS file, you will write the CSS
file in normal format. Then you can strip off all
the unnecessary blank spaces and the comments from your CSS file and
then create a minified file. So, the verified file is
much smaller in size and so easier for people to download
when they view your web page. In addition,
Bootstrap also uses Javascript. Bootstrap makes use of the jQuery
Javascript library for providing much of its
Javascript functionality. So Bootstrap has JavaScript plugins designed using the jQuery
library as the basis. So that is the reason you need
to include the jQuery library. In addition, you will include
Bootstraps own JavaScript classes, this has to be done just before
the end of the body of your web page. The primary reason why we include
the JavaScript files towards the end of the body of your web page,
is so that when you view the web page, the web page can be rendered even before
the JavaScript is actually processed. So, when your web page is being rendered
by your browser, it'll first display all the content and then use JavaScript
to then restyle the content. Now, this makes the web page
loading a lot more faster. As I mentioned earlier, you can also include Bootstrap
directly from its Bootstrap CDN. This is the set of lines that you
will include within your HTML page in order to use Bootstrap directly
from the content distribution network. So the first two lines you will include
in the head to import the CSS files. The last two lines will be included at
the bottom of the body of your HTML page to import the JavaScript libraries. Now, when you design a web page, we will
often use a class called as a container to hold all the contents of our web page. The container defines the fixed
width region within your web page. Inside which the contents will
be displayed for your web page. So this is one way of restricting
your contents to display in certain part of the web page. The container size will
vary depending upon the size of the screen from which
you are viewing your website. We will deal with the container
more in the next set of lessons. Normally, we would use
the container as the outermost div element to wrap
the contents of our website. This is required in order to make
the Bootstrap grid work correctly. What exactly is the Bootstrap grid? That we will deal with in the next set of lessons where we will
deal with responsive web design. You can also use another class
card as container fluid to use a full width container. The container fluid class enables
a full width container window, which spans the entire
size of your screen. To understand the container class better,
let me show you a web page. You're going to see this web page
as part of your exercises later. Now, within this web page, all the contents in here
are enclosed inside a container so that they will be displayed inside
a fixed region of your screen. Bootstrap also provides
another class called the row. We use the row class to divide
the page contents into multiple rows. Each row acts as a horizontal grouping for information that has to be
displayed in a single group. A row may contain multiple columns. We will deal with that in the next lesson. In Bootstrap, the rows must always
be contained inside containers for the Bootstrap grid to work correctly. Another element that we're going to
examine in the exercise is a Jumbotron. A Jumbotron is a lightweight Bootstrap component that is used to
showcase key content on your web page. So for example, this can be used
to show the name of your company, some brief description about your company,
and typically at the top of your page. When you use a Jumbotron within your
web page, you can use the Jumbotron outside a container and then include
a container inside a Jumbotron. So that the contents of the Jumbotron
can be within a fixed region of the Jumbotron but this enables your
Jumbotron to span the entire screen width. Returning to our web page example, the top blue region is
using a Jumbotron and inside that we are displaying
the contents of our website. The name and
some brief description of the website. Now, we will move on to our
first hands on exercise where you will use the classes
the you just encountered. You will start by including
Boostrap into your HTML page and then we will use the container and the rule classes to
structure our web page and we also see the use of
Jumbotron within our web page.