1
00:00:01,830 --> 00:00:06,420
接下来让我们学习如何
在一个万维网项目中应用 Bootstrap

2
00:00:06,420 --> 00:00:11,624
而在这节课后的练习中
你将会实际体验

3
00:00:11,624 --> 00:00:16,340
在一个真正的 web 项目中
应用 Bootstrap

4
00:00:19,630 --> 00:00:24,420
开始使用 Bootstrap 有三种可能的方法

5
00:00:24,420 --> 00:00:29,320
其一 你可以去到 Bootstrap 的网站
并从中下载相应的文件

6
00:00:30,530 --> 00:00:36,115
其二 你可以下载
Bootstrap 的 Less 版本

7
00:00:36,115 --> 00:00:39,065
或是 Sass 版本

8
00:00:39,065 --> 00:00:43,515
我们会在后续课程中详细介绍这种方法

9
00:00:43,515 --> 00:00:48,085
其三就是使用 Bootstrap CDN

10
00:00:48,085 --> 00:00:52,620
它含有事先编译好的 Bootstrap

11
00:00:52,620 --> 00:00:55,480
这里你无需下载任何文件

12
00:00:55,480 --> 00:00:59,560
取而代之是通过文件分布网络

13
00:00:59,560 --> 00:01:03,610
直接链接到 Bootstrap 文件

14
00:01:04,850 --> 00:01:07,150
我们将会使用第一种方法

15
00:01:07,150 --> 00:01:10,970
在接下来的练习中

16
00:01:10,970 --> 00:01:14,630
我们将会去到 Bootstrap 的网站
并从中下载所需的 Bootstrap 文件

17
00:01:14,630 --> 00:01:19,660
然后我们会解压
我们下载下来的压缩包

18
00:01:19,660 --> 00:01:22,970
解压完之后 你会发现它含有

19
00:01:24,140 --> 00:01:28,870
若干个子文件夹

20
00:01:28,870 --> 00:01:36,850
其总体架构如右图所示

21
00:01:36,850 --> 00:01:42,810
其一子文件夹名为 CSS
它含有 Bootstrap 的 CSS 文件

22
00:01:42,810 --> 00:01:46,820
其一子文件夹名为 JS

23
00:01:46,820 --> 00:01:48,730
它含有的是 Bootstrap 的
JavaScript 文件

24
00:01:48,730 --> 00:01:51,590
还有一文件夹名为 fonts

25
00:01:51,590 --> 00:01:55,270
它含有 Bootstrap 所需的字体

26
00:01:55,270 --> 00:01:59,110
我们需要将所有这些文件
引入到我们的项目中

27
00:02:00,660 --> 00:02:03,790
那么怎么开始在我们的项目中使用 Bootstrap 呢?

28
00:02:05,520 --> 00:02:09,980
我们需要在 HTML5 代码的
head 标签下面

29
00:02:09,980 --> 00:02:13,870
写入这三行代码

30
00:02:15,350 --> 00:02:20,990
我们会在后面解释这三行代码
具体是干啥的

31
00:02:22,070 --> 00:02:29,630
然后 你需要在你的网页中引入 Bootstrap 的 CSS

32
00:02:29,630 --> 00:02:36,330
我们需要在 head 标签下面引入下面两条代码

33
00:02:36,330 --> 00:02:41,610
现在我们通过如下两行代码来引入Bootstrap

34
00:02:41,610 --> 00:02:47,870
和 Bootstrap 主题的 CSS 文件

35
00:02:47,870 --> 00:02:53,954
你大概注意到我用的文件是bootstrap.min.css 和

36
00:02:53,954 --> 00:02:56,850
bootstrap-theme.min.css

37
00:02:56,850 --> 00:03:02,770
我们的项目设计将用这种减缩版本

38
00:03:02,770 --> 00:03:06,067
一般而言我们在编辑一个Bootstrap 或 CSS 代码时

39
00:03:06,067 --> 00:03:09,950
使用的是正常的格式

40
00:03:09,950 --> 00:03:15,190
然后减缩是指 将所有不必要的
空格 空行以及所有注释

41
00:03:16,480 --> 00:03:21,320
从而能有效地压缩文件的大小

42
00:03:21,320 --> 00:03:26,220
压缩文件大小是为了
让用户能够更轻易地将其下载下来

43
00:03:26,220 --> 00:03:31,430
从而能有效地提升网页的加载速度

44
00:03:33,180 --> 00:03:36,360
Bootstrap 还应用了 JavaScript

45
00:03:37,950 --> 00:03:42,660
事实上它大部分都在利用
JavaScript 中的

46
00:03:42,660 --> 00:03:45,830
jQuery 库

47
00:03:45,830 --> 00:03:50,360
所以 Bootstrap 是有 JavaScript 插件的

48
00:03:52,230 --> 00:03:56,800
这些插件正是用 jQuery 设计出来的

49
00:03:56,800 --> 00:04:00,770
这就是为什么你还需要引入
jQuery 的库

50
00:04:00,770 --> 00:04:07,068
当然了 我们也要引入
Bootstrap 自身的 JavaScript 文件

51
00:04:07,068 --> 00:04:13,050
注意 引入这些文件的位置
是在 body 标签的底部之前

52
00:04:13,050 --> 00:04:18,467
之所以要在靠近底部才引用

53
00:04:18,467 --> 00:04:24,696
是因为当你浏览网页时

54
00:04:24,696 --> 00:04:31,575
即使 JavaScript 还没有处理完毕
网页就已经能呈现了

55
00:04:31,575 --> 00:04:36,620
所以如果你在底部才引用的话
浏览器就会先呈现你的网页

56
00:04:36,620 --> 00:04:43,200
然后再用 JavaScript 来调整内容的格调

57
00:04:43,200 --> 00:04:46,510
可以想象 这可以让你
网页的加载速度大大提升

58
00:04:48,100 --> 00:04:49,950
我之前说过

59
00:04:49,950 --> 00:04:55,060
你可以通过使用 Bootstrap CDN
来引用 Bootstrap

60
00:04:55,060 --> 00:05:00,890
如果你确实想这么做

61
00:05:00,890 --> 00:05:06,420
你就可以引用这些代码

62
00:05:06,420 --> 00:05:13,960
所以在网页 head 部分的前两行是
引入 Bootstrap 的 CSS 文件

63
00:05:13,960 --> 00:05:20,511
而在HTML页面body部分的后面则用于引入

64
00:05:20,511 --> 00:05:26,020
两行JavaScript 代码库

65
00:05:27,300 --> 00:05:33,940
在设计网页时通常会用到一个class属性
取值为container

66
00:05:33,940 --> 00:05:38,600
其将包含网页的整个内容

67
00:05:38,600 --> 00:05:44,290
这个 container 属性定义网页中一个固定的宽度区域

68
00:05:44,290 --> 00:05:48,640
内容呈现在该区域里面

69
00:05:48,640 --> 00:05:53,070
这是一种方法将网页的内容限制在

70
00:05:53,070 --> 00:05:55,050
网页的一个特定区域中

71
00:05:56,570 --> 00:06:00,330
而至于这个 container 的具体宽度

72
00:06:00,330 --> 00:06:05,260
则基本取决于你浏览网页时
所用的显示窗口的大小

73
00:06:05,260 --> 00:06:11,700
我们将会在后续几节课中
学习更多有关 container 的知识

74
00:06:14,040 --> 00:06:17,960
通常 container 一般用于最外层的 div 区段内

75
00:06:17,960 --> 00:06:21,120
来封装网页的整体内容

76
00:06:22,210 --> 00:06:27,590
事实上 为使 Bootstrap 的网格系统正常运作
container 是必需的

77
00:06:27,590 --> 00:06:29,380
那么什么是 Bootstrap 网格系统呢

78
00:06:29,380 --> 00:06:31,800
我们将会在

79
00:06:31,800 --> 00:06:35,560
后续的几节有关
响应式网页设计的课中讨论到它

80
00:06:36,670 --> 00:06:42,100
你可以用另一称为 container-fluid 的类

81
00:06:42,100 --> 00:06:44,510
若需要一全屏宽的 container

82
00:06:44,510 --> 00:06:50,180
container-fluid 类允许占满窗口的全部

83
00:06:50,180 --> 00:06:54,290
而窗口也可占据整个屏幕

84
00:06:55,400 --> 00:07:00,375
为使你更好地理解 container 是干嘛的
我将给你看一个网页

85
00:07:00,375 --> 00:07:07,260
该网页在后续练习中你也会接触到

86
00:07:07,260 --> 00:07:09,636
那么在这个网页中

87
00:07:09,636 --> 00:07:14,487
所有的这些内容都是
封装在一 container 之内

88
00:07:14,487 --> 00:07:19,940
这样显示时 它们被限制在了
网页的某个特定区域中

89
00:07:23,750 --> 00:07:27,575
Bootstrap 还提供了一个叫 row 的类

90
00:07:27,575 --> 00:07:33,470
我们用 row 类来将页的内容分成多行

91
00:07:33,470 --> 00:07:37,280
每一行都是横向组合一系列

92
00:07:37,280 --> 00:07:40,690
需同时显示的信息

93
00:07:40,690 --> 00:07:44,140
每一行会有若干列

94
00:07:44,140 --> 00:07:48,190
我们会在后面的课中
学习到相应内容

95
00:07:49,380 --> 00:07:54,500
在 Bootstrap 中
row 是必须放在 container 里面的

96
00:07:54,500 --> 00:07:57,320
这样Bootstrap 网格系统才会正常

97
00:07:58,870 --> 00:08:04,330
我们在练习中还会学习到一个叫
"超大屏幕" 的元素

98
00:08:04,330 --> 00:08:06,530
超大屏幕是一个
轻量级的 Bootstrap 组件

99
00:08:08,360 --> 00:08:13,470
用于展示网页中关键性的内容

100
00:08:13,470 --> 00:08:19,890
比如说 你可以用它展示
你公司的名字

101
00:08:19,890 --> 00:08:26,040
或是你公司的一些简介
通常也是在页面的顶部

102
00:08:27,120 --> 00:08:31,420
使用Jumbotron时 可以将其置于一 container 的外面

103
00:08:31,420 --> 00:08:35,538
然后在超大屏幕内部
再包含另一个 container

104
00:08:35,538 --> 00:08:41,266
从而超大屏幕中的内容也能被限制在
超大屏幕的某一特定区域中

105
00:08:41,266 --> 00:08:48,600
这样 你的超大屏幕也能
占据整个屏幕的宽度

106
00:08:48,600 --> 00:08:52,430
回到我们的网页样例

107
00:08:52,430 --> 00:08:57,025
页面顶部这一大块浅靛蓝色的东西
就是超大屏幕了

108
00:08:57,025 --> 00:09:03,420
在其中将显示我们网页的
概括性的信息

109
00:09:03,420 --> 00:09:06,780
比如我们网页的名字
以及网页的一些简要介绍

110
00:09:08,640 --> 00:09:12,830
那么接下来 我们就要进行
我们的第一次练习了

111
00:09:12,830 --> 00:09:17,550
你将会应用到你刚刚看到的这些类

112
00:09:17,550 --> 00:09:23,690
你会先需要在你的 HTML 中
引入 Bootstrap 框架

113
00:09:23,690 --> 00:09:27,110
然后你需要在你的项目中
应用 container 和 row

114
00:09:27,110 --> 00:09:32,160
来组织网页的结构
你同时还会学习如何

115
00:09:32,160 --> 00:09:35,532
在网页中应用超大屏幕
翻译: Carefree0910 | 审阅: Saul Qunming Yuan
Coursera Global Translator Community