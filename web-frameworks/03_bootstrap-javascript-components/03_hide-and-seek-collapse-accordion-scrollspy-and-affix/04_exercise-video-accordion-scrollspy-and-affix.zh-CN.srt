1
00:00:02,160 --> 00:00:09,980
在之前的练习中，我们了解了选项卡导航、选项卡、选项卡页的用法

2
00:00:09,980 --> 00:00:14,470
接下来，我们将选项卡转变为

3
00:00:14,470 --> 00:00:20,880
一个手风琴，使用刚刚学习的折叠类

4
00:00:20,880 --> 00:00:25,780
此外，我们将要利用刚学到的滚动监听(Scrollspy)和

5
00:00:25,780 --> 00:00:30,370
附加导航 (Affix) 类

6
00:00:30,370 --> 00:00:34,690
以便引入侧边导航栏到我们的 about.html 页面

7
00:00:37,710 --> 00:00:39,730
回到我们的网页

8
00:00:39,730 --> 00:00:44,840
让我们在页面上做一点清理工作 留出一些空间

9
00:00:44,840 --> 00:00:51,390
以便引入滚动监听和附加导航来实现的侧边导航栏

10
00:00:51,390 --> 00:00:57,850
我们还会把选项卡和选项卡导航转变为手风琴

11
00:00:57,850 --> 00:01:02,920
过一遍这个页面，你会发现第二行和

12
00:01:02,920 --> 00:01:08,200
第三行的右边有一些空白区域

13
00:01:08,200 --> 00:01:10,620
我们将要移除这些空白区域

14
00:01:10,620 --> 00:01:15,570
让这两行完全扩展到整个屏幕

15
00:01:15,570 --> 00:01:21,700
而对于第一行，我要缩减一点点大小，因为

16
00:01:23,590 --> 00:01:29,350
当我们把内容往左边推，以便在这放入滚动监听插件时

17
00:01:30,420 --> 00:01:35,240
左边的一些内容会看起来有点挤压

18
00:01:35,240 --> 00:01:39,700
所以，在我们去实现手风琴效果之前

19
00:01:39,700 --> 00:01:44,950
让我们做一下清理工作，然后回头看看这网页

20
00:01:44,950 --> 00:01:49,620
打开你的页面代码，我现在打算去调整

21
00:01:49,620 --> 00:01:54,840
第一行中的列相关的排版定义

22
00:01:56,060 --> 00:01:58,080
之前我们使用了 col-sm-8

23
00:01:58,080 --> 00:02:03,340
我打算把该列缩减到 col-sm-6，但对于大屏幕

24
00:02:03,340 --> 00:02:09,820
我们可以继续为第一行的第一部分保留 8 列

25
00:02:09,820 --> 00:02:12,850
所以让我来更新一下这里的列排版类

26
00:02:14,050 --> 00:02:18,710
我已经在这更新列排版类为 col-sm-6 和 col-lg-8

27
00:02:18,710 --> 00:02:24,705
所以，对于中等屏幕大小也会应用 6 列

28
00:02:24,705 --> 00:02:31,040
在本行中包含面板的那部分

29
00:02:31,040 --> 00:02:35,560
我已经相应地调整了列排版类

30
00:02:35,560 --> 00:02:40,670
我在这使用了 col-sm-6 和 col-lg-4

31
00:02:40,670 --> 00:02:44,700
对于余下的两行，我打算调整列排版类

32
00:02:44,700 --> 00:02:49,990
以使其内容占据整个 12 列

33
00:02:49,990 --> 00:02:55,640
也就是说我需要移去右边那个

34
00:02:55,640 --> 00:02:57,870
保留空白区域的 div

35
00:03:00,500 --> 00:03:06,150
对于第二行，我调整了使其占据整个 12 列

36
00:03:06,150 --> 00:03:11,340
然后移除了本行中的第二个 div

37
00:03:11,340 --> 00:03:13,880
对于第三行也做同样的处理

38
00:03:15,250 --> 00:03:19,240
做完这些改变之后，看看当前页面的状态

39
00:03:19,240 --> 00:03:23,450
你会发现这些列被相应地做了调整

40
00:03:23,450 --> 00:03:28,740
第二行和第三行则占据了整个 12 列

41
00:03:28,740 --> 00:03:34,580
现在，随后我们打算把这些内容压到左边

42
00:03:34,580 --> 00:03:39,400
通过引入额外的行去包裹这些内容 以便在右边

43
00:03:39,400 --> 00:03:43,810
创建足够的空间来引入滚动监听和附加导航

44
00:03:46,150 --> 00:03:51,140
下一步，我们打算把这些为公司领导人创建的

45
00:03:51,140 --> 00:03:55,330
选项卡替换成手风琴效果

46
00:03:55,330 --> 00:03:58,536
我们打算利用之前学到的折叠类

47
00:03:58,536 --> 00:04:03,820
以及上一节课看到的面板

48
00:04:03,820 --> 00:04:09,150
和面板组，也就是一组面板

49
00:04:09,150 --> 00:04:13,310
然后我们打算利用这些知识去

50
00:04:13,310 --> 00:04:17,270
为公司领导人设计手风琴效果

51
00:04:17,270 --> 00:04:23,780
因此，所有这些选项卡将会使用这些类去转变成手风琴

52
00:04:26,200 --> 00:04:27,720
回到代码部分

53
00:04:27,720 --> 00:04:33,400
我现在要去删除之前引入的选项卡导航

54
00:04:33,400 --> 00:04:37,920
所以，这些为选项卡导航引入的 ul 会被完全删除

55
00:04:37,920 --> 00:04:43,810
然后，我会把每个选项页转变成面板

56
00:04:43,810 --> 00:04:46,600
并嵌入到面板组中去

57
00:04:46,600 --> 00:04:52,419
然后相应地添加折叠类，使其变成手风琴

58
00:04:54,798 --> 00:04:59,325
我现在已经删除了选项卡导航

59
00:04:59,325 --> 00:05:05,305
首先，我打算把这个 div 转变成 panel-group

60
00:05:06,445 --> 00:05:15,480
所以，我现在用带有 panel-group 类的 div 替换掉 tab-content 类

61
00:05:15,480 --> 00:05:22,130
所有里面的面板将组成一组面板

62
00:05:22,130 --> 00:05:26,220
这样，它们之间的空间就会做相应的调整

63
00:05:26,220 --> 00:05:32,340
然后，我们就可以为这组面板实现手风琴效果

64
00:05:33,660 --> 00:05:40,459
在下一步，我将要替换掉这个 tabpanel 并把它改成一个 panel

65
00:05:40,459 --> 00:05:46,320
然后把 CEO 的名字移到 panel-heading 中

66
00:05:46,320 --> 00:05:51,640
而对于内容，这个用于描述内容的段落 P

67
00:05:51,640 --> 00:05:57,600
将会被移到一个 panel-body 里

68
00:06:00,130 --> 00:06:03,830
我首先在这引入了 panel

69
00:06:03,830 --> 00:06:08,060
然后是第一个 panel 的 panel-heading

70
00:06:08,060 --> 00:06:12,570
所以，第一个面板将包含关于我们 CEO 的详细描述

71
00:06:13,630 --> 00:06:20,230
在这个面板中，你会发现我为这个面板使用了一个 div

72
00:06:20,230 --> 00:06:24,940
并在随后，为 panel-heading 使用了一个内嵌的 div

73
00:06:24,940 --> 00:06:27,430
所以，这是我们之前所见到的

74
00:06:27,430 --> 00:06:30,570
典型的 panel panel-heading 结构

75
00:06:30,570 --> 00:06:36,590
而在这里面，我使用了 h3 类，并把它转为 panel-title

76
00:06:36,590 --> 00:06:39,420
所以，这里包含了 CEO 的名字

77
00:06:39,420 --> 00:06:45,390
为了把这个 panel-title 转变为对手风琴的控制

78
00:06:45,390 --> 00:06:51,210
以便当你点击这个链接或者说 CEO 名字时

79
00:06:51,210 --> 00:06:55,660
对应的面板会打开或关闭

80
00:06:55,660 --> 00:07:00,120
也就是说折叠功能会在这里引入

81
00:07:00,120 --> 00:07:04,360
为此，我在这引入了一个 A 标签

82
00:07:04,360 --> 00:07:08,600
在 A 标签里，我应用了 data-toggle="collapse"

83
00:07:08,600 --> 00:07:11,820
而 data-parent 则指向 #accordion (手风琴)

84
00:07:11,820 --> 00:07:16,290
也就是我之前引入的 panel-group 的 ID 就叫 accordion

85
00:07:16,290 --> 00:07:18,740
这就是 data-parent 的值

86
00:07:18,740 --> 00:07:25,700
目前就完成了 panel-heading 的设置

87
00:07:25,700 --> 00:07:30,070
现在，让我们来设置面板内容本身，也就是 panel-body

88
00:07:30,070 --> 00:07:32,900
然后在这进行修改

89
00:07:32,900 --> 00:07:37,565
再回过头来看看网页长什么样

90
00:07:40,491 --> 00:07:45,361
在下一步中，我在这引入了另一个 div

91
00:07:45,361 --> 00:07:50,600
并设置了  class="panel-collapse collapse in"

92
00:07:50,600 --> 00:07:54,010
这表示当页面最初加载时

93
00:07:54,010 --> 00:07:56,470
本面板为打开状态

94
00:07:56,470 --> 00:08:00,490
面板里的任何内容都会

95
00:08:00,490 --> 00:08:04,450
在你第一次打开网页时显示出来

96
00:08:05,580 --> 00:08:12,350
这个面板 在你使用 collapse 类后可以切换为展开或折叠状态

97
00:08:12,350 --> 00:08:16,490
做完这些改动后

98
00:08:18,370 --> 00:08:23,490
现在来看看我们的网页 你可以看到这里的内容

99
00:08:23,490 --> 00:08:25,970
被包含在一个面板里

100
00:08:25,970 --> 00:08:31,170
现在，如果你在面板标题 (panel-heading) 上单击

101
00:08:31,170 --> 00:08:35,780
这里的内容将会折叠，然后再次展开

102
00:08:35,780 --> 00:08:41,090
所以折叠类在这起作用了

103
00:08:41,090 --> 00:08:43,360
现在，我们将要把同样的修改

104
00:08:43,360 --> 00:08:47,180
应用到余下的三个公司领导人那

105
00:08:47,180 --> 00:08:50,640
然后，再回头看看网页的效果

106
00:08:52,990 --> 00:08:57,310
我现在已经把同样的修改应用到了第二个公司领导人信息那

107
00:08:57,310 --> 00:09:02,350
然后就像以前一样应用修改到 panel 和 panel-heading

108
00:09:02,350 --> 00:09:09,520
以及 panel-title 和 A role

109
00:09:09,520 --> 00:09:14,100
下面来到 panel-body 本身

110
00:09:14,100 --> 00:09:20,010
请注意我在这里设置了 class="panel-collapse collapse"

111
00:09:20,010 --> 00:09:24,440
我并没有在这添加 in 类 也就是说对于本面板

112
00:09:24,440 --> 00:09:28,500
我希望它一开始就折叠状态的 也就意味着并不会显示出来

113
00:09:28,500 --> 00:09:34,860
在网页第一次打开时会呈关闭状态

114
00:09:34,860 --> 00:09:37,080
让我们再回到网页中来

115
00:09:37,080 --> 00:09:42,610
我们将发现已经引入了第二个面板到面板组中了

116
00:09:42,610 --> 00:09:47,940
回到我们的网页，你可以看到这里有两个面板了

117
00:09:47,940 --> 00:09:51,346
第一个面板是打开状态

118
00:09:51,346 --> 00:09:55,990
因为我们在 panel-body 里使用了 in 类

119
00:09:55,990 --> 00:10:00,830
第二个面板目前为关闭状态，但当你点击第二个面板

120
00:10:00,830 --> 00:10:06,700
请注意这里将呈现手风琴效果

121
00:10:06,700 --> 00:10:12,870
所以，你可以点击这两个领导人的名字

122
00:10:12,870 --> 00:10:16,958
然后你就能在这看到手风琴效果了

123
00:10:16,958 --> 00:10:21,540
现在，我们将实现这个列表中余下的两个领导人

124
00:10:21,540 --> 00:10:26,070
然后再回头看看网页长什么样

125
00:10:28,190 --> 00:10:34,117
在完成这些修改后，回头看看现在的网页

126
00:10:34,117 --> 00:10:39,352
现在我们能看到所有公司领导人的信息在手风琴里

127
00:10:39,352 --> 00:10:44,782
然后你可以单击任何一个领导人的名字

128
00:10:44,782 --> 00:10:48,679
这样就可以看到手风琴效果了

129
00:10:55,375 --> 00:11:00,330
我们下一步将引入滚动监听 (Scrollspy)

130
00:11:00,330 --> 00:11:05,570
为了实现这个功能 我们将要把整个页面

131
00:11:05,570 --> 00:11:10,675
的内容往左移

132
00:11:10,675 --> 00:11:16,650
以便在右边创建空间 这样我们就能在这引入滚动监听

133
00:11:16,650 --> 00:11:22,130
要往左移 我们将把所有内容放到一个 row 里的

134
00:11:22,130 --> 00:11:26,440
一个带有 10 列的纵列类里

135
00:11:26,440 --> 00:11:31,670
这样我们在右边就有 2 列宽度的空间用于滚动监听了

136
00:11:31,670 --> 00:11:35,970
让我们去修改网页

137
00:11:35,970 --> 00:11:40,770
然后再回头看看有什么变化

138
00:11:42,440 --> 00:11:46,740
为了给滚动监听创建足够的空间

139
00:11:46,740 --> 00:11:52,190
我打算来到这个 container 类

140
00:11:52,190 --> 00:11:56,880
然后把整个内容包含到另一纵列里

141
00:11:56,880 --> 00:11:59,640
让我来加入以下代码

142
00:12:01,611 --> 00:12:06,084
在这里我已经加入了另一个 row

143
00:12:06,084 --> 00:12:12,698
并引入一个 class="col-xs-12 col-sm-10" 的纵列类

144
00:12:12,698 --> 00:12:19,450
然后，整个内容都会放到这个 10 列的纵列类里

145
00:12:21,180 --> 00:12:26,225
在应用了所有修改后 让我们来看看页面

146
00:12:26,225 --> 00:12:32,169
我们发现在右边已经创建了足够的空间

147
00:12:32,169 --> 00:12:39,254
以便在这引入垂直导航元素 也就是滚动监听

148
00:12:43,988 --> 00:12:50,449
要引入滚动监听 我打算到 body 里

149
00:12:50,449 --> 00:12:56,035
引入 data-target 和 data-offset

150
00:12:59,634 --> 00:13:02,870
所以 在这引入这两个属性

151
00:13:02,870 --> 00:13:07,552
你会看到我现在已经修改了 body 并设置 data-spy="scroll"

152
00:13:07,552 --> 00:13:12,235
以及 data-target，这是后面要引入的滚动监听的 ID

153
00:13:12,235 --> 00:13:16,965
我还在这设置了 data-offset="200"

154
00:13:16,965 --> 00:13:25,920
要引入滚动监听 我来到页面的底部，在footer 之前

155
00:13:25,920 --> 00:13:29,010
在 container 的 row 里面

156
00:13:29,010 --> 00:13:34,200
我会引入一个 nav 元素 也就是我们的滚动监听组件

157
00:13:34,200 --> 00:13:37,870
让我先添加好代码再回头跟你解释一下

158
00:13:39,090 --> 00:13:44,090
回到这里，你看到我现在有一个 nav 标签

159
00:13:44,090 --> 00:13:50,280
请记住，滚动监听只有当你使用 nav 元素时才会工作

160
00:13:50,280 --> 00:13:55,580
所以，我在这个 nav 标签的类里添加了 hidden-xs

161
00:13:55,580 --> 00:14:00,190
也就是说，这个 nav 元素将会隐藏

162
00:14:00,190 --> 00:14:04,490
如果我们在一个特小屏幕上查看网页的话

163
00:14:04,490 --> 00:14:07,440
我们不需要在特小屏幕上显示滚动监听

164
00:14:08,920 --> 00:14:15,770
而对于从小屏幕到大屏幕 这个滚动监听将占据两列空间

165
00:14:15,770 --> 00:14:20,170
回忆一下我们刚刚在右边创建了两列大小的空间

166
00:14:20,170 --> 00:14:23,700
我们将用于滚动监听组件

167
00:14:23,700 --> 00:14:28,070
现滚动监听本身将在这使用 ul 类

168
00:14:28,070 --> 00:14:32,990
我在这使用了 nav-pills 和 nav-stacked

169
00:14:32,990 --> 00:14:39,960
也就意味着这是一个垂直的药片样式

170
00:14:39,960 --> 00:14:44,840
在这，我还引入了 data-spy="affix"

171
00:14:44,840 --> 00:14:50,910
来把它变为一个附加导航 (Affix) 类  然后 data-offset-top="400"

172
00:14:50,910 --> 00:14:54,250
你之前已经看到了附加导航是怎么工作的了

173
00:14:55,810 --> 00:15:00,770
所以，这里会先对滚动监听进行说明

174
00:15:00,770 --> 00:15:04,550
要使滚动监听正常工作，回想一下这些链接

175
00:15:05,560 --> 00:15:09,391
需要引用到这些元素里

176
00:15:09,391 --> 00:15:14,410
对于本页面来说

177
00:15:14,410 --> 00:15:20,120
这些需要引入到页面内容中的行里

178
00:15:20,120 --> 00:15:25,830
让我现在就去引入这些 ID 到那三行中去

179
00:15:25,830 --> 00:15:30,390
而最后一步就是修改我们的 CSS 文件

180
00:15:30,390 --> 00:15:34,030
去添加 Affix 类进去

181
00:15:35,310 --> 00:15:37,500
来到页面内容的行里

182
00:15:37,500 --> 00:15:42,750
对于那个包含历史信息的行，我们打算引入一个 ID 叫 history

183
00:15:46,020 --> 00:15:50,929
第二行的 ID 将被称为 corporate

184
00:15:56,565 --> 00:16:00,537
然后第三行的 ID 将是 facts

185
00:16:04,003 --> 00:16:11,446
让我们保存文件，然后到 mystyle.css 中去

186
00:16:11,446 --> 00:16:16,020
在那将添加 affix 的 CSS 样式类

187
00:16:17,250 --> 00:16:20,753
在 mystyle.css 文件中，我们来到最底部

188
00:16:20,753 --> 00:16:23,779
然后在这添加 affix 类

189
00:16:27,104 --> 00:16:31,835
对于这个 affix 类，我定义了 top: 100px

190
00:16:31,835 --> 00:16:34,170
所以，affix 就是这样工作的

191
00:16:34,170 --> 00:16:39,115
然后保存这些修改，让我们回头看看我们的网页

192
00:16:40,505 --> 00:16:45,445
回到我们的网页，我们现在看到了滚动监听

193
00:16:45,445 --> 00:16:49,385
出现在页面的右侧

194
00:16:51,257 --> 00:16:55,277
并和附加导航共同工作

195
00:16:55,277 --> 00:17:02,067
当我们往上滚动时，导航栏会往上移，但移到某一特定点时

196
00:17:02,067 --> 00:17:08,217
附加导航 (Affix) 类起作用了 导航栏就会固定在这点上

197
00:17:08,217 --> 00:17:13,248
你会看到滚动监听起作用

198
00:17:13,248 --> 00:17:16,265
当你滚动我们的页面时

199
00:17:16,265 --> 00:17:21,009
随着内容不断往上移

200
00:17:21,009 --> 00:17:27,076
导航栏反映了页面中当前显示的内容

201
00:17:36,578 --> 00:17:43,150
所以，现在你看到了滚动监听和附加导航是怎么一起工作的了

202
00:17:43,150 --> 00:17:51,310
当我们滚动回来后，你看到导航栏将不再固定了

203
00:17:51,310 --> 00:17:54,230
以上 我们完成了这次练习

204
00:17:54,230 --> 00:17:56,790
在这个练习里 我们看到了三样东西

205
00:17:56,790 --> 00:18:03,705
我们之前看到了怎么用折叠类来实现手风琴效果的

206
00:18:03,705 --> 00:18:11,573
我们还看到了滚动监听和附加导航的用法