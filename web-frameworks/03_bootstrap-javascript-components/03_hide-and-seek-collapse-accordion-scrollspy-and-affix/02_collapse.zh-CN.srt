1
00:00:00,850 --> 00:00:04,552
现在让我们谈谈"折叠"插件 

2
00:00:04,552 --> 00:00:09,190
这个插件是 Bootstrap 的 JavaScript 组件之一 

3
00:00:09,190 --> 00:00:14,050
我们将会学习如何在我们的网页中
利用折叠插件 

4
00:00:14,050 --> 00:00:16,570
类显示或者隐藏某些内容 

5
00:00:16,570 --> 00:00:21,390
我们会先探索折叠插件和我们的导航栏
之间的配合 

6
00:00:21,390 --> 00:00:26,090
亦即如何让我们的导航栏在屏幕尺寸为最小时 

7
00:00:28,120 --> 00:00:31,070
自动折叠起来 

8
00:00:31,070 --> 00:00:36,790
同时在用户点击某个按钮时能重新显现 

9
00:00:36,790 --> 00:00:43,030
在这之后 我们将会学习如何在
应用折叠插件的同时 

10
00:00:44,320 --> 00:00:50,740
运用面板和面板组来实现一个折叠 

11
00:00:52,980 --> 00:00:56,550
折叠插件向你提供了一个非常快速且简易的方式 

12
00:00:56,550 --> 00:01:00,920
来实现显示或隐藏我们网页上的内容的功能 

13
00:01:00,920 --> 00:01:06,030
我们希望 当用户点击一个按钮或一个链接时
我们特定的内容 

14
00:01:06,030 --> 00:01:12,020
能够根据用户的动作来显示或隐藏 

15
00:01:12,020 --> 00:01:17,840
接下来先让我们看一个应用折叠插件的栗子 

16
00:01:17,840 --> 00:01:20,760
对于其背后的代码 我们稍后再看 

17
00:01:20,760 --> 00:01:25,820
那么来看看这个简单的栗子 我们可以看到
在页面的左边 

18
00:01:25,820 --> 00:01:30,460
显示了一些内容 而在右边则有一个按钮 

19
00:01:30,460 --> 00:01:32,300
当你单击这个按钮时 

20
00:01:32,300 --> 00:01:35,080
你会发现在左边的内容会从显示到消失
又或从消失到显示 

21
00:01:35,080 --> 00:01:40,730
现在让我们来演示一下…… 

22
00:01:40,730 --> 00:01:43,780
当你单击这个按钮 内容便会消失 

23
00:01:43,780 --> 00:01:46,960
当你再次单击这个按钮时 内容又会再度显现 

24
00:01:46,960 --> 00:01:54,700
而这个神奇的"切换"功能就是用折叠插件实现的 

25
00:01:54,700 --> 00:02:01,930
接下来让我们看看代码是怎么写的 

26
00:02:01,930 --> 00:02:07,290
可以看到实现这个折叠的方法是用一个 div 

27
00:02:07,290 --> 00:02:12,500
并设置了 class="collapse in" 

28
00:02:12,500 --> 00:02:13,950
这里我们用到了两个类 

29
00:02:13,950 --> 00:02:17,770
collapse 类和 in 类 

30
00:02:17,770 --> 00:02:20,530
而在这个 div 下面就是我们的内容 

31
00:02:20,530 --> 00:02:25,250
这些内容就是那些会一下消失一下出现的内容 

32
00:02:25,250 --> 00:02:30,020
下一个环节自然就是按钮 

33
00:02:30,020 --> 00:02:38,300
这个按钮就是用来控制上述内容的消失和出现的 

34
00:02:38,300 --> 00:02:43,450
我们用了一个 a 标签来实现这个按钮 

35
00:02:43,450 --> 00:02:49,180
同时设置了 class="btn btn-primary" 

36
00:02:49,180 --> 00:02:54,430
注意到为了实现之前那种神奇的切换 

37
00:02:54,430 --> 00:02:57,990
我们还需要给按钮设置数据属性
data-toggle="collapse" 

38
00:02:57,990 --> 00:03:02,460
并将其目标用 href 表示 

39
00:03:02,460 --> 00:03:07,440
在这个栗子里 我们是用 id 来指定
按钮的作用对象的 

40
00:03:07,440 --> 00:03:12,680
通过 href="#collapseExample" 来指定 

41
00:03:12,680 --> 00:03:15,520
上面定义的那个 id 为 collapseExample 的 div 

42
00:03:17,140 --> 00:03:23,908
那么这些代码加起来 

43
00:03:23,908 --> 00:03:28,666
就实现了之前我们看的那个简单栗子的所有功能 

44
00:03:28,666 --> 00:03:33,851
现在让我们回到我们在一开始看到的那个导航栏 

45
00:03:33,851 --> 00:03:38,951
你大概能想起当屏幕尺寸为最小时
在右边会出现一个按钮 

46
00:03:38,951 --> 00:03:44,280
当我们点击这个按钮时 它会进行内容的
显隐切换 

47
00:03:44,280 --> 00:03:50,150
你大概已经猜到了 这就是用折叠插件实现的 

48
00:03:50,150 --> 00:03:51,390
当时我曾经说过我会在后面的某个模块

49
00:03:51,390 --> 00:03:55,390
详细地阐述这个按扭的实现 

50
00:03:55,390 --> 00:03:59,630
而现在正是详细阐述的时候 

51
00:03:59,630 --> 00:04:03,915
我们将会通过代码来理解 

52
00:04:03,915 --> 00:04:08,595
折叠插件是怎么实现这个酷炫的显隐功能的 

53
00:04:08,595 --> 00:04:13,155
看回这一段源代码 我们现在可以看到这个按钮 

54
00:04:13,155 --> 00:04:18,827
是设置了 data-toggle="collapse"  

55
00:04:18,827 --> 00:04:23,050
和 data-target="#navbar" 的 

56
00:04:23,050 --> 00:04:27,960
如果你回忆起我们第一周解释导航时 

57
00:04:27,960 --> 00:04:30,610
我曾经点出过这两者的话 

58
00:04:30,610 --> 00:04:36,150
如今的你既已经知道了 JavaScript 组件
作用于 Bootstrap 的原理 

59
00:04:36,150 --> 00:04:38,430
想必对当初我的言论会有更深的理解罢 

60
00:04:38,430 --> 00:04:41,095
总之 要点就是实现 data-toggle="collapse" 

61
00:04:41,095 --> 00:04:44,340
和将 data-target 指向 navbar 

62
00:04:44,340 --> 00:04:51,190
至于整个导航的元素 则是一个封装在 div 中的 ul 

63
00:04:51,190 --> 00:04:55,880
同时需要将这个外层的 div 设置为
class="navbar-collapse collapse" 

64
00:04:55,880 --> 00:05:02,890
于是 当你在最小的屏幕尺寸下浏览网页时 

65
00:05:02,890 --> 00:05:09,360
导航栏的默认状态是折叠起来 

66
00:05:09,360 --> 00:05:14,760
因为那个 div 只有一个 collapse 类 

67
00:05:14,760 --> 00:05:18,565
而没有一个表示显示的 in 类 

68
00:05:18,565 --> 00:05:23,239
而如果你一开始就设置了 in 类的话 

69
00:05:23,239 --> 00:05:26,818
那个 div 就会显示出来 

70
00:05:26,818 --> 00:05:32,830
也就是看上去和平时一样 

71
00:05:32,830 --> 00:05:35,665
所以既然这里我们没有用 in 类 

72
00:05:35,665 --> 00:05:38,665
那些内容自然就被折叠了 

73
00:05:38,665 --> 00:05:41,325
而当我们单击这个按钮时 内容会显示出来 

74
00:05:41,325 --> 00:05:44,375
而再次点击后 内容又会被隐藏 

75
00:05:44,375 --> 00:05:48,752
这个神奇的功能正是通过在导航栏上 

76
00:05:48,752 --> 00:05:51,412
应用折叠插件来实现的 

77
00:05:53,332 --> 00:05:57,842
这些种种 阐述了如何在最小屏幕尺寸下 

78
00:05:57,842 --> 00:06:01,432
通过在导航栏上应用折叠插件来达到一种
很好的效果 

79
00:06:03,920 --> 00:06:06,880
回到我们的 aboutus.html 页面 

80
00:06:06,880 --> 00:06:12,420
我们接下来需要用一个折叠来代替
我们之前实现的 

81
00:06:12,420 --> 00:06:17,790
这整个显示合伙企业领导信息的页签导航 

82
00:06:17,790 --> 00:06:21,650
我们将用一个面板组来实现这个折叠 

83
00:06:21,650 --> 00:06:26,270
顾名思义的 面板组将会封装一系列面板 

84
00:06:26,270 --> 00:06:33,700
我们已经在之前的单元中学过怎么实现面板 

85
00:06:33,700 --> 00:06:37,060
现在我们将活用面板来实现一个折叠 

86
00:06:37,060 --> 00:06:42,440
我们需要实现的效果是 当我们一开始
点进这个网页时 

87
00:06:42,440 --> 00:06:47,750
第一个面板的内容将会呈现 

88
00:06:47,750 --> 00:06:52,050
同时其它面板的内容将被隐藏 

89
00:06:52,050 --> 00:06:57,100
而当你点击其它的面板时 

90
00:06:57,100 --> 00:07:02,530
那个特定的面板的内容将会呈现 

91
00:07:02,530 --> 00:07:06,030
同时其它内容将被隐藏 

92
00:07:06,030 --> 00:07:09,750
我们可以一个一个地 

93
00:07:09,750 --> 00:07:12,275
反复地 

94
00:07:12,275 --> 00:07:15,410
进行这种显隐状态的切换 

95
00:07:15,410 --> 00:07:19,720
而这就是所谓的折叠了 

96
00:07:19,720 --> 00:07:24,190
接下来让我们快速地看一下 

97
00:07:24,190 --> 00:07:26,485
如何通过面板和面板组来实现它 

98
00:07:27,900 --> 00:07:32,360
我们可以看到 

99
00:07:32,360 --> 00:07:35,680
左侧的代码实现的 

100
00:07:35,680 --> 00:07:40,550
就是右边的效果 

101
00:07:40,550 --> 00:07:46,190
仔细地看代码 你可以发现我们将所有的内容 

102
00:07:46,190 --> 00:07:52,240
都封装进了一个外层的 div 里面 

103
00:07:52,240 --> 00:07:56,500
而这个 div 被设置了 class="panel-group"
和 id="accordion" 

104
00:07:56,500 --> 00:08:03,220
同时在这个 div 的下面 我们可以看到许多
被封装起来的 

105
00:08:03,220 --> 00:08:06,450
不同的面板 

106
00:08:06,450 --> 00:08:12,088
而这些面板都有一个标题和一个内容体 

107
00:08:12,088 --> 00:08:16,870
在标题里 我用了带 class="panel-title" 的 h3 标签 

108
00:08:16,870 --> 00:08:21,710
而在这个 h3 标签中我又用了一个 a 标签 

109
00:08:21,710 --> 00:08:28,080
来装这个公司领导人的名字 

110
00:08:28,080 --> 00:08:33,250
同时 这个 a 标签还被设置了 role="button" 

111
00:08:33,250 --> 00:08:37,660
和 data-toggle="collapse" 

112
00:08:37,660 --> 00:08:42,920
这些加在一起 就实现了我们之前 

113
00:08:42,920 --> 00:08:46,810
看到的那种显隐状态切换 

114
00:08:46,810 --> 00:08:51,230
的效果 

115
00:08:51,230 --> 00:08:56,481
当然在 a 标签的 data-toggle 后面要接一个 href 

116
00:08:56,481 --> 00:09:00,488
这个 href 应当指向下面相应定义的面板 

117
00:09:00,488 --> 00:09:01,347
除了 Glyphicons 之外

118
00:09:01,347 --> 00:09:06,350
我还设置了另一个数据属性
data-parent="#accordion" 

119
00:09:06,350 --> 00:09:09,880
这声明了这个面板时“属于” accordion 的 

120
00:09:11,010 --> 00:09:15,410
而“同属”一个含有
class="panel-group" 属性的 div  

121
00:09:15,410 --> 00:09:19,030
的面板中 只能有一个被显示而其它都需被隐藏 

122
00:09:19,030 --> 00:09:22,438
这就是为什么我们需要将 data-parent
指向最外层的那个 div 

123
00:09:22,438 --> 00:09:26,780
至于面板的内容 则会被封装进一个 div 

124
00:09:26,780 --> 00:09:32,120
这个 div 会被设置
class="panel-collapse collapse in" 

125
00:09:32,120 --> 00:09:36,260
注意到有了 in 就表示在刚打开界面时 

126
00:09:36,260 --> 00:09:37,930
这一块内容会被显示出来 

127
00:09:37,930 --> 00:09:43,650
所以当我们只对其中一个面板应用 in 类时 

128
00:09:43,650 --> 00:09:49,210
就会呈现右图这样的 

129
00:09:49,210 --> 00:09:52,480
只有一个面板内容被呈现 

130
00:09:52,480 --> 00:09:55,290
而其它面板内容都被隐藏的效果 

131
00:09:55,290 --> 00:10:00,390
注意到我将 id 的名字都设置好了 

132
00:10:00,390 --> 00:10:04,340
这些 id 能很好地对应上之前 a 标签里的 href 

133
00:10:05,500 --> 00:10:08,364
而在 panel-collapse 里面 

134
00:10:08,364 --> 00:10:14,089
我们将会用一个 p 标签来封装那些
我们想要呈现的内容 

135
00:10:14,089 --> 00:10:20,490
而这个 p 标签的外层需为一个设置了 

136
00:10:20,490 --> 00:10:24,970
class="panel-body" 的 div 

137
00:10:24,970 --> 00:10:27,660
也就是外层 div 保证了折叠的功能 

138
00:10:27,660 --> 00:10:32,270
内层 div 包含了实际的内容 

139
00:10:32,270 --> 00:10:37,710
那么 当我们做完了上述种种工作 

140
00:10:37,710 --> 00:10:41,250
当我们将所有面板封装进了
同一个 panel-group 下 

141
00:10:41,250 --> 00:10:45,630
当我们将这些面板的 data-parent
同时指向了这个 panel-group 

142
00:10:45,630 --> 00:10:49,360
当我们很好地设置了各个类 

143
00:10:49,360 --> 00:10:54,560
当我们很好地设置了各个 id 

144
00:10:54,560 --> 00:10:58,930
之后 

145
00:10:58,930 --> 00:11:03,576
我们之前看的那种显隐状态切换的效果 

146
00:11:03,576 --> 00:11:08,700
就全部实现完毕了 

147
00:11:08,700 --> 00:11:13,760
以上 就是关于如何实现折叠的全部内容
【翻译 - Carefree0910】