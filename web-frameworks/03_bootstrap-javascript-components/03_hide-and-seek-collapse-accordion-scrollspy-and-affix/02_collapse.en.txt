We will now talk about
the collapse plugin, which is one of
the Bootstrap JavaScript components. We will see how we can make use of
the collapse plugin to show and hide content on our web page. We will also examine how the collapse
plugin has been leveraged with our nav bar, in order to collapse
the nav bar when you see that page on extra small screens. And then reveal their nav bar
items upon clicking of a button. We'll then see how we can make use of the
collapse plugin together with the panel class and the panel group classes
to construct an accordion. The collapse plugin
provides a very quick and easy way of showing and
hiding content on our web page. To toggle the show and hide behavior of
our content we need to make use of either a button or a link, which,
when clicked, will toggle the content. Now we'll look at a simple example
of the collapse plugin in use and then review the code thereafter. Taking a look at this simple example,
you can see that we have some content displayed on the left side here, and
then a button on the right side. So when you click on the button, the information will be either revealed or
hidden. Right now, we start out with
the information being shown on the page. When you click on the button,
the information is hidden and then when you click on the button again,
the information is shown. So this toggling of behavior is
enabled by using the collapse plugin. Let's now review the source code for
the collapse example that we just saw. So in this case, this collapse
example is implemented by using a div with a class collapse and
in applied to it. So we have two classes there. Collapse class and in class,
together being applied to this div. So this is the div that
contains the content that is going to be either shown or
hidden by clicking on the button. So the next part is the button itself, which is going to trigger this toggling
of the showing and hiding of the content. So this toggle button is implemented
by using a standard a tag with the button class as btn-primary,
as you see in the example there. In addition, for the toggle to take place, we have a data attribute
called data-toggle. And then the data-toggle
with the collapse attribute. And the href of this a tag
will refer to the ID of the div which contains
the content that should be shown and hidden upon clicking of this button. So, together with these,
this code implements the collapsing and hiding of the content for
this simple example. Returning to the navigation bar that
we have seen in the very first week, you'll recall that on extra small screens,
we had a button on the right side which when clicked would
either reveal or hide the content. Now, this action was actually implemented
using the collapse plugin there. At that point, I mentioned that I would come back
to this in one of the later modules. So now we will go back and reexamine
the code that implemented this collapse behavior and then understand how we
are leveraging the collapse plugin to enable this behavior. Looking back at the source code that we
had seen earlier, you can now see that the button has been implemented there,
with the data-toggle as collapse and the data-target pointing to the navbar. If you recall from the week one
module where we explained navigation, I had pointed out these two items there. Now, having known how the JavaScript
components operate in Bootstrap, it all makes a lot more sense. So with this data-toggle
that we implemented there, data-toggle collapse and
the data-target is navbar. Now the whole navigation element,
the ul was enclosed inside a div, which was given the class
navbar-collapse and collapse. So what happens is that when you view
this web page on an extra small screen, by default the navigation bar containing
the navigation elements is collapsed. Because this div has only been
given the collapse class there. It has not been given the in
together with the collapse class. If you give the in class
together with the collapse class the div will start in
the shown mode there, which means that the content will
actually be shown on the screen. So since we avoided
the use of the in class, the content will start
in the collapsed border. When the button is clicked,
the content will revealed. And when the button is again clicked,
the content will be hidden. So that is how the navigation
bar worked for the collapse plugin that we used earlier. So that is how the navigation
bar with the collapse plugin together worked for
the extra small screens. Going to back to our about
our aboutus.html page. Now I have replaced the entire
tabbed navigation that I had for the corporate leadership information
earlier, using an accordion. The accordion works by using a panel group together with a set of panels
that enclose the content. We have already seen the panel component
in Bootstrap in the previous module. So let's see the accordion in action. So, when you look at the web page, you
will see that the web page starts out with that first panel containing
the details of the CEO being shown, and the remaining panels being hidden. Now, if you click on any one of the other
panels, then the result is that that particular panel gets revealed,
and the remaining panels get hidden. So you can see the behavior
with the remaining panels too. So you can click on any one
of those panels heading and then the contents of
the panel will be revealed, while the contents of the remaining
panels will be hidden. So this is the accordion behavior
that I was talking about. Let's now quickly look at how we
implement this accordion behavior using the panel group and the panels. Going to the source code,
we now see the code for the accordion shown on the left-side and the accordion itself as seen on
the web page shown on the right side. So when you look at the code on the left
side you see that we have enclosed the entire content in an outer div which
has been given the class as panel-group, and has been given the ID
as accordion there. And inside there, individual panels
are enclosing the actual content. So, the individual panels,
as you can see here, has a panel-heading and
the panel-body down below here. In the panel-heading,
you can see that I am using the h3 class with the panel title,
and then inside the h3 class, I am including the name
of the corporate leader. And this name is enclosed inside an a tag with the role button and
the data-toggle given as collapse. So, now you can see why
clicking on that link or corresponding to the corporate
leader opens and closes that particular
panel content there. So, the data-toggle and
then the href, obviously, pointing to the panel itself down below. In addition, I am also giving another data attribute
called data-parent with the accordion. So, this is declaring
that this panel forms one of the panels in the panel
group there with the id accordion. So this is why the data-parent
is given the id as accordion, which is the id of the panel group there. Now, the content itself is enclosed inside a panel-collapse class with a collapse and
in here. Now this means that this
particular content will start out by being shown on the screen. So that is why on the right-hand side,
you can see that the CEO's panel starts out as open, but the remaining
panels we will not use the in class for the remaining panel collapses. We will only use the collapse class there. And note also that the ID is given as
Peter, which corresponds to the href that you gave for the a tag earlier there. Inside this panel-collapse, we are enclosing the actual content,
the p element that we had, with the description inside a inner div,
with the class panel-body. So the outer div enables
the collapse behavior to work. And the inner div actually
contains the panel-body, which is displayed on
the screen on the right side. So, when you click on the name
of the corporate leader, the corresponding panel is
either hidden or revealed. Because of the enclosing
of all these panels inside a panel group with
the id accordion, and the data-parent attribute specified
as accordion for each of the panels. When you click on any one
of those panel headings, that particular panel will be revealed and
will also result in the remaining panel bodies being collapsed correspondingly. So, this is what implements the accordion
behavior that you see on the web page.