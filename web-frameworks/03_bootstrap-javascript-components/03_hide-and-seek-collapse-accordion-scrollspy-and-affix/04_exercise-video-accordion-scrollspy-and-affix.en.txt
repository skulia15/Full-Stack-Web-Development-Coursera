In the previous exercise we saw the use of
tabbed navigation and tabs and tab page. Now we're going to convert those tabs into an accordion using the collapse
class that we just learned about. In addition, we're going to
make use of the scroll spy and affix class that we just
learned in order to introduce some side navigation to our
about start HTML pitch. Getting back to our web page, let's do a little bit of housekeeping
on this web page and creat space so that we can introduce the sidebar using
the scroll spy and affix later on. We will also convert the tabs and
the tab navigation into accordion now. So going through this webpage,
you notice that the second and the third rows have some empty
space on the right side. So we're gonna delete that empty space and let these two rows stretch
completely the entire screen. Now, the first row, I'm gonna cut
down the size a little bit, because when we push the content to the left here
in order to accommodate the skull spy, some of these content will look
a little squished on the left side. So let's do that housekeeping and then
we'll come back and look at the webpage before we move on to working
on introducing the Accordion. Going to your web page content,
I am now going to adjust the columns specifications for
the first row. Previously we were using column sm-8. I'm going to reduce that to column SM6,
but for large screens Its fine to keep the eight columns for
the first part of the content. So let me update the column classes here I have updated the column classes to
column SM6 and column LG8 so for the mediums I screened also
The six will still apply. The other part of this row
which contains the panel, I have adjusted the column
classes appropriately. So I have used column sm-6 and
column lg-4 for this. The remaining two rows I'm going
to adjust the column class so that is occupies the entire 12 columns for
the content, which also means that I need to
remove the div which was reserved for the empty space on the right side. For the second column, I have adjusted so
that it occupies the entire 12 rows, and then I have removed the second
div which was in this particular row. Same thing for the third row also. After making the changes,
looking at the state of the web page you notice that the columns have been
adjusted accordingly, the second and the third row now occupy
the entire 12 columns here. Now we are going to later on squish these
to the left by introducing a relational road to nest this content so
that we will create enough space on the right side to introduce this
scroll spy and the effects. In our next step, we're going to go
to these tabs that we created for the corporate leadership and
then replace that with an accordion. We're going to make use of the collapse
class that we have learned earlier together with the panel that we have seen in the previous module and the panel
group, that is a group of panels. And then we are gonna make use of
that to design the accordion for the different corporate leadership, here. So, all these tabs will be turned
into accordions using these classes. Going back to the code, I am now going to remove the tab
navigation that I have introduced earlier. So the ul that we introduced for the tab
navigation will be completely removed, and then I will start turning each of
those tab panes into panels and enclose them inside a panel group. And then apply the appropriate collapse
classes to turn that into an accordion. I have now deleted the tabbed navigation. Now I'm going to take this div and
then turn that into a panel group first. So I have now replaced the tab content
with a div with the class panel group. So anything inside, all the panels inside
will now form a group of panels and such that the spacing between
them is adjusted appropriately. And we can then apply the accordion
to this group of panels here. In the next step, I'm going to replace
this tab here and turn that into a panel, and then I'll move the name of
the CEO into the panel heading. Then the panel content,
the P that we had where we described the content,
will be moved into a panel body. I have first introduced
that panel there and then the panel heading,
for the very first panel. So this first panel will contain
the details about our CEO. So, in this panel, you can notice
that I have the div for the panel and then after that, I have introduced
the inner div for the panel heading. So this is the typical
structure that we have seen for panels, where panel headings earlier. Now inside that, I am using the h3 class,
which I have turned into a panel title. So this contains the name of the Cu. Now in order to turn this panel
title in to a control for the accordion class so
that when you click on the link there or the name of the CEO there,
then the panel will open and close so the collapse feature
will be introduced there. For that, I am introducing an A tag here. Now inside the A tag, I am applying
the data toggle as collapse and the data-parent,
I am pointing to the accordion, which I have introduced earlier,
the panel group whose ID is accordion. So that's the data parent for it. And so this completes the setting
up of the panel heading. Now let's go into the panel
content itself, the panel body. And then make the changes there, and then go back and look at what
happened to the web page design. In the next step I have
introduced another dev there with the class panel collapse and
collapse and in. Which means that this
particular panel will be opened when the webpage is first rendered. So whatever content is there inside
will be displayed on the web page when you first visit the web page. This panel can be turned on and
off by using the collapse class there. After making these changes,
let's go back and look at our webpage. Taking a look at out webpage you
can now see that the content is enclosed inside a panel here. Now if you click on the panel heading here the content will, can be collapsed and
then shown again. So this is the collapse class
coming into action here. Now we're going to apply the same for the remaining three
corporate leaders in there. And then come back and
look at the result on the page. I have now done the same
change to the second corporate leader's information there, and
I have applied the panel and the panel heading just like I did before,
and the panel title and the A role there. Now coming down to the panel body itself, notice that here I have applied
the classes panel collapse, collapse here. I then applied the in class here which
means that this particular panel I want it to start out in the closed mode so
that means that it's not gonna be showed. A little bit close in this when
the page is first visited. So going back and
looking at the webpage again, we'll notice that we've introduced
the second panel into the group there. Going back to our webpage you can now
see that we have two panels in place. The first panel is open because
we use the in class for that panel body there. The second panel is closed at this moment,
but if you click on the second panel, notice that the accordion
behavior comes into action, here. So you can click on
the two leader's names, and then you can see the accordion
behavior coming into action here. Now, we're gonna complete this for
the remaining two leaders in this list here and
then come back and look at the webpage. After completing the changes,
going back and looking at the webpage, we now see that the full corporate
leaders information is now- Inside an accordion, so you can
click on any one of the leaders and then you can see
the accordion in action here. Our next step is to
introduce the Scrollspy. So to do that, what we're going to
first do is to move this entire content in this web page to the left and create some space on the right side so
that we can introduce a Scrollspy there. To do that, we will enclose this
whole content inside a row and then give that a column
class of ten columns so that we are left with two columns on
the right side for the Scrollspy. So let me make the change to the webpage,
and then we'll come back and
have a look at a change to this page. To create enough space on the website for
the scrollspy, I'm going to go into this container and
then include its entire content into another column there. So to do that,
let me introduce the code here. So here, I have introduced another row and introduced a column class
with column xs-12 and sm-10. And then the entire content will be
enclosed inside this ten columns here. After making the changes,
looking at the webpage now we notice that we have created
enough space on the right side for us to introduce a vertical navigation
element there to use as a Scrollspy. To introduce the Scrollspy,
I am going to go into the body and introduce the data target and
the data offset here. So introducing these two elements there,
so you can see that I have now modified
the body to say the data-spy, scroll, and data-target,
which is the ID of the Scrollspy that I'm gonna introduce later and
the data-offset is 200 here. To introduce a Scrollspy I come down the
bottom of the page just before the footer. Inside the row of the container, I will introduce a nav element,
which is going to act as my Scrollspy. Let me introduce the code there and
then come back to explain it to you. So coming back here you see that
I have now a nav class remember that the scroll spy works only when
you use it on a nav element there. So here I have a nav class for
which I have introduced the classes as hidden access, meaning that this
nav element is going to be hidden when I am viewing the webpage
on an extra small screen. So I don't need the scroll
spire on extra small screens. For small to large screens, this
Scrollspy is going to occupy two columns. So recall that we just created two
empty columns on the right side, so that is what I'm going to make use of for
the Scrollspy. Now the Scrollspy itself is created
using the ul class here, for which I am Using the nav-pills here,
and the nav-stacked. So this means that this is a sort of
vertical pills that I am creating here. Now, to this, I am also introducing
this data-spy affix here. So to turn that into an affix class there,
and then the data off the top is 400. You have already seen how
the affix works earlier. So with this introduction,
the Scrollspy will be in place. Now in order for the Scrollspy to work,
recall that the links should be introduced to the elements. So in this web page,
these should be introduced to the rows of the content, here. So let me go ahead and introduce
the IDs for the three rows there. And then the last step is to modify our CSS file to introduce
the affects class there. Going into the content rows for that row containing the history I am
going to introduce an ID as history. The second row would be called
with an ID of corporate. And the third row will
have an ID of facts. Let's save the file and then we will
go into the mystylestarts CSS file and introduce the affix CSS
styles class there. In the my style starts CSS
file we go to the bottom and then I will introduce
the affix class here. For this affix class, I am declaring
the top to be 100 pixels, so this is how the affix works. So, saving the changes,
let's go back and look at our webpage. Returning to our webpage,
we now see that the Scrollspy is available on the right side and
it is also incorporated with
the affix class in place. So as we scroll up,
the nav moves upwards but at a certain point the Affix class takes over and
then the nav gets fixed at that point. You can also see the ScrollSpy in action, so as we scroll our page, as the contents come up the nav reflects the current content being
viewed on the web page. So you can now see this Scrollspy in
action together with the affix plug in. So as you see that as we scroll back
the nav is moved out of the way. This completes this exercise. So, in this exercise, we saw three things. We saw the use of the accordion with the
collapse plug in that we have seen earlier and we saw the use of the Scrollspy and
Affix class.