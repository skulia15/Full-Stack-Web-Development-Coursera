1
00:00:01,840 --> 00:00:04,720
Let us now understand the Scrollspy and

2
00:00:04,720 --> 00:00:08,375
Affix plug-ins that
are available within Bootstrap.

3
00:00:08,375 --> 00:00:14,320
The Scrollspy plug-in is
applied to a nav element,

4
00:00:14,320 --> 00:00:18,641
such that as you scroll your web page,

5
00:00:18,641 --> 00:00:23,641
whatever is currently
visible on the screen

6
00:00:23,641 --> 00:00:27,850
will be highlighted in the nav page.

7
00:00:27,850 --> 00:00:32,515
So that the corresponding nav
element In the nav bar, or

8
00:00:32,515 --> 00:00:39,270
in the nav item that you display,
would be highlighted on the screen.

9
00:00:39,270 --> 00:00:41,010
It is best for us to go and

10
00:00:41,010 --> 00:00:44,800
look at an example to understand this
behavior before we come back and

11
00:00:44,800 --> 00:00:49,420
examine how we would implement
the Scrollspy and the Affix plugin.

12
00:00:49,420 --> 00:00:51,610
These two go together in some sense, so

13
00:00:51,610 --> 00:00:54,472
that's the reason why I'm
covering the two together.

14
00:00:57,263 --> 00:01:03,505
To understand these two plugins,
let's go to our bootstrap web page itself.

15
00:01:03,505 --> 00:01:05,236
Getbootstrap.com and

16
00:01:05,236 --> 00:01:11,080
I am right now under the Javascript
part of the bootstrap web page.

17
00:01:11,080 --> 00:01:18,770
You can see that on the right side,
we have a nav bar here.

18
00:01:18,770 --> 00:01:22,950
This must have been
implemented using nav-pills.

19
00:01:22,950 --> 00:01:27,746
So as you scroll, you can see that the nav

20
00:01:27,746 --> 00:01:31,992
bar on the right side, scrolls up.

21
00:01:33,720 --> 00:01:37,944
As you scroll the page,
but when you hit the top,

22
00:01:37,944 --> 00:01:42,100
notice the subtle change in the behavior.

23
00:01:42,100 --> 00:01:47,380
When the scroll goes up to a certain
point, the nav bar suddenly

24
00:01:49,570 --> 00:01:53,530
jumps up and
then gets itself fixed to a location.

25
00:01:53,530 --> 00:01:58,310
As you scroll now you can see
that the item that you're

26
00:01:58,310 --> 00:02:03,190
viewing on the webpage gets
highlighted in the nav items there.

27
00:02:04,290 --> 00:02:08,719
And as you keep scrolling, the individual

28
00:02:08,719 --> 00:02:13,277
items get highlighted
in the nav bar there.

29
00:02:13,277 --> 00:02:15,589
So scrolling more quickly,

30
00:02:15,589 --> 00:02:20,695
you can see that at every single
point the corresponding item in

31
00:02:20,695 --> 00:02:26,303
the nav is being highlighted by
changing its color on the right side.

32
00:02:29,177 --> 00:02:33,690
Scrolling further you can see that
behavior again one more time.

33
00:02:33,690 --> 00:02:40,060
When you scroll back, you will see
that the plugin again jumps back and

34
00:02:40,060 --> 00:02:45,150
then starts scrolling back
with the page at some point.

35
00:02:45,150 --> 00:02:52,209
Now, these two behaviors are implemented
using the Scrollspy and Affix plugins.

36
00:02:52,209 --> 00:02:56,920
The Scrollspy plugin tracks the current

37
00:02:56,920 --> 00:03:01,300
scroll position of the web page,
and then reflects that

38
00:03:01,300 --> 00:03:05,685
by highlighting the appropriate
nav item in the nav element there.

39
00:03:05,685 --> 00:03:10,824
The Affix plug-in enables your nav
element to move with the scroll

40
00:03:10,824 --> 00:03:15,227
up to a certain point and
when it reaches a certain point,

41
00:03:15,227 --> 00:03:19,350
then the Affix plugin
will fix the position.

42
00:03:19,350 --> 00:03:24,170
This is done by changing
the position CSS property of

43
00:03:24,170 --> 00:03:28,710
that element from relative
to fixed position.

44
00:03:32,627 --> 00:03:37,450
The Scrollspy plugin
is enabled as follows.

45
00:03:37,450 --> 00:03:42,040
We need to apply certain
data attributes to

46
00:03:42,040 --> 00:03:47,120
an element of the webpage
which we want to track.

47
00:03:47,120 --> 00:03:51,110
Now Scrollspy expects that
this element of the web page

48
00:03:51,110 --> 00:03:54,340
will have a position that's relative.

49
00:03:54,340 --> 00:03:59,660
Now this is easiest done by
assigning this to the body

50
00:03:59,660 --> 00:04:02,820
element of our web page,
our body tag of our web page,

51
00:04:02,820 --> 00:04:06,540
because the body tag by default
gets the position [INAUDIBLE].

52
00:04:06,540 --> 00:04:11,276
So which means that the Scrollspy will
be able to track the scroll position of

53
00:04:11,276 --> 00:04:16,960
the inner elements inside the body tag.

54
00:04:18,955 --> 00:04:23,285
To do that,
we are going to assign to the body

55
00:04:23,285 --> 00:04:28,017
a data spy attribute with scroll.

56
00:04:28,017 --> 00:04:32,637
And then I gave the data
target pointing to the ID of

57
00:04:32,637 --> 00:04:35,877
the scroll nav element that
we're going to introduce later.

58
00:04:35,877 --> 00:04:43,337
So in this example, I am giving the nav
element a an ID as myScrollspy.

59
00:04:43,337 --> 00:04:46,117
And so
that’s why I’m giving you the data target.

60
00:04:46,117 --> 00:04:50,900
And the data offset is 200, which means
that the actual tracking of the scroll

61
00:04:50,900 --> 00:04:54,420
position begins 200 pixels from the top.

62
00:04:54,420 --> 00:04:57,480
So this is the offset that we give,

63
00:04:57,480 --> 00:05:02,380
essentially to avoid tracking
the upper 200 pixels.

64
00:05:02,380 --> 00:05:04,600
Recall that when you
look at your web page,

65
00:05:04,600 --> 00:05:09,170
the top part of the web page
contains the jumbotron.

66
00:05:09,170 --> 00:05:13,650
We are not going to track the part of the
jumbotron, we want to track the rest of

67
00:05:13,650 --> 00:05:17,900
our content of the webpage,
the actual content in our webpage.

68
00:05:17,900 --> 00:05:21,544
So that's why I have given
it a data offset of 200.

69
00:05:23,330 --> 00:05:26,860
Now, to apply the Scrollspy itself,

70
00:05:26,860 --> 00:05:31,800
I need to introduce a nav
element into my webpage.

71
00:05:31,800 --> 00:05:36,700
To this nav element, I introduce
the property classes, but, in particular,

72
00:05:36,700 --> 00:05:41,320
I give it an id,
which is the same as the ID that I use

73
00:05:41,320 --> 00:05:45,410
in the data target in my body tag.

74
00:05:45,410 --> 00:05:49,830
Now inside that,
we will use the UL class with the nav and

75
00:05:49,830 --> 00:05:55,360
in this example I am using the nav-pills
and nav-stacked classes there.

76
00:05:55,360 --> 00:06:01,630
So this will create the nav
element as a nav-pills

77
00:06:01,630 --> 00:06:07,900
element with the pills stacked vertically,
one on top of the other.

78
00:06:07,900 --> 00:06:14,380
Now, inside here, of course, I have
the list Items here each corresponding to

79
00:06:14,380 --> 00:06:19,080
the various content rows
that I have in my webpage.

80
00:06:21,360 --> 00:06:25,300
For each of those rows I need
to give the corresponding id

81
00:06:25,300 --> 00:06:29,570
that I am using in the href attribute for
these a tags here.

82
00:06:31,900 --> 00:06:38,570
Let us now see this Scrollspy
in action on our webpage.

83
00:06:38,570 --> 00:06:42,504
So I have used this inside
my aboutus.html page.

84
00:06:42,504 --> 00:06:46,681
So you can see that I have the nav
element on the right side,

85
00:06:46,681 --> 00:06:49,330
which is a nav-pills stacked.

86
00:06:49,330 --> 00:06:56,630
So as I scroll the page, you can see
that the nav element scrolls with it.

87
00:06:56,630 --> 00:06:58,435
I’m also using the affix here, so

88
00:06:58,435 --> 00:07:01,130
I'm going to explain the affix
part a little bit later.

89
00:07:01,130 --> 00:07:07,370
So as you scroll,
as our row comes into our view there,

90
00:07:07,370 --> 00:07:12,060
the corresponding item Is being
highlighted in my nav element.

91
00:07:12,060 --> 00:07:15,320
So I can see that currently,
I'm viewing the History.

92
00:07:15,320 --> 00:07:20,170
So as I scroll to see the Corporate,
that will be highlighted.

93
00:07:20,170 --> 00:07:22,080
And then as I scroll past, and

94
00:07:22,080 --> 00:07:26,630
then the Facts & Figures come up, that
item will be highlighted in the nav page.

95
00:07:26,630 --> 00:07:29,540
Scrolling backwards,
you see the same behavior one more time.

96
00:07:35,039 --> 00:07:38,280
Now let's look at how
the affix part of it works.

97
00:07:38,280 --> 00:07:43,370
So for the affix plugin to work, you see
that for the ul class I have given it

98
00:07:43,370 --> 00:07:48,740
the data spy attribute as affix and
then I set the data-offset-top as 400.

99
00:07:48,740 --> 00:07:53,040
This means that as the scrolling happens,

100
00:07:53,040 --> 00:07:58,570
when my webpage scrolls past
the 400 pixel mark from the top,

101
00:08:00,960 --> 00:08:05,880
up to that point my nav element will
scroll together with the webpage.

102
00:08:05,880 --> 00:08:11,030
At that point,
what happens is that the affix plugin

103
00:08:11,030 --> 00:08:16,040
will change the class given to

104
00:08:16,040 --> 00:08:21,680
this ul from affix top to
the affix class there.

105
00:08:21,680 --> 00:08:27,650
Now, when the change happens,
the position CSS property of this

106
00:08:27,650 --> 00:08:33,910
nav element will be changed from
position relative to position fixed.

107
00:08:33,910 --> 00:08:37,370
So at that point this
nav element gets fixed

108
00:08:37,370 --> 00:08:41,120
on the webpage to a specific location.

109
00:08:41,120 --> 00:08:45,530
Now, when does that fixing get triggered?

110
00:08:45,530 --> 00:08:50,183
That is specified by the data-offset-top
attribute that I am giving here.

111
00:08:50,183 --> 00:08:54,552
And then I am specifying
the position is 400, so

112
00:08:54,552 --> 00:09:02,055
when you scroll past the 400 pixel mark,
at that point that nav element gets fixed.

113
00:09:02,055 --> 00:09:03,575
How do you decide this?

114
00:09:03,575 --> 00:09:09,005
That you will have to look at the
structure of your webpage and then decide

115
00:09:09,005 --> 00:09:14,815
at what point it is appropriate to fix
that nav element into a given position.

116
00:09:16,225 --> 00:09:20,830
So, again, reviewing, we see that
the Affix plugin is triggered by

117
00:09:20,830 --> 00:09:25,480
using the data-spy in the affix, and

118
00:09:25,480 --> 00:09:29,960
the data-offset-top with 400 applied
to the ul class that we saw.

119
00:09:29,960 --> 00:09:35,739
In addition, inside my style
start CSS file I am going to add

120
00:09:35,739 --> 00:09:41,880
an affix class with the property
as top fixed to 100 pixels.

121
00:09:41,880 --> 00:09:46,430
What this means is that my
nav element is going to

122
00:09:46,430 --> 00:09:51,420
be fixed from the top position
of the webpage, 200 pixels.

123
00:09:51,420 --> 00:09:55,790
So when I change the position
property to position fixed,

124
00:09:55,790 --> 00:10:00,530
the location is 100 pixels
from the top of the webpage.

125
00:10:03,100 --> 00:10:07,530
Going back to our webpage,
you see that as I scroll

126
00:10:07,530 --> 00:10:12,800
the webpage my nav
element scrolls with it.

127
00:10:12,800 --> 00:10:16,585
But at a certain point,
the nav element gets fixed there, so

128
00:10:16,585 --> 00:10:20,682
you can see the triggering of
the fixing of the nav element there.

129
00:10:20,682 --> 00:10:28,571
That nav element now is fixed at 100
pixels from the top of the webpage there,

130
00:10:28,571 --> 00:10:36,110
and subsequently will remain fixed
at that position when I scroll.

131
00:10:36,110 --> 00:10:40,748
When I scroll back again,
when I reach the 400 pixel mark,

132
00:10:40,748 --> 00:10:45,665
then the affix class will be removed and

133
00:10:45,665 --> 00:10:51,550
affix top class will be fixed,
will be given to this nav element.

134
00:10:51,550 --> 00:10:54,736
And then the position is changed
to relative at that point, so

135
00:10:54,736 --> 00:10:58,120
that's why the nav element,
again, scrolls with the web page.

136
00:11:00,305 --> 00:11:03,470
This completes our discussion
on the Affix plugin.

137
00:11:04,470 --> 00:11:07,040
Now, in the next exercise,

138
00:11:07,040 --> 00:11:11,430
we're going to make use of the accordion,
the Scrollspy and Affix, and

139
00:11:11,430 --> 00:11:15,950
then apply each to the aboutus.html
page that we have been designing so far.

140
00:11:15,950 --> 00:11:23,920
We're going to enclose the corporate
leadership content into an accordion and

141
00:11:23,920 --> 00:11:29,575
we're gonna add another nav
element to the right hand side

142
00:11:29,575 --> 00:11:35,082
to track the position of
the scroll of our webpage.

143
00:11:35,082 --> 00:11:38,392
So we're going to make use of
the Scrollspy for this purpose.

144
00:11:38,392 --> 00:11:42,392
And then we're going to
that Scrollspy nav element,

145
00:11:42,392 --> 00:11:48,102
we're gonna apply the Affix plugin to fix
the position when we scroll the webpage.