1
00:00:01,570 --> 00:00:06,330
Let's now talk about Tooltips,
Popovers, and Models.

2
00:00:06,330 --> 00:00:11,100
These are three different ways
of showing content to the users.

3
00:00:13,920 --> 00:00:16,609
Earlier we had seen
the use of the collapse

4
00:00:17,680 --> 00:00:23,100
Plugin where we were able to show and
hide content on the webpage.

5
00:00:23,100 --> 00:00:26,010
But in those applications

6
00:00:27,020 --> 00:00:32,460
we had to have the content
already embedded in the webpage.

7
00:00:32,460 --> 00:00:40,534
Tooltips, popovers, and modals are the way
of overlaying content onto your webpage.

8
00:00:42,785 --> 00:00:46,863
In terms of flexibility,
tooltips are the simplest, but

9
00:00:46,863 --> 00:00:49,880
provide very little flexibility.

10
00:00:49,880 --> 00:00:53,180
Popovers provide more
flexibility than tooltips.

11
00:00:53,180 --> 00:00:59,150
Modals are, of course, a comprehensive way
of presenting information to the users.

12
00:00:59,150 --> 00:01:02,805
So we'll examine each of
these In more detail, next.

13
00:01:02,805 --> 00:01:08,270
To understand how tool tips work,
let's visit our web page.

14
00:01:08,270 --> 00:01:12,810
And, then when we hover onto
the reserve table button,

15
00:01:12,810 --> 00:01:16,570
you can see that a message
pops up on our web page.

16
00:01:19,430 --> 00:01:22,720
This is enabled using a tooltip.

17
00:01:26,133 --> 00:01:31,150
Tooltips are a simple way of presenting
some information to the users.

18
00:01:31,150 --> 00:01:36,010
A tooltip pops up whenever
the users hovers onto a button or

19
00:01:36,010 --> 00:01:39,670
a link to which the tooltip
has been added.

20
00:01:39,670 --> 00:01:46,090
To add a tooltip to an a tag or a button
tag you will add three attributes.

21
00:01:47,360 --> 00:01:51,500
The first one,
data toggle is equal to tooltip

22
00:01:52,560 --> 00:01:57,270
specifies that the tooltip has
been added to the bottom tag.

23
00:01:57,270 --> 00:01:59,200
The second attribute,

24
00:01:59,200 --> 00:02:04,810
the title gives the message string
that'll be shown inside the tooltip.

25
00:02:04,810 --> 00:02:09,540
The third attribute is data placement,
which is either top,

26
00:02:09,540 --> 00:02:11,930
bottom, left, or right.

27
00:02:11,930 --> 00:02:15,990
And this specifies which direction
the tooltip is going to pop up.

28
00:02:18,300 --> 00:02:23,030
For the tooltip to work correctly,
you will also need to include a small

29
00:02:23,030 --> 00:02:27,590
amount of JavaScript code
at the end of your page.

30
00:02:27,590 --> 00:02:32,500
Right after where you import the bootstrap

31
00:02:32,500 --> 00:02:36,960
JavaScript classes,
you will include the script shown here.

32
00:02:36,960 --> 00:02:41,590
This script specifies that for all those

33
00:02:44,020 --> 00:02:49,200
tags to which the data toggle
tooltip attribute has been added,

34
00:02:49,200 --> 00:02:51,090
the tooltip will be enabled.

35
00:02:52,470 --> 00:02:58,580
Looking at the example of how you
allow tooltip to a on a button tag.

36
00:02:58,580 --> 00:03:04,990
Here, I have ironed the tooltip to
the a tag, by adding the data-toggle.

37
00:03:04,990 --> 00:03:09,080
And the data placement and
the title to the a tag here.

38
00:03:10,120 --> 00:03:12,980
This is what causes the tooltip to be

39
00:03:12,980 --> 00:03:17,545
popped up when you have it on
to the button in our webpage.

40
00:03:19,410 --> 00:03:23,820
Popovers, are a generalization
of tooltips.

41
00:03:23,820 --> 00:03:30,900
Popovers allow you to present both a title
as well as the content in the popover.

42
00:03:30,900 --> 00:03:34,370
The title will be presented
in bold at the top, and

43
00:03:34,370 --> 00:03:38,140
the content will be included
at the bottom of the popover.

44
00:03:38,140 --> 00:03:42,860
Popovers have to be also enabled
explicitly by including the JavaScript

45
00:03:42,860 --> 00:03:48,490
code shown in there into our web page.

46
00:03:48,490 --> 00:03:52,060
So as an example this
is what a popover will

47
00:03:52,060 --> 00:03:54,310
look like when you click on the button.

48
00:03:54,310 --> 00:03:59,740
So in this case we have associated
the popover with this button here,

49
00:03:59,740 --> 00:04:02,760
by including the data toggle as popover.

50
00:04:02,760 --> 00:04:07,590
The title with the information over
displayed in the popovers title, and

51
00:04:07,590 --> 00:04:12,230
the data content carries the information
to be displayed in the content part

52
00:04:12,230 --> 00:04:13,650
of the popover.

53
00:04:13,650 --> 00:04:17,520
Now the popover also can take placement

54
00:04:18,670 --> 00:04:23,070
attribute which specifies which
side a popover should be shown.

55
00:04:25,000 --> 00:04:28,675
In this example the popover will

56
00:04:28,675 --> 00:04:32,715
be triggered when you click on the button,
unlike tooltips,

57
00:04:32,715 --> 00:04:37,025
which will automatically appear when
you hover onto the button or the link.

58
00:04:37,025 --> 00:04:42,170
The popover has to be triggered by
clicking on the button or the link.

59
00:04:42,170 --> 00:04:45,140
And next time when you
click again on the button

60
00:04:45,140 --> 00:04:47,200
of the link the popover will be hidden.

61
00:04:47,200 --> 00:04:52,740
So the popover will remain open until you
click again onto the button of the link.

62
00:04:55,240 --> 00:05:00,430
Modals are a more gentle way of
presenting information to the users.

63
00:05:00,430 --> 00:05:06,680
Modals allow you to define the information
to represented in a lot more detail.

64
00:05:06,680 --> 00:05:09,270
You can even format the information and

65
00:05:09,270 --> 00:05:13,670
specify the information in
the form of many HTML code.

66
00:05:13,670 --> 00:05:20,420
The models contain both a header,
body, and a footer.

67
00:05:20,420 --> 00:05:24,460
Typically, you will include most of the
information in the body of the message.

68
00:05:24,460 --> 00:05:28,540
The footer is usually
used to include buttons,

69
00:05:28,540 --> 00:05:32,320
maybe cancel or an action button, okay?

70
00:05:32,320 --> 00:05:38,250
The header usually carries some
information about the specific modal.

71
00:05:39,660 --> 00:05:43,490
Let's look at an example and then come
back and examine how we create a modal.

72
00:05:44,540 --> 00:05:46,760
Going back to our web page, all right?

73
00:05:46,760 --> 00:05:50,300
You can see that there is a log in
link on the right side of the Nav bar.

74
00:05:50,300 --> 00:05:52,920
When you click on it, a modal will pop up.

75
00:05:52,920 --> 00:05:58,200
So you see that I have designed
this modal to include their

76
00:05:58,200 --> 00:06:03,180
log in form that previously
existed in the nav bar.

77
00:06:03,180 --> 00:06:06,600
So I have moved the form
into this modal here.

78
00:06:06,600 --> 00:06:11,800
So here, in this modal,
we can see that there is a header and

79
00:06:11,800 --> 00:06:14,660
the body of the model contains the font.

80
00:06:14,660 --> 00:06:17,470
This particular example
doesn't have a footer.

81
00:06:20,670 --> 00:06:22,730
Now looking at the modal example,

82
00:06:22,730 --> 00:06:27,840
you see that the modal is
created by defining a div, and

83
00:06:27,840 --> 00:06:34,090
giving it an ID, and
the class to be given to the div is modal.

84
00:06:34,090 --> 00:06:37,660
If you want the modal to
fade in when the button or

85
00:06:37,660 --> 00:06:42,720
the a tag is clicked, then we give
the fade class also to the modal.

86
00:06:42,720 --> 00:06:47,870
Inside the modal, we'll have an inner
div with the modal dialogue class.

87
00:06:47,870 --> 00:06:52,900
In addition you can specify the size
of the modal as modal hyphen lg or

88
00:06:52,900 --> 00:06:54,530
modal hyphen sm.

89
00:06:54,530 --> 00:06:59,400
The default size would be invoked
if you do not specify the size.

90
00:07:01,640 --> 00:07:05,680
The modal also includes an inner div.

91
00:07:05,680 --> 00:07:07,360
The modal content.

92
00:07:07,360 --> 00:07:12,800
Now inside the modal content div you would
include the header, body and the footer.

93
00:07:12,800 --> 00:07:17,580
The header will be another div
with the class model header.

94
00:07:17,580 --> 00:07:21,390
The body will be a div with the class
model body and then, of course,

95
00:07:21,390 --> 00:07:26,040
the footer will be a div
with the class modal footer.

96
00:07:26,040 --> 00:07:31,200
Now, in this example,
we are going to include the form HTML

97
00:07:31,200 --> 00:07:36,035
code inside the modal body
of this particular modal.

98
00:07:37,990 --> 00:07:39,780
How do you trigger the modal?

99
00:07:39,780 --> 00:07:45,360
To do that, you need to include in
the information in either the a tag.

100
00:07:45,360 --> 00:07:46,930
A button tag.

101
00:07:46,930 --> 00:07:51,900
So to an A tag or a button tag you will
give the data toggle as a modal, and

102
00:07:51,900 --> 00:07:56,070
the data target will be the ID
of the modal to be specified.

103
00:07:56,070 --> 00:08:02,630
So in this example, the login modal's
ID is specified as the data target.

104
00:08:02,630 --> 00:08:08,420
So that's why when the link,
the login link on the and

105
00:08:08,420 --> 00:08:12,610
navbar is clicked,
the modal pops up onto the webpage.

106
00:08:13,890 --> 00:08:16,420
We'll now move on to the next exercise.

107
00:08:16,420 --> 00:08:20,080
While we're there we will
consider tooltips and modals.

108
00:08:20,080 --> 00:08:24,470
So we introduce a tooltip so that when
the user hovers onto to the reserve table

109
00:08:24,470 --> 00:08:26,560
button, the tooltip also pops up.

110
00:08:27,880 --> 00:08:33,790
In addition, we'll have the login
form enclosed inside a modal,

111
00:08:33,790 --> 00:08:37,410
and so when the user clicks on
the login button in the nav bar,

112
00:08:37,410 --> 00:08:39,520
the modal will pop up on the screen.