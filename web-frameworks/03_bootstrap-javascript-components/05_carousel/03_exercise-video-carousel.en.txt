The carousel is a very
interesting Bootstrap complement. It presents a list of scrolling
images on the screen. So as the images scroll
one by one on the screen, it adds a lot of dynamism to your website. Now of course, sometimes you might find it
to be too distracting, but let's anyway explore the carousel components to
understand how we can configure it. Of course, as you realize the carousel
component is a JavaScript-based component, and so would require JavaScript
support for it to work correctly. We're gonna go to the index route HTML
page and add a carousel component. At the top of the page, right after the
restaurant's title, below the Jumbotron. Taking a look at
the index.html page I want to introduce the carousel right
after the jumbotron vec. I'm going to take the content
from the remaining three columns, the content columns of this page and
then move it into the carousel. Or rather I will just copy
it into the carousel. The carousel will be in its own row at
the top of the content part of the page. After I design the carousel,
we'll look at the entire web page, and then you can decide whether you like
the carousel better or to present the information in the form of consecutive
rows as we are doing at this moment. But in any case,
the carousel is an interesting component. So let's explore that to
understand how it works. Going to the HTML code I'm
going to introduce another row, a content row,
inside the container here and inside this content row I'm
going to introduce the carousel. So as you can see I have already
added the content row and set up a div inside to expand
the entire 12 columns. Now, inside this inner div,
I'm going to introduce the carousel. Let me introduce the basic code for
the carousel, and then we will look at
the code in more detail. To set up a carousel,
I need to introduce a div with a class carousel and
a class slide attached to this div. I'm going to give, this div and
Id as my carousel, and then also a data attribute
as data-ride carousel. Inside this div,
I have introduced another div with the class carousel-inner and
with the role list box. This carousel-inner contains
all the information that will be displayed on the carousel. Inside this div, we will introduce each item within
the carousel as a div with the class item. One of these divs will be
designated as active, so that is the one that
the carousel will begin with. Inside the item class,
I can include an image. So what I have done here is to take the
image that we already have for the dish that we introduced earlier, and then I
just pasted that image information here. Together with the image, I can also
have a caption being displayed for that carousel slide there. So, that is what I am supporting using
the div inside there with the class carousel-caption. Now, inside the div carousel-caption
I can include HTML code. So, what I have done is to take
the information from my first row, and then cut and
paste it inside this div here. Now, the same thing I'm going to do for
two more items in the carousel. So, the second item corresponds to
the second row of our existing HTML page, the image and the information from there. And the third item corresponds
to the third image from, rather, the third row from
our existing web page. After introducing these three items, we need to go and
fix a few things in our CSS file so that the carousel is properly
displayed on the screen. Moving to the mystyles.css file, I have introduced a few
additional CSS classes there. Let's take a quick look at them, and then understand what these
CSS classes are setting up. The first CSS class is of course carousel,
for which I am setting up the background
as a dark indigo color. This is the same color that I'm using for
my nav bar, the highlighted part of the nav bar, there,
just to match the color schemes. So, I'm using the same color for
the colors of background. Now that inside the carousel's
individual items I have set up their height to be 300 pixels. So my carousel's height will now be fixed. And the item's image that I include
in the carousel, I am specifying its position as absolute, with the top
left corners being set to 0, 0. So, this image that I include there
will be stuck on the left edge of this carousel slide, with the top and
left at point 0, 0. So the top corner and the left corner of
the image aligned with the top zero and left zero corner of the slide. And I have specified the image's
minimum height to be 300 pixels. So no matter what kind of
a range I put in there, the height will be appropriately
at least given to 300 pixels. If you include a larger image then
obviously the cursor will stretch to include the larger image Now,
with these changes, let's go and take a look at the web page and understand
how the carousel behaves on our web page. Returning to our web page, you can now see the carousel in place
in the web page in its own room. Now, I have put my mouse cursor on the
carousel, so the carousel is now stuck. So, if I remove the mouse cursor from
the carousel it will start sliding left after a certain delay. The default delay here is three seconds. So every three seconds,
the slide will move to the left. So this is the behavior of the carousel. Now, I'm gonna introduce two
new controls in to the close. The first control will show three dots towards the bottom of the carousel, which
will help me to select whichever slide item from the carousel that
is displayed on the screen. The second control that I will
introduce is a left and a right button on the left edge and the right edge of
the carousel, so that I can click them and then manually make the carousel
go left and right. So, first let me introduce
the carousel indicators here. So, within the carousel I
am using an ol class here. With the class set as carousel-indicators, and then inside here, I have specified
three list items, each of these with the data-target set to mycarousel,
which is the ID of the carousel. And then also the second attribute
that I have here is data slide two and then specifies which particular slide
I should go to zero, one, or two. In this example we have three slides
that I have already introduced so that's why we can have indicators there. Show which slide I would be able to go to. The next controls that I am
introducing into my carousel is that two edges of the carousel,
two buttons on the left and the right edge of the carousel,
which when clicked, will allow me to change the slides
manually within the carousel. So to implement that on
the left side I am introducing an a tag acting as a button. The width of the class is left and
carousel-control. And then the href pointing to
the mycarousel, the ID of this carousel, and the inside where I am using
a glyphicon the left chevron for this and the other one is
the right carousel control. And also using the right
chevron glyphicon. Now with these changes, let's go and have a look at our web page to
understand how it looks like. Going to your webpage, you can now see that at the bottom
you have now three dots here. One of them filled dot and
the remaining two are unfilled dots. These allow me to select
which slide I want to view. So, for example, if I want to go to the
third slide, I can just click on that, and then it'll show me the third slide,
or the second slide, and so on. So these indicators allow
me to navigate through the slides inside the carousel manually. Also, you can see that on the left
edge and the right edge, you have the chevrons displayed here, so these
are the left and right controls patterns, so I can click on this to go to
the next slide on the right side. Similarly, I can click on this to go
to the previous slide on the left side. So this manually allows you to page through the various slides
with your carousel. But this is an interesting component, and has a little more
dynamism to your picture.