1
00:00:01,890 --> 00:00:05,135
我们接下来将会学习
标签页 胶囊式标签页和页签导航

2
00:00:05,135 --> 00:00:10,100
在呈现内容给用户方面的一些应用

3
00:00:11,950 --> 00:00:16,930
显然对于任何一个网站
都有海量的内容可以呈现给用户

4
00:00:16,930 --> 00:00:21,580
但如果我们能将我们的内容
规划排版得好一些

5
00:00:21,580 --> 00:00:28,440
访问者将能更加容易地获取他们想要的信息

6
00:00:28,440 --> 00:00:32,990
而标签页和胶囊式标签页正是能够很好地
组织你想呈现的内容的东西

7
00:00:32,990 --> 00:00:36,940
它们都提供了一些导航元素

8
00:00:36,940 --> 00:00:40,720
然后内容则将会被封装在
一个个标签胶囊中

9
00:00:40,720 --> 00:00:44,370
我们接下来将会看到一些实例

10
00:00:46,470 --> 00:00:50,125
让我们先看一个简单的实例

11
00:00:50,125 --> 00:00:53,040
在这个栗子里 我们想要呈现的是

12
00:00:53,040 --> 00:00:57,920
我们餐厅的合作伙伴的

13
00:00:57,920 --> 00:00:59,930
领导人的一些信息

14
00:00:59,930 --> 00:01:06,185
如图所示 这些信息像胶囊一样被优雅地
放在了一个个标签下面

15
00:01:06,185 --> 00:01:11,785
这些标签的标题则是这些领导人的名字

16
00:01:11,785 --> 00:01:16,287
这就是页签导航的一个典型应用

17
00:01:16,287 --> 00:01:20,791
有了它 我们就能轻松地查看
我们想要了解的领导人的信息了

18
00:01:20,791 --> 00:01:24,470
事实上 页签导航

19
00:01:25,730 --> 00:01:31,220
让访问者免于被信息淹没不知所措

20
00:01:31,220 --> 00:01:35,470
作为替代 它让信息变得更有组织性

21
00:01:37,390 --> 00:01:43,780
这个简单的栗子已经比较好地说明了
胶囊式标签页在

22
00:01:43,780 --> 00:01:48,840
组织和导航内容上的威力

23
00:01:50,700 --> 00:01:55,515
让我们接下来看一看

24
00:01:55,515 --> 00:01:58,500
如何具体地实现这个简单的栗子

25
00:01:59,730 --> 00:02:07,030
为了实现页签导航 我们需要用到 ul 标签

26
00:02:07,030 --> 00:02:10,170
并且对其我们要设置
class="nav nav-tabs"

27
00:02:10,170 --> 00:02:12,220
其中 nav 表明着这将会是一个导航元素

28
00:02:12,220 --> 00:02:17,320
nav-tabs 则起着定制样式的作用
我们下面将会提到这是什么意思

29
00:02:17,320 --> 00:02:21,880
然后在这个 ul 下面 每一个 li 标签都需要设置

30
00:02:21,880 --> 00:02:27,080
role="presentation"

31
00:02:27,080 --> 00:02:33,400
这个设置会实现
如屏幕上方的图片中的效果

32
00:02:35,420 --> 00:02:40,390
然后在每个 li 下面则是一个 a 标签

33
00:02:40,390 --> 00:02:44,740
对其要通过 href 属性来指定
这个 a 标签导航到的地方

34
00:02:44,740 --> 00:02:48,850
指定的方法有很多 这里我们用的是指定 id

35
00:02:50,130 --> 00:02:54,680
需要注意的是 在所有这些 li 中
有一个是要设置 class="active" 的

36
00:02:54,680 --> 00:02:59,190
这意味着它将会是在当前网页被访问时

37
00:02:59,190 --> 00:03:03,080
默认打开的标签页

38
00:03:04,580 --> 00:03:09,990
我说过 nav-tabs 是拿来定制样式的 所以作为替代
我们可以用 nav-pills 来获得另一种样式

39
00:03:09,990 --> 00:03:16,360
它和 nav-tabs 的区别仅仅在于外观

40
00:03:16,360 --> 00:03:22,120
通过对比现在屏幕上方的图

41
00:03:22,120 --> 00:03:27,270
和之前屏幕上方的图

42
00:03:27,270 --> 00:03:31,247
我相信你可以找到它们的不同之处

43
00:03:31,247 --> 00:03:36,570
需要注意的地方也是一样的
就是对其中一个 li 设置 class="active"

44
00:03:36,570 --> 00:03:39,970
我在这里是设置了第一个 li 为 active
所以第一个 li 看上去就和一个胶囊长得很像

45
00:03:40,990 --> 00:03:46,180
总而言之 nav-tabs 和 nav-pills 提供的功能

46
00:03:46,180 --> 00:03:50,200
是一毛一样的

47
00:03:50,200 --> 00:03:55,750
你只用基于外观来选择你到底要用哪个

48
00:03:57,990 --> 00:04:02,337
需要注意的是 我们还可以应用
nav-justified 这个类

49
00:04:02,337 --> 00:04:07,381
当你需要让你的导航元素充满

50
00:04:07,381 --> 00:04:12,692
它所能充满的整行时

51
00:04:12,692 --> 00:04:16,941
你就可以应用它

52
00:04:16,941 --> 00:04:22,122
不过要注意的是
这时各元素会按比例分配宽度

53
00:04:22,122 --> 00:04:26,463
我们还可以通过 disabled 类

54
00:04:26,463 --> 00:04:30,812
来无效化某个特定的元素

55
00:04:32,512 --> 00:04:34,162
然后就是 pills 会额外地提供你一个方法

56
00:04:34,162 --> 00:04:38,932
这个方法允许你让胶囊式标签页竖着堆叠

57
00:04:38,932 --> 00:04:44,050
而不是如默认般那样横着排列

58
00:04:44,050 --> 00:04:49,000
nav-tabs 只能横着排列

59
00:04:49,000 --> 00:04:53,927
nav-pills 则可以通过 nav-stacked 来使各元素

60
00:04:53,927 --> 00:04:58,220
在屏幕上竖着叠在一起

61
00:04:58,220 --> 00:05:02,490
在下节课里 我们将会学习 nav-pills 的
各种应用

62
00:05:04,050 --> 00:05:06,250
至于每个标签的具体内容

63
00:05:07,480 --> 00:05:12,360
则需要封装在一个 div 下面

64
00:05:12,360 --> 00:05:16,530
这个 div 需要设置 class="tab-pane"

65
00:05:16,530 --> 00:05:19,000
然后在 div 的下面 你就可以把你想放在
标签中的内容都扔进去

66
00:05:19,000 --> 00:05:23,768
最后 你还需要用一个设置了
class="tab-content" 的 div

67
00:05:23,768 --> 00:05:26,720
把所有这些设置了 tab-pane 的 div
都封装起来

68
00:05:27,720 --> 00:05:32,800
然后其中一个 tab-pane div 则需要设置
class="active"

69
00:05:32,800 --> 00:05:38,130
它和之前设置了 active 的 tab 相互呼应

70
00:05:38,130 --> 00:05:42,480
也就是说它是默认呈现的内容

71
00:05:44,240 --> 00:05:47,045
回到我们最初呈现的那个简单栗子

72
00:05:47,045 --> 00:05:52,370
让我们看看它背后的代码吧

73
00:05:52,370 --> 00:05:58,460
你可以看到有一个设置了
class="nav-tabs" 的 ul

74
00:05:58,460 --> 00:06:05,630
然后你可以看到
一个 tab-content 和若干个 tab-pane

75
00:06:06,700 --> 00:06:12,835
它们的层次关系和我之前说的一样

76
00:06:14,730 --> 00:06:19,131
还需要注意的是 我们需要把这两块联系起来

77
00:06:19,131 --> 00:06:24,550
这是通过 nav-tabs 下的
a 标签的 href 属性实现的

78
00:06:24,550 --> 00:06:29,780
通常来说我们在这会使用 id 来指定

79
00:06:29,780 --> 00:06:36,530
其对应关系如图所示

80
00:06:36,530 --> 00:06:42,360
我们之前学过如何用 id 

81
00:06:42,360 --> 00:06:48,220
来指定特定的 HTML 元素

82
00:06:48,220 --> 00:06:56,380
这里的用法和之前是一样的

83
00:06:56,380 --> 00:07:01,210
最后需要注意的是
为了使这个页签导航正确工作

84
00:07:01,210 --> 00:07:06,530
对 ul 下面的每一个 li, 我们要设置
data-toggle="tab"

85
00:07:08,080 --> 00:07:12,520
那么接下来我们将会进行一个练习

86
00:07:12,520 --> 00:07:16,660
在这个练习中 我们将亲自实现一个标签页

87
00:07:16,660 --> 00:07:20,196
具体而言 我们将会修改我们的 aboutus.html

88
00:07:20,196 --> 00:07:25,955
在其中 我们将用一个页签导航
来组织那些内容

89
00:07:25,955 --> 00:07:30,727
我们将会把每块内容封装进 tab-pane 中

90
00:07:30,727 --> 00:07:33,711
并把所有 tab-pane 都封装在 tab-content 下
【翻译 - Carefree0910】