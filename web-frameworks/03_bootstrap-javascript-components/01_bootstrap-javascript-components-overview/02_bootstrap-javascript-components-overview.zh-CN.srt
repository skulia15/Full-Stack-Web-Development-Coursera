1
00:00:02,460 --> 00:00:07,480
在前面一些课里我们学习了一系列

2
00:00:07,480 --> 00:00:11,610
通过 CSS 类来实现的 Bootstrap 组件

3
00:00:11,610 --> 00:00:17,000
接下来我们将会学习 JavaScript
对 Bootstrap 组件的支持

4
00:00:17,000 --> 00:00:21,253
所有我们接下来将要学习到的组件

5
00:00:21,253 --> 00:00:25,515
都需要有 JavaScript 插件作为基础

6
00:00:28,057 --> 00:00:31,589
正如我们已经学习过的

7
00:00:31,589 --> 00:00:36,838
Bootstrap 提供了很多 CSS 类
你可以通过在许多 HTML 元素上应用它们

8
00:00:36,838 --> 00:00:42,760
来创建 Bootstrap 组件

9
00:00:42,760 --> 00:00:45,910
事实上 仅仅通过应用一些 Bootstrap 类

10
00:00:45,910 --> 00:00:50,520
就可以创建这些非常棒的组件了

11
00:00:50,520 --> 00:00:54,970
但这样会有一个问题

12
00:00:54,970 --> 00:01:00,250
那就是你将完全忽视掉
JavaScript 插件的强大功用

13
00:01:00,250 --> 00:01:04,680
以及一些基于 JavaScript 的 Bootstrap 组件

14
00:01:04,680 --> 00:01:09,530
那么接下来就让我们学习如何应用

15
00:01:09,530 --> 00:01:13,120
Bootstrap 的基于 JavaScript 的组件

16
00:01:15,350 --> 00:01:19,220
正如我们已经学习过的 许多组件都是以

17
00:01:19,220 --> 00:01:25,400
一个基础 CSS 类来作为最外层的封装的
比如说实现按钮时的 "class=btn"

18
00:01:25,400 --> 00:01:31,940
又或是实现表格时的 "class=form"
或者 "class=table"

19
00:01:31,940 --> 00:01:36,810
如果想要实现更多的效果
我们需要在这最外层封装的属性设置中

20
00:01:36,810 --> 00:01:41,860
加入其它一些 CSS 类别

21
00:01:43,440 --> 00:01:46,670
我们以按钮为例

22
00:01:46,670 --> 00:01:52,430
如果单纯地应用 "class=btn"
那么就将会是一个最简单的按钮

23
00:01:52,430 --> 00:02:00,515
如果想要设置颜色的话
就需要诸如 "class=btn-default" 这样的设置了

24
00:02:00,515 --> 00:02:03,545
又或是想要设置大小的话 就是 btn-xs 之类的

25
00:02:03,545 --> 00:02:07,467
我们甚至能够设置其 block 属性
亦即设置其是否填充整行

26
00:02:07,467 --> 00:02:13,627
总结起来 就是在 btn 这个基类之后

27
00:02:13,627 --> 00:02:18,657
我们还能根据我们的需要来增添一些
其它用来修饰的类

28
00:02:19,907 --> 00:02:27,367
类似的还有我们学过的 nav 类

29
00:02:27,367 --> 00:02:32,320
它用于创建导航栏中的组件

30
00:02:32,320 --> 00:02:37,590
它也有诸如 navbar-nav 这样的用于修饰的类

31
00:02:37,590 --> 00:02:42,180
在本节课中 我们将会重新学习这个 nav 类

32
00:02:42,180 --> 00:02:47,370
不过我们这次将主要学习
nav-tabs 和 nav-pills 类的使用

33
00:02:47,370 --> 00:02:50,840
它们能够创建出一些不同的有意思的导航元件

34
00:02:52,980 --> 00:02:57,700
那么 让我们先谈谈 Bootstrap 的 JavaScript 插件
本身是什么东西

35
00:02:57,700 --> 00:03:03,680
事实上 JavaScript 对 Bootstrap 的支持
就是通过各种 JavaScript 插件来完成的

36
00:03:03,680 --> 00:03:09,730
这些插件是建立在 jQuery 上的
所以要想让这些插件发挥作用的话

37
00:03:09,730 --> 00:03:15,190
你需要引入 jQuery

38
00:03:15,190 --> 00:03:20,320
那也是为什么当我们引入
Bootstrap 的 JavaScript 组件时

39
00:03:20,320 --> 00:03:24,180
我们同时引入了 jQuery

40
00:03:25,600 --> 00:03:29,170
这些插件都被设计得足够独立
这意味着一般来说你只需要引入

41
00:03:29,170 --> 00:03:31,870
你需要的那些插件

42
00:03:31,870 --> 00:03:35,455
当然一下子引入所有插件也是可行的

43
00:03:38,450 --> 00:03:43,471
这张图可能可以给你

44
00:03:43,471 --> 00:03:46,930
JavaScript, jQuery 和 Bootstrap 组件之间关系
的一个直观理解

45
00:03:46,930 --> 00:03:51,690
如果你把 JavaScript 看成是一个巨大的相扑选手

46
00:03:51,690 --> 00:03:55,950
那么 jQuery 就是一个压缩版的相扑选手

47
00:03:55,950 --> 00:04:00,610
比起 JavaScript, 使用它会更加容易

48
00:04:00,610 --> 00:04:04,930
因为有许多有趣的 jQuery 组件能够在

49
00:04:04,930 --> 00:04:12,390
很多方面帮助到你的 web 开发

50
00:04:12,390 --> 00:04:15,800
至于 Bootstrap 则还多做了一步

51
00:04:15,800 --> 00:04:20,935
它将一些 jQuery 插件封装了起来
你可以理解成将它们装进了一个小盒子

52
00:04:20,935 --> 00:04:25,575
从而可以单独地方便地使用它们

53
00:04:26,705 --> 00:04:30,285
你应该很快就能发现你可以
在一行 JavaScript 代码也不写的情况下

54
00:04:30,285 --> 00:04:34,045
使用 Bootstrap 的相关组件

55
00:04:34,045 --> 00:04:38,535
这也是使用 Bootstrap 的 JavaScript 组件的
优势之一

56
00:04:38,535 --> 00:04:42,110
不过相应的 这会使其灵活性大大降低

57
00:04:42,110 --> 00:04:45,980
毕竟一行代码都不写意味着难以定制

58
00:04:47,890 --> 00:04:52,170
那么怎么才能引用 Bootstrap 的 JavaScript 插件呢

59
00:04:53,390 --> 00:04:57,744
事实上我们已经在我们代码底部写了

60
00:04:57,744 --> 00:05:05,090
引入 jQuery 库以及 Bootstrap 完整的
JavaScript 插件集

61
00:05:05,090 --> 00:05:11,650
的两块代码

62
00:05:13,520 --> 00:05:17,850
我想再提一下的是 Bootstrap 的 JavaScript 组件

63
00:05:17,850 --> 00:05:19,670
可以在不写一行 JavaScript 代码的情况下使用

64
00:05:19,670 --> 00:05:22,740
这是因为 Bootstrap 有一系列

65
00:05:22,740 --> 00:05:24,608
优先级很高的接口

66
00:05:24,608 --> 00:05:28,726
这些接口是通过 data-xxx 属性来接入的

67
00:05:28,726 --> 00:05:34,910
其中 xxx 可以是 toggle, spy 之类的

68
00:05:34,910 --> 00:05:38,770
Bootstrap JS 组件定义的属性

69
00:05:38,770 --> 00:05:41,650
当你想在你的网页中使用这些组件时

70
00:05:41,650 --> 00:05:46,110
直接将相应的  HTML 元件的 class
设置为相应的属性即可

71
00:05:46,110 --> 00:05:49,440
然后你就可以在
不写一行 JavaScript 代码的情况下

72
00:05:49,440 --> 00:05:52,340
使用相应的 JavaScript 组件了

73
00:05:53,340 --> 00:05:58,350
当然也正如我所提及的 这会使灵活性大大降低

74
00:05:58,350 --> 00:06:06,580
如果想要做更多的定制
则还是要写一些 jQuery 代码的

75
00:06:06,580 --> 00:06:11,480
不过即使只用 data-xxx 属性

76
00:06:11,480 --> 00:06:15,230
也能实现很多功能了

77
00:06:15,230 --> 00:06:18,550
而这也正是我们接下来要学习的

78
00:06:18,550 --> 00:06:25,290
我们将会学习一套相当完备的 JavaScript 接口

79
00:06:27,070 --> 00:06:32,290
它们将会帮助你比较全面地掌握
你需要掌握的 jQuery 语法

80
00:06:32,290 --> 00:06:38,060
以及 JavaScript 的相关知识
【翻译 - Carefree0910】