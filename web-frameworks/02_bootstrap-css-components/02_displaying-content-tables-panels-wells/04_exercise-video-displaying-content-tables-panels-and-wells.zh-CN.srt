1
00:00:01,440 --> 00:00:07,490
在这个练习里面 我们将会学习如何
实现表格 面板和 wells

2
00:00:07,490 --> 00:00:13,330
来显示我们网页中的一些内容

3
00:00:13,330 --> 00:00:14,482
我们将会对我们的

4
00:00:14,482 --> 00:00:19,039
aboutus.html 文件做一些更改

5
00:00:19,039 --> 00:00:22,448
我们会先加进一个表格

6
00:00:22,448 --> 00:00:27,490
从而学习 Bootstrap 对表格的
一些定制方式

7
00:00:27,490 --> 00:00:31,900
接着我们会加进
一个含有一些信息的面板

8
00:00:31,900 --> 00:00:35,950
最后 我们会加进 well
来显示一个引用的内容

9
00:00:35,950 --> 00:00:40,580
通过这一系列工作 我们将会学到

10
00:00:40,580 --> 00:00:45,110
如何用更有趣的方式来
组织和呈现我们网页中的内容

11
00:00:46,840 --> 00:00:51,380
先来看看我们
aboutus.html 网页目前的状况

12
00:00:51,380 --> 00:00:55,700
你可以看到在右手侧这边

13
00:00:55,700 --> 00:01:00,370
有一些空白的地方

14
00:01:00,370 --> 00:01:04,861
我将会在这个空白处
加进一个面板以呈现一些信息

15
00:01:04,861 --> 00:01:10,994
然后在这个 Our History 的下面

16
00:01:10,994 --> 00:01:17,938
我将会加进一个 well
来显示一个引用的内容

17
00:01:17,938 --> 00:01:23,300
接着在页面的底部
我将会加进一个新的 row

18
00:01:23,300 --> 00:01:29,650
然后在这个 row 中
我会放一个包含我们餐厅信息的表格

19
00:01:29,650 --> 00:01:30,700
在实现这个表格的过程

20
00:01:30,700 --> 00:01:34,750
我们会学到
Bootstrap 对表格的一些定制方法

21
00:01:37,020 --> 00:01:41,860
来到代码部分

22
00:01:41,860 --> 00:01:47,290
在 Corporate Leadership
对应的 row 的这一大坨代码下面

23
00:01:47,290 --> 00:01:52,350
我会加进一个新的
叫 Facts and Figures 的 row

24
00:01:52,350 --> 00:01:57,800
然后在这个 row 里面 我会加进一个

25
00:01:57,800 --> 00:02:01,090
显示一些餐厅信息的表格

26
00:02:01,090 --> 00:02:06,450
让我先把代码贴好
然后我们再看其具体意思

27
00:02:08,650 --> 00:02:13,910
不过在此之前 不如先来看看

28
00:02:13,910 --> 00:02:18,910
那些代码的效果吧

29
00:02:18,910 --> 00:02:22,138
当你回到网页中时

30
00:02:22,138 --> 00:02:28,335
你会发现这里多了个表格

31
00:02:28,335 --> 00:02:33,335
特别的 你能发现这个表格

32
00:02:33,335 --> 00:02:39,499
相邻两行的颜色深浅不一致

33
00:02:39,499 --> 00:02:45,880
这就能帮我们更好地分清
行与行之间的信息

34
00:02:45,880 --> 00:02:51,470
在 Bootstrap 中 该功能
对应的类叫做 table-striped

35
00:02:51,470 --> 00:02:56,097
接下来让我们具体看看怎么

36
00:02:56,097 --> 00:02:59,227
实现这个表格吧

37
00:03:03,515 --> 00:03:08,547
回到代码部分 现在你能看到
我已经通过一个设置了

38
00:03:08,547 --> 00:03:13,920
class="row row-content" 的 div
来加进了一个新的 row

39
00:03:13,920 --> 00:03:19,030
然后其中 通过设置了 class="col-xs-12 ..." 的 div
我声明了一个 column

40
00:03:19,030 --> 00:03:22,910
然后在这个 column 里面
就是那个表格所对应的代码了

41
00:03:24,790 --> 00:03:31,410
注意到我将表格主体内容的代码
封装进了一个设置了

42
00:03:31,410 --> 00:03:35,759
class="table-responsive" 的 div
这将使得该表格变成响应式表格

43
00:03:35,759 --> 00:03:38,606
从而如果该表格在一个很小的屏幕上显示时
它能够恰当地调整它的表现

44
00:03:38,606 --> 00:03:42,425
比如如果屏幕太窄而实在放不下
该表格的所有内容

45
00:03:42,425 --> 00:03:47,704
那么该表格将自动提供一个

46
00:03:47,704 --> 00:03:50,863
左右滚动的滚动条

47
00:03:50,863 --> 00:03:58,035
那么对于该表格的主体内容
我用了 HTML 中的 table 标签来实现

48
00:03:58,035 --> 00:03:59,352
注意到我对该 table 标签设置了

49
00:03:59,352 --> 00:04:03,995
class="table table-striped"

50
00:04:03,995 --> 00:04:09,484
其中 table-striped 一项定制了
"表格相邻的两行颜色深浅不同"这一效果

51
00:04:09,484 --> 00:04:13,800
而 table 一项则清晰地告诉着 Bootstrap
"这将是一个表格而不是其它东西"

52
00:04:13,800 --> 00:04:18,115
事实上 人们常常将 table 标签

53
00:04:18,115 --> 00:04:20,840
用于其它用途而不是用作一个表格

54
00:04:20,840 --> 00:04:26,000
由于我们这里确实是在实现表格
所以我们做了一个声明

55
00:04:26,000 --> 00:04:31,400
声明的方式即是在 class 属性里面
放一个 "table"

56
00:04:31,400 --> 00:04:37,667
之前也说过 table-striped 这一项
是拿来定制表格外观的

57
00:04:37,667 --> 00:04:42,730
它使得表格相邻两行的
颜色深浅不一致

58
00:04:42,730 --> 00:04:48,440
从而使得表格的内容
以更清晰的形式呈现出来

59
00:04:48,440 --> 00:04:52,880
Bootstrap 有很多定制表格的类

60
00:04:52,880 --> 00:04:54,270
如果你想对它们了解得更深的话

61
00:04:54,270 --> 00:04:59,890
最好还是试着自己应用一下它们

62
00:05:00,970 --> 00:05:05,710
现在 当我设置好了
table 标签的 class 属性后

63
00:05:05,710 --> 00:05:08,245
这个表格最后看上去就会和我们
之前看到的那个表格差不多了

64
00:05:08,245 --> 00:05:12,717
我们不必在对表格中的每一项内容
再应用 Bootstrap 的类

65
00:05:12,717 --> 00:05:15,230
只需正常地把普通表格的代码写好即可

66
00:05:15,230 --> 00:05:18,288
那么先是一个代表着表头的行
注意表格的每一行都是封装在 tr 标签里的

67
00:05:18,288 --> 00:05:25,910
在这个 tr 标签里面 就是该行的所有内容

68
00:05:25,910 --> 00:05:30,780
其中每一列又要封装在一个标签中
特别的 表头是要封装在 th 中

69
00:05:30,780 --> 00:05:35,560
这样会使其字体变成粗体

70
00:05:35,560 --> 00:05:40,000
总之这一行里面的东西

71
00:05:40,000 --> 00:05:42,880
就是该表格的表头

72
00:05:42,880 --> 00:05:46,420
然后从下一行开始
就是表格的具体内容了

73
00:05:46,420 --> 00:05:51,160
注意到我们表格的第一列也是表头

74
00:05:51,160 --> 00:05:55,827
所以从第二行开始
第一个元素总是 th 标签

75
00:05:55,827 --> 00:06:01,030
然后从第二个元素开始就是表格体
所以我用的都是 td 标签

76
00:06:01,030 --> 00:06:07,256
按照这个格式一直往下写就行

77
00:06:07,256 --> 00:06:12,602
那么这就是应用 Bootstrap 类

78
00:06:12,602 --> 00:06:17,490
来向网页中添加表格的方法

79
00:06:17,490 --> 00:06:18,930
回到我们的网页

80
00:06:18,930 --> 00:06:24,160
接下来我们要添加的是面板

81
00:06:24,160 --> 00:06:32,560
面板允许你将一块信息封装在
一个小盒子里面

82
00:06:32,560 --> 00:06:35,030
现在当我往上滚动我们的页面时

83
00:06:35,030 --> 00:06:39,340
能够看见右边这里有些空白

84
00:06:39,340 --> 00:06:44,700
我将会利用这些空白
并于其中放置一个面板

85
00:06:44,700 --> 00:06:48,194
事实上 我想让这里有
更多的地方来放进我的面板

86
00:06:48,194 --> 00:06:51,891
所以我将会把分配给左边这些内容
的列的数量减少

87
00:06:51,891 --> 00:06:56,780
不过仅限于放面板的这一行

88
00:06:56,780 --> 00:07:00,954
我将会把分配给这些内容的列数
减少为 8 列

89
00:07:00,954 --> 00:07:07,770
从而我能有 4 列来放面板

90
00:07:07,770 --> 00:07:12,160
接下来我会先搞好代码部分

91
00:07:12,160 --> 00:07:15,990
然后我们先看看效果如何

92
00:07:15,990 --> 00:07:17,780
之后再来看看代码具体是怎么写的

93
00:07:17,780 --> 00:07:21,960
那么在弄好之后

94
00:07:21,960 --> 00:07:23,973
你可以看到右边这里有了一个面板

95
00:07:23,973 --> 00:07:26,828
这个面板呈现了一些信息

96
00:07:26,828 --> 00:07:33,230
你可以看到这个面板有个标题

97
00:07:33,230 --> 00:07:38,976
然后也有一些主体内容

98
00:07:38,976 --> 00:07:44,722
我在这里使用了描述表

99
00:07:44,722 --> 00:07:48,613
也就是 HTML 里面的 dl 标签

100
00:07:48,613 --> 00:07:53,290
它呈现出来的样式就是这样的

101
00:07:53,290 --> 00:07:54,280
接下来让我们去看看代码

102
00:07:54,280 --> 00:07:58,040
并理解这些代码是怎么运作的吧

103
00:07:58,040 --> 00:08:01,320
来到代码部分 你可以看到我用了一个设置了
class="panel panel-primary" 的 div

104
00:08:02,600 --> 00:08:07,640
来实现这个面板

105
00:08:07,640 --> 00:08:11,970
注意其中 panel-primary 是用来
定制该面板的颜色的

106
00:08:11,970 --> 00:08:16,929
这就是为什么我们的面板是蓝色的

107
00:08:16,929 --> 00:08:21,400
因为我用的是 primary

108
00:08:21,400 --> 00:08:24,176
然后在这个 div 下面
你可以看到我放了两个 div

109
00:08:24,176 --> 00:08:26,705
我对第一个设置了
class="panel-heading"

110
00:08:26,705 --> 00:08:31,350
意味着该 div 代表着该面板的标题

111
00:08:31,350 --> 00:08:36,925
所以在这个 div 里面我用了一个设置了
class="panel-title" 的 h3 标签

112
00:08:36,925 --> 00:08:41,840
然后 h3 标签里面的内容
即是该面板的标题内容

113
00:08:41,840 --> 00:08:44,350
我对第二个 div 则设置了
class="panel-body"

114
00:08:44,350 --> 00:08:48,160
这其中的内容将会是该面板的主体内容

115
00:08:49,783 --> 00:08:56,720
你可以看到我用了描述表 也就是 dl 标签
来作为主体内容的表现

116
00:08:56,720 --> 00:09:00,700
我对 dl 标签 设置了
class="dl-horizontal"

117
00:09:00,700 --> 00:09:05,710
意味着这个描述表的内容是

118
00:09:05,710 --> 00:09:10,150
从左往右来看的

119
00:09:10,150 --> 00:09:15,580
项目在左边 描述在右边

120
00:09:15,580 --> 00:09:19,132
描述表中的内容是一组一组的
每一组包含一个项目和一个描述

121
00:09:19,132 --> 00:09:23,808
项目要用 dt封装

122
00:09:23,808 --> 00:09:27,537
描述则要用 dd 来封装

123
00:09:27,537 --> 00:09:34,610
一个 dt 对应一个 dd
dt 和 dd 加起来是为一组

124
00:09:34,610 --> 00:09:40,212
所以你可以看到我在这

125
00:09:40,212 --> 00:09:43,830
重复写了四个 dt 和 dd

126
00:09:43,830 --> 00:09:47,830
是故在面板里面 我们能看到四组内容

127
00:09:49,760 --> 00:09:53,405
在解释完代码的作用后

128
00:09:53,405 --> 00:09:56,821
让我们回来再看一下我们的面板

129
00:09:56,821 --> 00:09:59,567
并看看其实际表现是否
和我刚才所说的一致

130
00:09:59,567 --> 00:10:02,249
事实上 这个面板确实有一个蓝色的标题
然后主体内容里面确实有四组数据

131
00:10:02,249 --> 00:10:07,810
面板通常用于强调
你网页中的某些信息

132
00:10:07,810 --> 00:10:13,190
我认为这是一个
非常有趣且实用的组件

133
00:10:13,190 --> 00:10:16,690
在我们设计网页时
不妨常常考虑一下能否使用它吧

134
00:10:18,740 --> 00:10:23,240
我们最后要实现的组件就是 well 了

135
00:10:23,240 --> 00:10:30,680
我将会在这一行这里放一个 well
来显示一个引用的句子

136
00:10:30,680 --> 00:10:36,762
同时 我会用 Bootstrap

137
00:10:36,762 --> 00:10:41,094
来定制这个引用和这个 well

138
00:10:41,094 --> 00:10:46,270
让我把代码搞好 然后来看看效果吧

139
00:10:46,270 --> 00:10:51,830
那么这就是使用 well 的效果

140
00:10:51,830 --> 00:10:56,434
在这个 well 里面
我放了一个引用的句子

141
00:10:56,434 --> 00:11:01,450
同时 我用了 Bootstrap 里面的 blockquote
来定制这个引用以及这个 well

142
00:11:01,450 --> 00:11:03,499
当我使用 blockquote 时

143
00:11:03,499 --> 00:11:09,032
左边这里就会有一个竖杠

144
00:11:09,032 --> 00:11:13,126
当然 blockquote 的功用不限于此

145
00:11:13,126 --> 00:11:18,070
接下来就让我们看看代码

146
00:11:18,070 --> 00:11:24,700
并学习如何实现这么一个 well 吧

147
00:11:24,700 --> 00:11:27,700
回到代码部分

148
00:11:27,700 --> 00:11:34,160
你可以看到我用了一个设置了
class="well" 的 div 来实现 well

149
00:11:34,160 --> 00:11:39,562
如果你想定制该 well 的大小的话
只需要在 class 属性中

150
00:11:39,562 --> 00:11:44,995
追加诸如 well-lg, well-xm 这样的类即可

151
00:11:44,995 --> 00:11:49,945
如果不指定 well 的大小的话
那么它就会使用默认的 well 的大小

152
00:11:49,945 --> 00:11:53,375
我就是这样做的

153
00:11:53,375 --> 00:11:59,140
然后在这个 div 里面
你可以封装进任何内容

154
00:11:59,140 --> 00:12:06,350
我在这则是用了一个 blockquote
来封装一个引用的句子

155
00:12:06,350 --> 00:12:12,097
正如我之前所说 用了 blockquote 之后
其中的内容的左边将会有一个竖杠

156
00:12:12,097 --> 00:12:17,530
这是 Bootstrap 帮你做的一件事

157
00:12:17,530 --> 00:12:23,330
这在一定程度上起到了高亮的作用

158
00:12:23,330 --> 00:12:24,435
然后在这个 blockquote 里面

159
00:12:24,435 --> 00:12:29,910
你可以看到我用了一个 p 标签
来封装我引用的那个句子

160
00:12:29,910 --> 00:12:33,690
接着我还用了一个 footer 标签

161
00:12:35,040 --> 00:12:40,194
在其中放的则是说那个句子的人

162
00:12:40,194 --> 00:12:45,290
在这个栗子里 说这句话的人

163
00:12:45,290 --> 00:12:48,360
是一个叫 Yogi Berra 的人

164
00:12:48,360 --> 00:12:52,270
我觉得他说的这句话足够有趣
所以我就引用了它

165
00:12:52,270 --> 00:12:58,440
你可以看到我还用了一个 cite 标签

166
00:12:58,440 --> 00:13:02,720
这将会将样式定制得更好看一些

167
00:13:02,720 --> 00:13:06,830
注意到我设置了
title="Source Title"

168
00:13:06,830 --> 00:13:09,660
然后将对 Yogi Berra 的描述放了进去

169
00:13:09,660 --> 00:13:13,082
这些设置将会使这些文字的样式
和平时我们看到的其他网站上的引用的样式一致

170
00:13:14,901 --> 00:13:19,136
回到我们的网页
并看一看这个 well 的表现

171
00:13:19,136 --> 00:13:24,222
你可以看到里面这个引用的格式相当好看
而这是通过应用 well 和 blockquote 之后

172
00:13:24,222 --> 00:13:26,870
Bootstrap 来帮我们做好的

173
00:13:27,890 --> 00:13:30,600
以上 我们完成了这次练习

174
00:13:30,600 --> 00:13:36,191
在这个练习里 我们学习了如何实现
表格 面板和 well

175
00:13:36,191 --> 00:13:42,690
以呈现我们网页上的一些内容

176
00:13:42,690 --> 00:13:47,010
事实上 这些组件的应用场合非常多
应用它们的方式也有很多

177
00:13:47,010 --> 00:13:49,840
在这个练习里面 我们只是说到了其中的一部分
来让你对它们有个初步的了解

178
00:13:49,840 --> 00:13:53,242
基于你的需要 你完全可以在
更实际 更复杂的情境中

179
00:13:53,242 --> 00:13:57,130
利用它们来解决问题
【翻译 - Carefree0910】